Currently the supported channel options are only used for "configuring encryption":/realtime/encryption.

blang[jsall].
  @ChannelOptions@, a plain Javascript object, may optionally be specified when instancing a "@Channel@":/realtime/channels-messages, and this may be used to specify channel-specific options. The following attributes can be defined on the object:

blang[ruby].
  @ChannelOptions@, a Hash object, may optionally be specified when instancing a "@Channel@":/realtime/channels-messages, and this may be used to specify channel-specific options. The following key symbol values can be added to the Hash:

blang[java].
  @io.ably.lib.types.ChannelOptions@ may optionally be specified when instancing a "@Channel@":/realtime/channels-messages, and this may be used to specify channel-specific options.

h4.
  default: Properties
  java:    Members
  ruby:    Attributes

- <span lang="default">@cipher@</span><span lang="ruby">@:cipher_params@</span> := Requests encryption for this channel when not null, and specifies encryption-related parameters (such as algorithm, chaining mode, key length and key). See "an example":/realtime/encryption#getting-started<br>__Type: either "@CipherParams@":/realtime/encryption#cipher-params<span lang="ruby,jsall">, or <span lang="jsall">an options object</span><span lang="java">a Param[] list</span><span lang="ruby">an options hash</span> containing at a minimum a @key@ key</span>__

<div lang="java">
h4. Static methods

h6(#with-cipher-key). withCipherKey

bq(definition). public static ChannelOptions.withCipherKey(Byte[] or String key)

A helper method to generate a @ChannelOptions@ for the simple case where you only specify a key.

h4. Parameters

- key := A binary @Byte[]@ array or a base64-encoded @String@.

h4. Returns

On success, the method returns a complete @ChannelOptions@ object. Failure will raise an "@AblyException@":/realtime/types/#ably-exception.
</div>
