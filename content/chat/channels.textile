---
title: Channels
meta_description: "Channels bring forward the capability to provide realtime communication between multiple people."
product: chat
languages:
  - javascript
---

Channels are the core functionality of any chat application or application featuring Ably chat features. They enable the separation of chats and their messages into categories. For example, there can be a channel for direct messages between two people or a channel dedicated to a specific live-streaming event with many members.

<img src="/images/products/chat/chat.svg" alt="Example of a chat message sent by a member called Claire Jones, with reactions added to the message and a reply from Siti Tengku.">

h2(#namespaces). Namespaces

Group and organise the channels using namespaces based on a prefix included in the channel name. A colon @:@ is used to delimit a channel namespace, where the first segment up until the first colon defines the namespace; you define any segments after this. The namespace is the entire channel name if a channel name does not contain a colon.

The following are examples of channels that are all part of the "channel" namespace:

* @channel:group:name@
* @channel:pm:user-id-1:user-id-2@

Namespaces can be used to apply operations to all channels within the namespace, such as "capabilities":/docs/auth/capabilities, "channel rules":/docs/channels#rules and "integration rules":/docs/general/integrations.

<aside data-type='note'>
<p>Restrictions for channel names and namespaces:</p>
<ul><li>Avoid starting names with @[@ or @:@</li>
<li>Ensure names aren't empty</li>
<li>Exclude whitespace and wildcards, such as @*@</li>
<li>Use the correct case, whether it be uppercase or lowercase</li></ul>
<p>While Ably doesn't limit channel name and namespace length, be aware that the name appears in REST request URLs. Most browsers cap URLs at 2048 characters</p>
</aside>

h2(#create). Create or retrieve a channel

To create or retrieve a channel, call the "@get()@":/api/realtime-sdk/channels#get method. This method will return a @Channel@ object, which is a reference to a single channel and is uniquely identified by its unicode string name.

The following is an example of creating or retrieving a channel:

```[javascript]
var channel = realtime.channels.get('{{RANDOM_CHANNEL_NAME}}');
```

h2(#subscribe). Subscribe to a channel

Subscribe to a channel to receive messages other members have published to it, by registering a listener. To subscribe to the specific chat channel, use the "@subscribe()@":/api/realtime-sdk/channels#subscribe method. The listener is passed a "@Message@":/api/realtime-sdk/types#message object for each message received. Alternatively, a client can listen for a subset of messages based on the name of the published message.

The following is an example of registering a listener for all messages within that channel:

```[javascript]
  var realtime = new Ably.Realtime('{{API_KEY}}');
  var channel = realtime.channels.get('{{RANDOM_CHANNEL_NAME}}');

  channel.subscribe((message) => {
    // Custom functionality to update Chat UI with newly received message included
  });
```

For more information subscribing to a channel please refer to the "Pub/Sub Channels documentation":/channels#subscribe

h2(#publish). Publish a message

Use the "@publish()@":/api/realtime-sdk/channels#publish method to send messages to a channel. All members that are "subscribed":#subscribe to that channel will receive the messages. Publishing messages is an operation available to the REST and realtime interfaces.

The following is an example of publishing a message to a channel using the realtime interface:

```[javascript]
  var realtime = new Ably.Realtime('{{API_KEY}}');
  var channel = realtime.channels.get('{{RANDOM_CHANNEL_NAME}}');

  channel.publish('message', 'Hey everyone, how are you doing?');
```

h2(#example). Example of channels

Below is an example of:

* initialising Ably realtime client,
* creating / receiving the channel,
* subscribing to the channel for any new messages published,
* publishing a message to the channel.

```[javascript]
      // Initialising Ably realtime client
      var client = new Ably.Realtime('{{API_KEY}}');
      // Create or retrieve the channel name
      var channel = client.channels.get('{{RANDOM_CHANNEL_NAME}}');

      // A listener for any messages published to the channel
      channel.subscribe((message) => {
        // Pass message.data to the UI update to display new message
      });

      // Publishing "message data" to the channel
      channel.publish('example', 'message data');
```
