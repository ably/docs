version: 2.1

orbs:
  node: circleci/node@5.0.2

parameters:
  content-update:
    type: boolean
    default: false

executors:
  default:
    description: Node 16.18.1
    docker:
      - image: cimg/node:16.18.1

commands:
  restore-npm-cache:
    steps:
      - restore_cache:
          name: Restore NPM Package Cache
          keys:
            - npm-packages-v2-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - npm-packages-v2-{{ .Branch }}-
            - npm-packages-v2-

  save-npm-cache:
    steps:
      - save_cache:
          name: Save NPM Package Cache
          key: npm-packages-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - ~/.cache/npm

  npm-install:
    steps:
      - run:
          name: Dependencies
          command: npm ci --prefer-offline --cache ~/.cache/npm

  build-nginx:
    steps:
      - run:
          name: Build nginx
          environment:
            STACK: heroku-22
            ZLIB_VERSION: 1.2.13
          command: |
            if [ ! -x /usr/local/bin/nginx ]; then
              mkdir buildpack
              mkdir build-nginx
              cd build-nginx
              sudo apt install --no-install-recommends -y libssl-dev
              wget https://raw.githubusercontent.com/heroku/heroku-buildpack-nginx/main/scripts/build_nginx
              chmod +x ./build_nginx
              ./build_nginx .
              cd ../buildpack
              tar -xzvf /tmp/nginx-${STACK}.tgz
            fi
      - persist_to_workspace:
          root: .
          paths:
            - buildpack/nginx

jobs:
  install-dependencies:
    executor:
      name: default
    resource_class: medium+
    steps:
      - checkout
      - restore-npm-cache
      - npm-install
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
      - save-npm-cache

  install-nginx:
    executor:
      name: default
    steps:
      - build-nginx

  test:
    executor:
      name: default
    resource_class: medium
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Run linting
          command: npm run lint
      - run:
          name: Install JUnit coverage reporter
          command: npm install jest-junit
      - run:
          name: Run tests
          command: npm test -- --ci --collectCoverage=true --coverageDirectory=coverage --coverageReporters=html --runInBand --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/junit/
      - store_test_results:
          path: ./reports/junit
      - store_artifacts:
          path: coverage
  build:
    executor:
      name: default
    resource_class: medium+
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Install Ruby (erb) & nginx
          command: |
            sudo apt-get update -qq
            sudo apt-get install --no-install-recommends -y ruby
            sudo cp buildpack/nginx /usr/local/bin/nginx
      - run:
          name: Build
          command: npm run build
      - run:
          name: Require redirects file to be generated
          command: test -f config/nginx-redirects.conf
      - run:
          name: Test nginx configuration
          command: |
            PORT=3000 erb config/nginx.conf.erb > config/nginx.conf
            mkdir -p logs/nginx
            nginx -p . -c config/nginx.conf -t
      - run:
          name: Start nginx
          command: |
            mkdir -p logs/nginx
            ./bin/start-nginx
          background: true
      - run:
          name: Wait for nginx
          command: |
            until $(curl --retry 10 --output /dev/null --silent --head --fail http://localhost:3001/); do
                printf '.'
                sleep 1
            done
      - run:
          name: Smoke test quick start redirects
          command: |
            ./bin/assert-success.sh /docs/quick-start-guide
            ./bin/assert-redirect.sh /docs/quick-start-guide/ \
                                     https://localhost/docs/quick-start-guide
      - run:
          name: Test website redirects
          command: |
            ./bin/assert-redirect.sh /tutorials https://ably.com/tutorials
      - run:
          name: Test client library redirects
          command: |
            ./bin/assert-redirect.sh /client-lib-development-guide \
                                     https://sdk.ably.com/builds/ably/specification/main/

workflows:
  test_branch:
    unless: << pipeline.parameters.content-update >>
    jobs:
      - install-dependencies
      - install-nginx
      - test:
          requires:
            - install-dependencies
      - build:
          requires:
            - install-dependencies
            - install-nginx
