---
title: History
meta_description: "Retrieve previously sent messages using the REST Client Library SDK."
meta_keywords: "Ably, Ably REST, API Reference, REST SDK, REST interface, REST API, History"
section: rest
index: 50
languages:
  - javascript
  - nodejs
  - php
  - python
  - ruby
  - java
  - swift
  - objc
  - csharp
  - go
jump_to:
  Help with:
    - Getting started
    - Channel and Presence history#channel-and-presence
    - Persisted history
    - API Reference#api-reference
---

The REST client library provides message and presence event history for channels. Channel history combines both instantaneous "live" history as well as the longer term "persisted history":#persisted-history. If "persisted history":#persisted-history is enabled for the channel, then messages will "typically be stored for 24 - 72 hours on disk":https://faqs.ably.com/how-long-are-messages-stored-for. If persisted history is not enabled, Ably retains the last two minutes of instantaneous "live" message history in memory.

h2(#getting-started). Getting started

The Ably REST client library provides a straightforward API to retrieve "paginated":/api/rest-sdk/history#paginated-result message or presence event history. Each page of history, by default, contains up to 100 messages. Message ordering, by default, is from most recent to oldest.

```[javascript]
  var rest = new Ably.Rest('{{API_KEY}}');
  var channel = rest.channels.get('{{RANDOM_CHANNEL_NAME}}');
  channel.publish('example', 'message data', function(err) {
    channel.history(function(err, resultPage) {
      var recentMessage = resultPage.items[0];
      alert('Most recent message: ' + recentMessage.id + ' - ' + recentMessage.data);
    });
  });
```

```[nodejs]
  var rest = new Ably.Rest('{{API_KEY}}');
  var channel = rest.channels.get('{{RANDOM_CHANNEL_NAME}}');
  channel.publish('example', 'message data', function(err) {
    channel.history(function(err, resultPage) {
      var recentMessage = resultPage.items[0];
      console.log('Most recent message: ' + recentMessage.id + ' - ' + recentMessage.data);
    });
  });
```

```[ruby]
  rest = Ably::Rest.new('{{API_KEY}}')
  channel = rest.channels.get('{{RANDOM_CHANNEL_NAME}}')
  channel.publish 'example', 'message data'
  result_page = channel.history
  recent_message = result_page.items.first
  puts "Most recent message: #{recent_message.message.id} - #{recent_message.data}")
```

```[python]
  rest = AblyRest('{{API_KEY}}')
  channel = rest.channels.get('{{RANDOM_CHANNEL_NAME}}')
  result_page = channel.history()
  recent_message = result_page.items[0]
  print('Most recent message: ' + str(recent_message.message.id) + ' - ' + recent_message.data)
```

```[php]
  $rest = new Ably\AblyRest('{{API_KEY}}');
  $channel = $rest->channels->get('{{RANDOM_CHANNEL_NAME}}');
  $channel->publish('example', 'message data');
  $resultPage = $channel->history();
  $recentMessage = $resultPage->items[0];
  echo("Most recent message data: " . $recentMessage->data);
```

```[java]
  AblyRest rest = new AblyRest("{{API_KEY}}");
  Channel channel = rest.channels.get("{{RANDOM_CHANNEL_NAME}}");
  channel.publish("example", "message data")
  PaginatedResult<Message> resultPage = channel.history(null);
  Message recentMessage = resultPage.items[0];
  System.out.println("Most recent message: " + recentMessage.id + " - " + recentMessage.data);
```

```[csharp]
  AblyRest rest = new AblyRest("{{API_KEY}}");
  IRestChannel channel = rest.Channels.Get("{{RANDOM_CHANNEL_NAME}}");
  await channel.PublishAsync("example", "message data");
  PaginatedResult<Message> resultPage = await channel.HistoryAsync();
  Message recentMessage = resultPage.Items[0];
  Console.WriteLine("Most recent message: " + recentMessage.Id + " - " + recentMessage.Data);
```

```[objc]
  ARTRest *rest = [[ARTRest alloc] initWithKey:@"{{API_KEY}}"];
  ARTRestChannel *channel = [rest.channels get:@"{{RANDOM_CHANNEL_NAME}}"];
  [channel publish:@"example" data:@"message data"];
  [channel history:^(ARTPaginatedResult<ARTMessage *> *resultPage, ARTErrorInfo *error) {
      ARTMessage *recentMessage = resultPage.items[0];
      NSLog(@"Most recent message: %@ - %@", recentMessage.id, recentMessage.data);
  }];
```

```[swift]
  let rest = ARTRest(key: "{{API_KEY}}")
  let channel = rest.channels.get("{{RANDOM_CHANNEL_NAME}}")
  channel.publish("example", data: "message data")
  channel.history { resultPage, error in
      let recentMessage = resultPage!.items[0] as! ARTMessage
      print("Most recent message: \(recentMessage.id) - \(recentMessage.data)")
  }
```

```[go]
  rest, err := ably.NewRestClient(ably.NewClientOptions("{{API_KEY}}"))
  channel := rest.Channels.Get("{{RANDOM_CHANNEL_NAME}}")
  err = channel.Publish("example", "message data")
  page, err := channel.History(nil)
  fmt.Println("Last published message: %s\n", page.Messages[0].Data)
```

If you would prefer to just dive into code and see some examples of how to use history via the REST API, then we recommend you take a look at our "REST tutorials":/tutorials.

h2(#channel-and-presence). Channel & Presence history

Both the "@Channel@":/rest/channels and "@Presence@":/rest/presence objects provide history. The "@Channel@":/rest/channels object provides the history of "@Message@":/api/rest-sdk/history#message objects published on the channel, whereas the "@Presence@":/rest/presence object provides presence event history of that channel i.e. members entering, updating or leaving the channel as "@PresenceMessage@":/api/rest-sdk/history#presence-message objects.

h3(#persisted-history). Enabling persistent history

By default, persisted history on channels is disabled and messages are only stored by the Ably service for two minutes in memory. If persisted history is enabled for the channel, then messages will "typically be stored for 24 - 72 hours on disk":https://faqs.ably.com/how-long-are-messages-stored-for.

Every message that is persisted to or retrieved from disk counts as an extra message towards your monthly quote. For example, for a channel that has persistence enabled, if a message is published, two messages will be deducted from your monthly quota. If the message is later retrieved from history, another message will be deducted from your monthly quota.

To enable history on a channel, it is necessary to add a channel rule in the settings of your "application dashboard":https://ably.com/dashboard. See the "documentation on channel rules":/general/channel-rules-namespaces for further information on what they are and how to configure them.

h2(#api-reference). API Reference

View the "History API Reference":/api/rest-sdk/history.
