---
title: What is Chat?
meta_description: "Build a realtime chat application, or add chat functionality to an existing application."
product: chat
---

Ably enables you to build live chat experiences into your applications. Use Ably's Javascript SDK to implement chat features that work at any scale, whether you're building a live streaming chat platform or a 1:1 support chat interface. Features include the following:

- "Channels":/chat/channels := create or join channels of any size, for example a large-scale live streaming chat, a company group chat, or a 1:1 chat. Channels are the core foundations that enable you to send and receive messages.
- "Replies and Threads":/chat/replies := react to messages by replying directly to them, or creating a thread to direct the members specifically to that thread in the channel.
- "Online status":/chat/online-status := display the status of members such as whether they are online or offline, by monitoring when they enter and leave the channel. If the member is online, display when they were last seen as active within the chat application.
- "Reactions":/chat/reactions := react to previously sent messages, for example giving a heart to a friend's message, or giving a thumbs up for a colleague's proposal.
- "Spam protection":/chat/spam-protection := limit member's ability to post messages within a given timeframe with spam protection.
- "Typing indicators":/chat/typing := indicate whether a member is currently typing within the specific channel.

h2(#sdk). Ably SDK

The Ably "Javascript SDK":/getting-started/setup, with full TypeScript support, enables you to easily add realtime chat features to an existing application, or build a new application from scratch. The SDK enables you to build out your chat application with features such as those found listed above.

Just as with building any realtime application with Ably, you'll need "Authentication":/auth, of which there are two types "basic authentication":/auth/basic for your backend server and "token authentication":/auth/token to generate tokens for your members clients. "Connection management":/connect := enables you to manage the connections for your clients, ensuring they connect before subscribing to channels for example.
