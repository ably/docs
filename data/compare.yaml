Reliability:
  response_time:
    description: 'Latency of response times'
    compare:
      Fanout: 'No data available.'
      Push Technology: 'Varies between 100ms-250ms+. Check status site for current latencies.'
      PubNub: 'Global average of 250ms. End-to-end within 100ms. "See support article":https://support.pubnub.com/support/solutions/articles/14000043680.'
      Pusher: 'No data available.'
      Realtime.co: 'No data available.'
  sla:
    description: 'Uptime SLA'
    compare:
      Fanout: '99.999% uptime SLAs.'
      Push Technology: 'Unclear. SLAs offered but no mention of uptime guarantees.'
      PubNub: '99.999% uptime SLA for premium plans.'
      Pusher: '99.9% uptime SLAs for Enterprise plans.'
      Realtime.co: '100% SLA uptime guarantee for enterprise customers.'
  datacenters:
    description: 'How many globally distributed datacenters?'
    compare:
      Fanout: 'Four globally-distributed datacenters<br/><br/> Broken down, the datacenter network comprises three Point of Presence locations in addition to a single Central location.'
      Push Technology: 'According to the "status site":https://www.pushtechnology.com/status/ Push Technology has at least 3 datacenters across Europe, US, Australia.'
      PubNub: '"16+ datacenters and 175+ edge PoPs":https://www.ably.io/network across Europe, USA, and Asia Pacific. <br/><br/> This equates to four Amazon geographical regions and ten EC2 availability zones with AWS.'
      Pusher: 'Six datacenters across six Amazon geographical regions in Europe, USA, Asia Pacific.  <br/><br/> However, you must choose a "single datacenter":https://pusher.com/docs/clusters to host your app.'
      Realtime.co: '3-6 datacenters across Europe, US East, US West'
  latency_routing:
    description: 'Latency based routing that ensures users connect to the closest datacenter'
    compare:
      Fanout: 'Supports latency based routing.'
      PubNub: 'Supports latency based routing.'
      Pusher: 'Supports latency based routing.'

  mesh_architecture:
    description: '"Mesh architecture":https://support.ably.io/support/solutions/articles/3000047366 with no central point of failure'
    compare:
      Fanout: 'Unknown.'
      Push Technology: 'Unknown.'
      PubNub: 'Yes.'
      Pusher: 'No.'
      Realtime.co: 'Unknown.'
  replicated:
    description: 'Data replicated in multiple regions'
    compare:
      Fanout: 'Unknown.'
      Push Technology: 'Supported on "specific plans":https://docs.pushtechnology.com/cloud/6.2.1/manual/html/cloud/plan/cloud_ha.html'
      PubNub: 'Partial. <br/><br/> Full data replication is guaranteed only for Enterprise customers.'
      Pusher: 'No. <br/><br/> Application data is stored in a single datacenter, making it more susceptible to data loss.'
      Realtime.co:  'No support.'
  qos:
    description: '"Quality of Service":https://support.ably.io/support/solutions/articles/3000044640 and message delivery guarantee (never lose data during brief disconnections)'
    compare:
      Fanout: 'Shaky. <br/><br/> With Fanout, if a message is published whilst a client is briefly disconnected (if they are going through a tunnel, for example), then the message may never arrive to that client.'
      Push Technology: 'No support.'
      PubNub: 'Partial. <br/><br/> PubNub imposes a message queue limit of 100 messages. Message recovery cannot be guaranteed and subscribed clients are at risk of missing messages if disconnected.'
      Pusher: 'No. <br/><br/> If a message is published whilst a client is briefly disconnected (such as going through a tunnel or changing networks), then the message will never arrive to that client.'
      Realtime.co: 'Limited support.'

Interoperability:
  sdks:
    description: 'Support for native client libraries/SDKs'
    compare:
      Fanout: '"6 SDKs":https://docs.fanout.io/docs/libraries.'
      Push Technology: 'Limited with only "six SDKs":https://download.pushtechnology.com/cloud/latest/sdks.html covering the most popular platforms/languages (JavaScript, Apple, Android, .Net, C, Java).'
      PubNub: 'Claims support across "70+ SDKs":https://www.pubnub.com/docs.'
      Pusher: 'Wide support with "~30 SDKs":https://pusher.com/docs/libraries.'
      Realtime.co: 'Quite extensive support with ~25 SDKs across both Realtime.co’s realtime "messaging":https://framework.realtime.co/messaging/#starting and "storage":https://framework.realtime.co/storage/#starting products.'
  opensource:
    description: 'Support for open source and proprietary protocols (e.g. "MQTT":/concepts/mqtt, AMQP, STOMP)'
    compare:
      Fanout: 'Limited.'
      Push Technology: 'No support.'
      PubNub: 'Partial. <br/><br/> PubNub supports "MQTT":/concepts/mqtt but requires additional configuration opposed to native out-of-the-box support.'
      Pusher: 'No support.'
      Realtime.co: 'No support.'
  lockin:
    description: Migration and lock-in
    compare:
      Fanout: 'Does not support proprietary realtime vendor protocols, making it harder to migrate in and away.'
      Push Technology: 'Does not support proprietary realtime vendor protocols, making it harder to migrate in and away.'
      PubNub: 'Does not support proprietary realtime vendor protocols, making it harder to migrate in and away.'
      Pusher: 'Does not support proprietary realtime vendor protocols, making it harder to migrate in and away.'
      Realtime.co: 'Does not support proprietary realtime vendor protocols, making it harder to migrate in and away.'
  adapters:
    description: Coverage of various languages, frameworks, protocols and transports, including "MQTT":/concepts/mqtt
    compare:
      Fanout: 'Limited. Fanout supports a few server environments; Python, Ruby, Php, Node, Golang, and .NET. <br/><br/> HTTP stream is offered for languages they do not support.'
      Push Techonology: 'Supports Kafka. See "GitHub":https://github.com/pushtechnology/diffusion-kafka-connect.'
      PubNub: >
        Partial. No support for third party queuing, streaming, or compute platforms. <br/><br/> "PubNub Functions":https://www.pubnub.com/products/functions provides a proprietary method of executing code. Unfortunately this limits you to PubNub’s functionality, their JavaScript API, and means you’re required to reproduce existing code already in your systems.
      Pusher: No support.
      Realtime.co: 'No support.'

Features:
  realtime:
    description: 'Realtime data streaming'
    extra: ''
    compare:
      Fanout: 'Yes.'
      Push Technology: 'Yes.'
      PubNub: 'Yes.'
      Pusher: 'Yes.'
      Realtime.co: 'Yes.'
  queues:
    description: 'Message and worker queues'
    extra: 'Message queues that provide a reliable and straightforward mechanism to consume, process, store, augment or reroute data efficiently from a realtime platform.'
    compare:
      Fanout: 'No. <br/><br/>Fanout does not offer any message queuing features or ways to distribute data using once-only pattern to your server workers.'
      Push Technology: 'No.'
      PubNub: 'No. <br/><br/> PubNub does not offer any message queuing features or ways to distribute data using once-only pattern to your server workers. However, PubNub Functions appears to be an alternative function-as-a-service approach.'
      Pusher: 'No. <br/><br/> Pusher does not offer any message queuing features or ways to distribute data using once-only pattern to your server workers.'
      Realtime.co: 'No.'
  webhooks:
    description: Webhooks
    extra: '"Webhooks":/general/webhooks?utm_source=pusher_v_pubnub&utm_medium=compare_pages provide a means to get messages, channel lifecycle and present events pushed to your servers over HTTP.'
    compare:
      Fanout: 'Yes.'
      Push Technology: 'No.'
      PubNub: 'Partial. <br/><br/> PubNub supports Webhooks if manually requested through support. However they are limited to presence events and do not cover channel lifecycle events.'
      Pusher: 'Yes.'
      Realtime.co: 'Yes.'
  serverless_functions:
    description: Serverless cloud function invocation
    extra: 'Trigger serverless functions on third platforms like Amazon Lambda, Microsoft Azure or Google Function.'
    compare:
      Fanout: 'Limited.'
      Push Technology: 'No.'
      PubNub: 'Partial. <br/><br/> PubNub allows you to run code on their own platform using their proprietary PubNub Functions. The code you can run is limited to the available Javascript API.'
      Pusher: 'No.'
      Realtime.co: 'Partial. Recommends using a generic WebHook to deliver to an API Gateway that then triggers a function.'
  presence:
    description: 'Presence'
    extra: 'Subscribe to events when users or devices enter or leave channels/topics.'
    compare:
      Fanout: 'No.'
      Push Technology: 'No.'
      PubNub: 'Yes. <br/><br/> PubNub supports a default announcement of 20 members and a self-configurable maximum of 100 members per channel.'
      Pusher: 'Yes. <br/><br/> Pusher supports a maximum of 100 members per channel.'
      Realtime.co: 'Yes.'
  history:
    description: 'Message history'
    extra: 'Dictates whether clients can access historical activity, catching up on missed messages.'
    compare:
      Fanout: 'No.'
      Push Technology: 'Partial. A fixed number of messages can be retained for a small amount of time. A NoSQL cloud database with built-in real-time notifications keeps data synchronized between users.'
      PubNub: 'Yes.'
      Pusher: 'No.'
      Realtime.co: 'Partial. Up to 128 messages can be retained for up to 60 seconds. Although this is disabled by default.'
  firehose:
    description: Realtime data firehose
    extra: Stream your realtime data published within a realtime platform directly to another streaming or queueing service such as Amazon Kinesis, Apache Storm or Kafka.
    compare:
      Fanout: 'No.'
      Push Technology: 'No.'
      PubNub: 'No.'
      Pusher: 'No.'
      Realtime.co: 'No.'
  push:
    description: Native push notifications
    extra: '"Send notifications and updates":https://www.ably.io/push-notifications to users even when they are offline.'
    compare:
      Fanout: 'No.'
      Push Technology: 'Yes.'
      PubNub: 'Yes.'
      Pusher: 'Yes.'
      Realtime.co: 'Yes.'
  cname:
    description: Custom domain endpoint (CNAME)
    extra: 'Custom domains allowing you to connect using a CNAME such as "realtime.your-company.com".'
    compare:
      Fanout: 'Yes.'
      PubNub: 'No. <br/><br/> PubNub only provides support for custom CNAME for non-TLS connections as they do not serve up custom certificates for customers.'
      Pusher: 'No.'
  announcement:
    description: Announcement channels
    extra: 'Stay updated on what’s happening on the client’s end, connection, disconnection etc.'
    compare:
      Push Technology: 'Yes.'
      Realtime.co: 'Yes.'
  ordering:
    description: 'Reliable message ordering'
    extra: 'Ensures messages are delivered to persistently connected subscribers in the order they were published on each channel/topic.'
    compare:
      Push Technology: 'No.'
      Realtime.co: 'No.'
  conflation:
    description: 'Conflation'
    extra: 'Ability to reduce the amount of information sent to clients by combining or discarding updates.'
    compare:
      Push Technology: 'Yes.'
      Realtime.co: 'No.'

Security:
  tls:
    description: 'TLS connection'
    extra: '"TLS connections":https://support.ably.io/a/solutions/articles/3000045208 ensure all data in transit is encrypted.'
    compare:
      Fanout: 'Yes.'
      PubNub: 'Yes.'
      Pusher: 'Yes.'
  token:
    description: 'Token-based authentication'
    extra: '"Token-based authentication":https://www.ably.io/documentation/core-features/authentication ensures private keys are never shared and instead short-lived tokens are used to authenticate.'
    compare:
      Fanout: 'Yes.'
      PubNub: >
        No. <br/><br/> PubNub offers an authentication scheme called PAM that allows granular permissions to be configured per client. These permissions are stored on PubNub's servers however which means it is your responsibility to keep a client's permissions in sync with PubNub at all times.
      Pusher: 'Yes. <br/><br/> Pusher requires a separate authentication request for every channel. The recent "Authorized Connections":https://pusher.com/docs/client_api_guide/client_authorized_connections feature, introduced in December 2018, improved this by adding more granular channel permissions.'
  jwt:
    description: 'JSON Web Token (JWT)'
    extra: '"JWT":/core-features/authentication#token-authentication allows for easy integration with existing authentication systems, along with ensuring private keys are never shared.'
    compare:
      Fanout: 'Yes. <br/><br/> Fanout uses Runscope JWT authentication.'
      PubNub: 'No.'
      Pusher: 'Partial. <br/><br/> Pusher only supports JWT in certain products.'
  key_permissions:
    description: 'Configurable private key permissions'
    extra: 'API keys with "configurable permissions":https://support.ably.io/a/solutions/articles/3000030502 including restrictions on channels or operations.'
    compare:
      Fanout: 'No.'
      PubNub: 'No.'
      Pusher: 'No.'
  channel_permissions:
    description: 'Configurable channel permissions'
    extra: 'The "flexibility to maintain control of your channels":https://support.ably.io/a/solutions/articles/3000030057, such as requiring SSL/TLS or only identified authenticated clients on a channel.'
    compare:
      Fanout: 'No.'
      PubNub: 'Yes.'
      Pusher: >
        Partial. <br/><br/> Pusher provides a 'private-' and ‘presence-’ namespace for channels that require authentication. No other channel configuration is available.
  encrypted:
    description: 'Encrypted message payloads'
    extra: 'AES "encryption":https://support.ably.io/a/solutions/articles/3000029535 using the provided private key before publishing to a network. As a result, messages are practically impossible to intercept and view. For sensitive data this ensures your payloads are always secure and opaque.'
    compare:
      Fanout: 'No.'
      Pusher: 'Yes. <br/><br/> PubNub include AES encryption in its client library SDKs.'
      PubNub: 'No.'
