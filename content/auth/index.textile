---
title: Authentication
meta_description: "Ably supports two main authentication schemes: basic authentication and token authentication. Token authentication can be implemented using JWTs, Ably tokens, and Ably token requests."
redirect_from:
  - /core-features/authentication
  - /general/authentication
  - /general/_authentication_capabilities
---

Before a client or server can issue requests to Ably, such as subscribe to channels, or publish messages, it must authenticate with Ably. 

The two authentication schemes supported are:

1. "Basic authentication":/auth/basic, which uses your Ably "API key":/auth/api-key
2. "Token authentication":/auth/token, which uses short-lived tokens for access. These tokens are periodically renewed, and can be "revoked":/auth/revocation if required.

Both the "REST client library":/rest/authentication and the "Realtime client library":/realtime/authentication use these authentication mechanisms. 

h2. Client-side authentication

Token authentication is the recommended authentication mechanism on the client-side, as it provides more fine-grained access control and limits the risk of exposing your "Ably API key":/auth/api-key. 

In production systems you should never use basic authentication on the client-side as it exposes your Ably API key. API keys don't have an expiry, so once compromised, they could be used indefinitely by an attacker. 

Tokens have an expiry, and so there is only a small period of time during which the compromised token can be used. It is also possible to "revoke tokens":/auth/revocation, should that be necessary for security reasons.

h2. Server-side authentication

Use basic authentication on the server-side. You should *never* use token authentication server-side, as this results in unnecessary overhead - the server would periodically require token requests to authenticate. 

h2(#selecting-auth). Selecting an authentication mechanism

<%= partial partial_version('core-features/_authentication_comparison') %>

h2(#tutorials). Tutorials

If you would like to step through some examples, then take a look at our authentication tutorials:

* "Token authentication":/tutorials/token-authentication
* "JWT authentication":/tutorials/jwt-authentication

h2(#further-information). Further information

The following overviews are available:

* "Authentication Realtime SDK Overview":/realtime/authentication
* "Authentication REST SDK Overview":/rest/authentication

The following API References are available:

* "Authentication Realtime SDK API Reference":/api/realtime-sdk/authentication
* "Authentication REST SDK API Reference":/api/rest-sdk/authentication