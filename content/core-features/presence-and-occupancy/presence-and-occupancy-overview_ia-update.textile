---
title: Presence
meta_description: "Client presence is available for channels. Presence events occur when clients eneter, leave, or change state on a channel."
meta_keywords: "Presence, enter, leave, change state"
section: core-features
index: 27
---
<!-- [Old]
Ably's presence feature allows clients or devices to announce their presence on a channel. Other devices or services may then subscribe to these presence events (such as entering, updating their state, or leaving the channel) in real time using our "realtime SDKs":/realtime, or via the "Ably Integrations":/general/integrations. You can also request a list of clients or devices that are online/offline on a channel at a particular point in time via the "REST API":/api/rest-api#presence.
 <a href="/images/diagrams/Channels-Presence.gif" target="_blank">
  <img src="/images/diagrams/Channels-Presence.gif" style="width: 100%" alt="Presence representation">
</a>
 Furthermore, if persistence is enabled on the presence channel, you can also retrieve "presence history":/api/rest-sdk/history#presence-history for the channel, i.e, static data about historical presence states of your clients/devices. This operation also can be done using both Ably's "Realtime":/realtime and "REST":/rest libraries.

h2(#occupancy-presence). Occupancy and presence

The occupancy and presence features differ in the following ways:

- Occupancy := provides metrics about the clients attached to a channel. This includes a count of the number of clients attached, the number of publishers and subscribers, the number of presence members, and the number of presence publishers and subscribers.

- Presence := provides information about the activity of members entered into the presence set of a channel. Presence members announce their state to presence subscribers via presence events. For example, when entering the presence set, leaving the presence set, or updating their member data.
-->
<!--- [New]
TOC:
- Intro (Mention online status)
- Presence vs Occupancy
- Use cases
-->

h2(#presence-and-occupancy-intro). Introduction

Ably's presence feature allows clients or devices to announce their presence on a channel. Other devices or services may then subscribe to these presence events (such as entering, updating their state, or leaving the channel) in real time using our "realtime SDKs":/realtime, or via the "Ably Integrations":/general/integrations. You can also request a list of clients or devices that are online/offline on a channel at a particular point in time via the "REST API":/api/rest-api#presence.
 <a href="/images/diagrams/Channels-Presence.gif" target="_blank">
  <img src="/images/diagrams/Channels-Presence.gif" style="width: 100%" alt="Presence representation">
</a>
 Also, if persistence is enabled on the presence channel, you can retrieve "presence history":/api/rest-sdk/history#presence-history for the channel, i.e, static data about historical presence states of your clients/devices. This operation can be done using both Ably's "Realtime":/realtime and "REST":/rest libraries.

The occupancy feature enables you to view the number of occupants attached to a channel and specific metrics about their connections. For more information see the main "occupancy page":/topic-occupancy_ia-update.

h2(#presence-vs-occupancy-). Occupancy vs. Presence

The occupancy and presence features differ in the following ways:

- Occupancy := provides metrics about the clients attached to a channel. This includes a count of the number of clients attached, the number of publishers and subscribers, the number of presence members, and the number of presence publishers and subscribers.

- Presence := provides information about the activity of members entered into the presence set of a channel. Presence members announce their state to presence subscribers via presence events. For example, when entering the presence set, leaving the presence set, or updating their member data.


h2(#use-cases). Use cases

The occupancy and presence features allow you to get the most from use cases that can take advantage information about user activity and metrics about attached clients. For example, any app where it is useful to know when a user comes online, goes offline, and if they are a basic or administrative user.

Some examples applications include:
- Video game chat and party apps
- Chat apps for all audiences, including support and help centers 
- Video conferencing and webinar apps
- Commenting channels and forums
