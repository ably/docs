blang[jsall].
  @ConnectionEvent@ is a String that can be emitted as an event on the @Connection@ object; either a "@Realtime Connection@ state":/realtime/connection#connection-states or an @update@ event.


  ```[javascript]
    var ConnectionEvents = [
      'initialized',
      'connecting',
      'connected',
      'disconnected',
      'suspended',
      'closing',
      'closed',
      'failed',
      'update'
    ]
  ```

blang[java].
  @io.ably.lib.realtime.ConnectionEvent@ is an enum representing all the events that can be emitted be the @Connection@; either a "@Realtime Connection@ state":/realtime/connection#connection-states or an @update@ event.

  ```[java]
    public enum ConnectionEvent {
      initialized,   // 0
      connecting,    // 1
      connected,     // 2
      disconnected,  // 3
      suspended,     // 4
      closing,       // 5
      closed,        // 6
      failed,        // 7
      update         // 8
    }
  ```

blang[csharp].
  @IO.Ably.Realtime.ConnectionEvent@ is an enum representing all the events that can be emitted be the @Connection@; either a "@Realtime Connection@ state":/realtime/connection#connection-states or an @Update@ event.

  ```[csharp]
    public enum ConnectionState
    {
        Initialized,    //0
        Connecting,     //1
        Connected,      //2
        Disconnected,   //3
        Suspended,      //4
        Closing,        //5
        Closed,         //6
        Failed,         //7
        update          //8
    };
  ```

blang[ruby].
  @Ably::Realtime::Connection::EVENT@ is an enum-like value representing all the events that can be emitted be the @Connection@; either a "@Realtime Connection@ state":/realtime/connection#connection-states or an @:update@ event. @EVENT@ can be represented interchangeably as either symbols or constants.

  h4. Symbol states

  ```[ruby]
    :initialized # =>  0
    :connecting # =>   1
    :connected # =>    2
    :disconnected # => 3
    :suspended # =>    4
    :closing # =>      5
    :closed # =>       6
    :failed # =>       7
    :update # =>       8
  ```

  h4. Constant states

  ```[ruby]
    Connection::EVENT.Initialized # =>  0
    Connection::EVENT.Connecting # =>   1
    Connection::EVENT.Connected # =>    2
    Connection::EVENT.Disconnected # => 3
    Connection::EVENT.Suspended # =>    4
    Connection::EVENT.Closing # =>      5
    Connection::EVENT.Closed # =>       6
    Connection::EVENT.Failed # =>       7
    Connection::EVENT.Update # =>       8
  ```

  h4. Example usage

  ```[ruby]
    # Example with symbols
    client.connection.on(:connected) { ... }

    # Example with constants
    client.connection.on(Ably::Realtime::Connection::STATE.Connected) { ... }

    # Interchangeable
    Ably::Realtime::Connection::STATE.Connected == :connected # => true
  ```

blang[objc,swift].
  @ARTRealtimeConnectionEvent@ is an enum representing all the events that can be emitted be the @Connection@; either a "@Realtime Connection@ state":/realtime/connection#connection-states or an @Update@ event.

  ```[objc]
    typedef NS_ENUM(NSUInteger, ARTRealtimeConnectionEvent) {
        ARTRealtimeConnectionEventInitialized,
        ARTRealtimeConnectionEventConnecting,
        ARTRealtimeConnectionEventConnected,
        ARTRealtimeConnectionEventDisconnected,
        ARTRealtimeConnectionEventSuspended,
        ARTRealtimeConnectionEventClosing,
        ARTRealtimeConnectionEventClosed,
        ARTRealtimeConnectionEventFailed,
        ARTRealtimeConnectionEventUpdate
    };
  ```

  ```[swift]
    public enum ARTRealtimeConnectionEvent : UInt {
        case Initialized
        case Connecting
        case Connected
        case Disconnected
        case Suspended
        case Closing
        case Closed
        case Failed
        case Update
    }
  ```
