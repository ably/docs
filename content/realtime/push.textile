---
title: Push
section: realtime
index: 47
api_separator:
jump_to:
  Help with:
    - Delivery push notifications#deliver
    - Activating and subscribing a device#activate
    - Managing devices and subscriptions#admin
    - Platform support#platform-support
---

Ably can deliver native push notifications to devices using, amongst others, "Apple's Push Notification":https://developer.apple.com/notifications/ service and Google's "Firebase Cloud Messaging":https://firebase.google.com/docs/cloud-messaging/ service. Native push notifications, unlike Ably's "channel based pub/sub messaging":/realtime/channels, do not require the device to maintain a connection to Ably, as the underlying platform or OS is responsible for maintaining its own battery-efficient transport to receive push notifications. Therefore, native push notifications are commonly used to display visual notifications to users or launch a background process for an app in a battery-efficient manner.

h2(#deliver). Delivering push notifications

Ably provides two models for delivering push notifications to devices:

h3(#channel-broadcasting). Channel-based broadcasting

The model for delivering push notifications to devices over channels is intentionally very similar to how messages are normally delivered using Ably's "pub/sub channel":/core-features/channels. For example, a normal message published on an Ably channel is broadcast immediately to all realtime subscribers of that channel. When broadcasting push notifications on channels, however, the process is the same with the exception that the subscribers (devices receiving push notifications) are registered in advance using our API and the message itself must contain an *extra push notification payload* that specifies the optional visual format and optional data payload of the native push notification.

"Find out more about channel-based push notification broadcasting":/general/push/publish#channel-broadcast

h3(#direct-publishing). Direct publishing

Ably provides a REST API that allows native push notifications to be delivered directly to:

* Devices identified by their unique device ID
* Devices identified by their assigned "@clientId@":/realtime/authentication#identified-clients
* Devices identified by the recipient details of the native push transport such as their unique @registrationToken@ in the case of FCM, @deviceToken@ in the case of APNS, or @targetUrl@ and @encryptionKey@ in the case of a Web device. This means is particularly useful when migrating to Ably with existing push notification target devices.

"Find out more about direct push notification publishing":/general/push/publish#direct-publishing

h2(#activate). Activating a device and receiving notifications

<%= partial partial_version('general/push/_activate_subscribe_intro') %>

"Find out more about device activations and subscriptions":/general/push/activate-subscribe.

h2(#admin). Managing devices and subscriptions

Whilst the realtime client libraries provide APIs for a device to activate itself (via "@client.push@":/general/push/activate-subscribe) and subscribe for push notifications (via "@channel.push@":/general/push/activate-subscribe), those APIs are intentionally limited to actions pertaining to the device it is run on.

A separate and distinct push admin API is additionally provided in our client libraries specifically designed for use by your servers to facilitate managing and delivering push notifications across all of your registered devices. This API, amongst other things, includes features to manage registered devices, channel subscriptions and deliver push notifications directly. Currently the "push admin API":/general/push/admin is available in our JavaScript and Ruby libraries.

"Find out more about the push admin API":/general/push/admin.

h2(#platform-support). Platform support

Ably currently offers support for push notifications on the following platforms:

- "Apple Push Notifications":https://developer.apple.com/notifications/ := supported on all mobile devices running iOS and desktop devices running OS X
- "Firebase Cloud Messaging":https://firebase.google.com/docs/cloud-messaging/ := supported on all Android and iOS devices, although we use FCM exclusively for Android message delivery
- Experimental "W3C Push API":https://www.w3.org/TR/push-api/ := experimental support for "modern W3C compliant browsers":https://caniuse.com/#feat=push-api (this does not include Apple's Safari browser)
