---
title: Types
section: realtime
index: 500
languages:
  - javascript
  - nodejs
  - ruby
  - java
  - swift
  - objc
  - csharp
jump_to:
  Data types:
    - AblyException#ably-exception
    - Error Info
    - Message
    - Presence Message
    - Presence action
    - Paginated Result
    - Param
    - Token Details
    - Token Request
    - Stats
    - Stats Granularity
  Other Types:
    - Auth Options
    - Client Options
    - Channel Event
    - Channel Options
    - Channel State
    - Channel State Listener
    - Cipher Params
    - Completion Listener
    - Connection State#connection-state
    - Connection State Listener
    - Connection State Change
    - Data Request Query
    - Deferrable
    - LastConnnectionDetails#last-connection-details
    - Message Listener
    - Presence Listener
    - Stats Data Request Query
    - Token Params
---

The Ably client library defines both data types and option types.  Data types are used to represent object such as messages; Option types are used in method arguments.

Where client libraries support both Realtime and REST APIs, the types are shared between both clients.

All types are always classes or their respective equivalent for each language implementation. Options on the other hand, may often support both typed option classes or more flexible key value objects such as a Hash or plain Javascript object.

If you are interested in finding out more about the exact types and options definiions in each language, we recommend you download "our open source libraries":https://www.ably.io/download and review the code.

h2. Data types

h3(#ably-exception).
  java:  io.ably.lib.types.AblyException
  ruby:  Ably::Exceptions::BaseAblyException
  csharp: IO.Ably.AblyException

blang[java,csharp].
  <%= partial 'types/_ably_exception', indent: 2, skip_first_indent: true %>

blang[ruby].
  <%= partial 'types/_base_ably_exception', indent: 2, skip_first_indent: true %>

h3(#error-info).
  default: ErrorInfo
  objc,swift: ARTErrorInfo
  java:    io.ably.lib.types.ErrorInfo
  ruby:    Ably::Models::ErrorInfo
  csharp:  IO.Ably.ErrorInfo

<%= partial 'types/_error_info' %>

h3(#message).
  default: Message
  objc,swift: ARTMessage
  java:    io.ably.lib.types.Message
  ruby:    Ably::Models::Message
  csharp:  IO.Ably.Message

<%= partial 'types/_message' %>

h3(#presence-action).
  default: Presence action
  objc,swift: ARTPresenceAction
  java:    io.ably.lib.types.PresenceMessage.Action
  ruby:    Ably::Models::PresenceMessage::ACTION
  csharp:  IO.Ably.PresenceAction

<%= partial 'types/_presence_action' %>

h3(#presence-message).
  default: PresenceMessage
  objc,swift: ARTPresenceMessage
  java:    io.ably.lib.types.PresenceMessage
  ruby:    Ably::Models::PresenceMessage
  csharp:  IO.Ably.PresenceMessage

<%= partial 'types/_presence_message' %>

h3(#paginated-result).
  default: PaginatedResult
  objc,swift: ARTPaginatedResult
  java:    io.ably.lib.types.PaginatedResult
  ruby:    Ably::Models::PaginatedResult
  csharp:  IO.Ably.PaginatedResult

<%= partial 'types/_paginated_result' %>

h3(#param).
  java:    io.ably.lib.types.Param

blang[java].
  <%= partial 'types/_param', indent: 2, skip_first_indent: true %>

h3(#token-details).
  default: TokenDetails
  objc,swift: ARTTokenDetails
  java:    io.ably.lib.types.TokenDetails
  ruby:    Ably::Models::TokenDetails
  csharp:  IO.Ably.TokenDetails

<%= partial 'types/_token_details' %>

h3(#token-request).
  default: TokenRequest
  objc,swift: ARTTokenRequest
  java:    io.ably.lib.types.TokenRequest
  ruby:    Ably::Models::TokenRequest
  csharp:  IO.Ably.TokenRequest

<%= partial 'types/_token_request' %>

h3(#stats).
  default: Stats object
  objc,swift: ARTStats
  java:    io.ably.lib.types.Stats
  ruby:    Ably::Models::Stats
  csharp:  IO.Ably.Stats

<%= partial 'types/_stats' %>

h3(#stats-granularity).
  objc,swift: ARTStatsGranularity

<%= partial 'types/_stats_granularity' %>

h2. Other types

h3(#auth-options).
  default:   AuthOptions Object
  objc,swift:   ARTAuthOptions
  ruby:      AuthOptions Hash
  java:      io.ably.lib.rest.Auth.AuthOptions
  csharp:    IO.Ably.AuthOptions

<%= partial 'types/_auth_options' %>

h3(#channel-event).
  swift,objc: ARTChannelEvent

blang[objc,swift].
  <%= partial 'types/_channel_event', indent: 2, skip_first_indent: true %>

h3(#client-options).
  default:   ClientOptions Object
  objc,swift:   ARTClientOptions
  ruby:      ClientOptions Hash
  java:      io.ably.lib.types.ClientOptions
  csharp:    IO.Ably.ClientOptions

<%= partial 'types/_client_options' %>
<%= partial 'types/_realtime_client_options' %>

h3(#channel-options).
  default:   ChannelOptions Object
  objc,swift:   ARTChannelOptions
  ruby:      ChannelOptions Hash
  java:      io.ably.lib.types.Channelptions
  csharp:    IO.Ably.Rest.ChannelOptions

<%= partial 'types/_channel_options' %>

h3(#channel-state).
  default: ChannelState
  objc,swift: ARTRealtimeChannelState
  ruby:    Channel::STATE Enum
  java:    io.ably.lib.realtime.ChannelState Enum
  csharp:  IO.Ably.Realtime.ChannelState Enum

<%= partial 'types/_channel_state' %>

h3(#channel-state-listener).
  java:   io.ably.lib.realtime.ChannelStateListener

blang[java].
  <%= partial 'types/_channel_state_listener', indent: 2, skip_first_indent: true %>

h3(#cipher-params).
  default: CipherParams
  objc,swift: ARTCipherParams
  ruby:    CipherParams Hash
  java:    io.ably.lib.util.Crypto.CipherParams
  csharp:  IO.Ably.CipherParams

<%= partial 'types/_cipher_params' %>

h3(#completion-listener).
  java:   io.ably.lib.realtime.CompletionListener

blang[java].
  <%= partial 'types/_completion_listener', indent: 2, skip_first_indent: true %>

h3(#connection-state).
  default: ConnectionState
  objc,swift: ARTRealtimeConnectionState
  ruby:    Connection::STATE
  java:    io.ably.lib.realtime.ConnectionState
  csharp:  IO.Ably.Realtime.ConnectionState

<%= partial 'types/_connection_state' %>

h3(#connection-state-listener).
  java: io.ably.lib.realtime.ConnectionStateListener

blang[java].
  <%= partial 'types/_connection_state_listener', indent: 2, skip_first_indent: true %>

h3(#connection-state-change).
  default: ConnectionStateChange Object
  objc,swift: ARTConnectionStateChange
  ruby:    ConnectionStateChange
  java:    io.ably.lib.realtime.ConnectionStateListener.ConnectionStateChange
  csharp:  IO.Ably.Realtime.ConnectionStateChangedEventArgs

<%= partial 'types/_connection_state_change' %>

h3(#data-request-query).
  csharp: IO.Ably.DataRequestQuery

blang[csharp].
  <%= partial 'types/_data_request_query', indent: 2, skip_first_indent: true %>

h3(#message-listener).
  java: io.ably.lib.realtime.Channel.MessageListener

blang[java].
  <%= partial 'types/_message_listener', indent: 2, skip_first_indent: true %>

h3(#last-connection-details).
  javascript: LastConnectionDetails

blang[javascript].
  <%= partial 'types/_last_connection_details', indent: 2, skip_first_indent: true %>

h3(#presence-listener).
  java: io.ably.lib.realtime.Presence.PresenceListener

blang[java].
  <%= partial 'types/_message_listener', indent: 2, skip_first_indent: true %>

blang[ruby].
  h3(#deferrable).
    ruby: Ably::Util::SafeDeferrable

  <%= partial 'types/_deferrable', indent: 2, skip_first_indent: true %>

h3(#stats-data-request-query).
  csharp: IO.Ably.StatsDataRequestQuery

blang[csharp].
  <%= partial 'types/_stats_data_request_query', indent: 2, skip_first_indent: true %>

h3(#token-params).
  default:   TokenParams Object
  objc,swift:   ARTTokenParams
  ruby:      TokenParams Hash
  java:      io.ably.lib.rest.Auth.TokenParams
  csharp:    IO.Ably.TokenParams

<%= partial 'types/_token_params' %>
