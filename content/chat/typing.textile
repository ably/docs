---
title: Typing indicator
meta_description: "Realtime functionality to indicate when a member is typing or has stopped typing."
product: chat
languages:
  - javascript
---

Signal when a member is typing to indicate to other members that a message is being written.

<img src="/images/products/chat/typing.png" alt="Example of a chat message input box, above this has two names of other members who are currently typing.">

h2(#implementation). Implementation

Use the "presence":/presence-occupancy/presence feature to implement a typing indicator, this feature would only be possible with all members "entered":/chat/online-status#enter already into the presence set.

The member status can be used as the indicator of whether they're currently typing or not, allowing other members to see a visual cue. Trigger an update event when a member begins typing to update the Chat UI for all members. For example "Jane is typing...

```[javascript]
    // Subscribe to any presence updates for the current presence set
    channel.presence.subscribe('update', (memberUpdate) => {
      // Event triggered for when someone has started or stopped typing.
      // Your custom functionality is required here to show the indication someone is typing for example:
      // - "John is typing..."
      // - or "Multiple people are typing..."
    });
```

Depending on the UI, it is recommended to display a limited number of the names of members typing. If that number is exceeded, it's common practice to instead change the visual indicator to a string such as "People are typingâ€¦".

h3(#example). Example of typing indicators

The following is an example of configuring typing indicator updates using presence.

For the member, an event listener waits for a keypress before publishing an update to the presence set, updating this member's status with a string indicating they're typing. A timer is set to expire in five seconds to reset this status if there has been no further keys pressed in that time.

```[javascript]
    let isTyping = false;
    let typingInterval;
    let usersTyping = [];

    var client = new Ably.Realtime('{{API_KEY}}');
    var channel = client.channels.get('{{RANDOM_CHANNEL_NAME}}');

    // Subscribe to any presence updates for the current presence set
    channel.presence.subscribe('update', (memberUpdate) => {
      // find your user by their client id
      user = '';
      // Adding user to array of users typing
      usersTyping.push(user);
    });

    // Enter the member into the presence set
    channel.presence.enter((err) => {
      // Custom functionality to update UI for members that they are now online.
    });

    // Listener for when member presses a key on their keyboard
    document.addEventListener('keypress', (event) => {
      publishTyping(channel)
    }, false);

    // The member has pressed a key, publish to the presence channel
    // that they are, and initiate a timer to reset the typing indicator if no
    // further key presses are made within 5 seconds
    function publishTyping(channel) {
      if (isTyping === false) {
        channel.presence.update('is typing', (err) => {
          isTyping = true;

          typingInterval = setInterval(stopTyping(channel), 5000);
        });
      } else {
        clearInterval(typingInterval);
        typingInterval = setInterval(stopTyping(channel), 5000);
      }
    }

    // The timer has reached the end, the member hasn't pressed a key in the time
    // frame, so publish that they've stopped and remove them from the local usersTyping array.
    function stopTyping(channel) {
      channel.presence.update('has stopped typing', (err) => {
        const index = usersTyping.findIndex((userEntry) => {
          return userEntry.clientId === user.clientId;
        })

        usersTyping.splice(index, 1);
        isTyping = false
      });
    }
```
