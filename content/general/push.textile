---
title: Push Notifications
section: general
index: 55
api_separator:
jump_to:
  Help with:
    - Delivering push notifications#deliver
    - Activating and subscribing a device#activate-device
    - Managing devices and subscriptions#admin
    - Platform support#platform-support
    - Tutorials#tutorials
---

<%= partial partial_version('general/push/_push_intro') %>

We no longer support "Google Cloud Messaging":https://developers.google.com/cloud-messaging/; this is deprecated by Google, in favour of FCM, and the service will soon be terminated altogether.

h3(#download). Downloading a client library with push support

The following Ably client library SDKs provide support for activation and receiving of native push notifications:

* "Android SDK":https://github.com/ably/ably-java
* "iOS Objective-C and Swift SDK":https://github.com/ably/ably-cocoa
* Experimental "W3C Push API":https://www.w3.org/TR/push-api/ compatible browser push notification support in the "Javascript SDK":https://github.com/ably/ably-js. "Get in touch":https://www.ably.io/contact for access to this experimental feature

All Ably client library SDKs, that adhere to the "v1.1 specification support":/client-lib-development-guide/features/, support "push publishing":/general/push/publish and "push admin":/general/push/admin functionality.

"See the list of client libraries available for download":https://www.ably.io/download

h3(#features). Key features

* General Availability Support for Android and iOS
* Experimental support for Chrome, Firefox and Opera. Apple's Safari Notifications planned.
* Custom notification formats and badges for iOS and Android. Browsers receive the notification in a Web Worker which is in turn responsible for presenting a visual notification to the user (this is an experimental feature).
* Both visual notifications and data payloads can be sent to mobile devices.
* Any number of mobile and browser devices can be registered on pub/sub channels. Each time a message is published with a push notification payload, Ably will ensure that all registered devices receive the push notification in near realtime.
* Scale to millions of devices simultaneously by leveraging Ably's global platform.
* User-centric device registration allowing devices to be grouped by user ("@clientId@":/realtime/authentication#identified-clients)
* Filters can be applied to notifications such as client ID, connection ID or device type, or alternatively you can push message directly to devices or users via our API.
* Realtime metrics for your delivered and undelivered push notifications.

h2(#tutorials). Tutorials

If you wish to see step by step instructions to set up, send and receive push notifications on your mobile devices, you can checkout our "tutorials for iOS and Android, with both direct device registration and registration via server":/tutorials#tut-push-notifications examples.

h2(#smart-notifications). Smart Notifications (Not yet released)

Ably's Smart Notifications will offer a less intrusive and more effective way to notify your users with native iOS, Android and browser notifications. Instead of delivering "dumb" push notifications to your users when you wish to get their attention, Ably allows you to deliver messages based on a user's connection state, their active device and their current context within your application. This means you can send less but more effective notifications to your users. "Find out more":https://blog.ably.io/smart-notifications-the-next-evolution-of-messaging-6dcb24bf857.

"Get in touch":/https://www.ably.io/contact to find out more.

h3(#how-it-works). How do Smart Notifications work?

Each Ably "pub/sub channel":/core-features/channels can have one or more devices registered to it, and every device registered can be assigned a client identifier (i.e. they are an "identified client in the Ably system":/realtime/authentication/#identified-clients).

When a message is published on a "pub/sub channel":/core-features/channels, a smart notification payload and rules can optionally be included with the message. When the Ably service receives a message with a smart notification payload, it will do one of two things:

* If the notification is configured as a "dumb" push notification, it will deliver the push notification to the relevant devices associated with the pub/sub channel. This is a common pattern with other vendors and it assumes that if the registered device app is not active, a visual push notification will be displayed, and if the app is open and active, the visual push notification will be suppressed. In the case of a data push notification, it will be always be delivered and no visual indicator is shown to the user.
* If the notification is configured as a "smart" push notification, then Ably will process the rules for each smart notification in a user-centric way, such that the user is notified in the most effective way on the most relevant device based on their current context. For example, if a user has your mobile app installed but also uses your web app during office hours, and a  notification is sent whilst the user is currently using the web app, then a visual notification can be shown only on the open web app, and the unnecessary duplicate push notification to their device can be suppressed. If however, after some configured time, the user has not responded to the message in the web app, a follow up native mobile push notification could be triggered automatically by Ably.

"Find out why we believe smart notifications will be the next evolution of messaging":https://blog.ably.io/smart-notifications-the-next-evolution-of-messaging-6dcb24bf857.

"Get in touch if you'd like to be notified when Smart Notifications go into beta":https://www.ably.io/contact
