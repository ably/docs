Now that we have our app with FCM enabled, we will want to make our local authentication server accessible for testing. By default, Android  emulators will block "non-TLS connections":https://android-developers.googleblog.com/2018/04/protecting-users-with-tls-by-default-in.html, so we will need to mark our local server as trusted in our network configuration.

*Note*: If you're using a physical Android device for this, it will be easier to simply run your code from a free service such as "Glitch":https://glitch.com/, which due to being a secure connection will allow you to skip this step. This applies to an emulated device as well if desired.

To do this, create a @network_security_config.xml@ file within the @app/src/main/res@ folder with the following content:

```
<?xml version="1.0" encoding="utf-8"?>
<network-security-config>
    <domain-config cleartextTrafficPermitted="true">
        <domain includeSubdomains="true">10.0.2.2</domain>
    </domain-config>
</network-security-config>
```

This will allow our app to communicate with *10.0.2.2*, which is the "address used by the Android emulators":https://developer.android.com/studio/run/emulator-networking#networkaddresses for your localhost.

Next, add the following to your @AndroidManifest.xml@, as part of the @application@ settings:

```
<application
...
android:networkSecurityConfig="@xml/network_security_config"
...
>
```

You'll now be able to access your local authentication server by referencing *10.0.2.2:3000*.