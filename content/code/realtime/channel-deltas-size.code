[--- Javascript ---]
var receivedLogNotDeltas = document.getElementById('received-not-deltas');
var receivedLogDeltas = document.getElementById('received-deltas');
var totalWithoutDeltas = document.getElementById('no-delta');
var totalWithDeltas = document.getElementById('delta');

var clientOptions = {
      key: '{{API_KEY}}',
      plugins: {
         vcdiff: {
         decode: decodeAndCountSize
        }
      }
    };

var deltaChannelOptions = {
       params: {
        delta: 'vcdiff',
        rewind: 10
      }
    };

var ably = new Ably.Realtime(clientOptions);

var deltaChannel = ably.channels.get('[product:cttransit/gtfsr]vehicle:all', deltaChannelOptions);

var channel = ably.channels.get('[product:cttransit/gtfsr]vehicle:all');


/* Subscribe to a channel normally */
channel.subscribe(function(message, err) {
  var size = getMessageSize(message);
  totalWithoutDeltas.innerHTML = parseInt(totalWithoutDeltas.innerHTML, 10) + size;
  receivedLogNotDeltas.insertAdjacentHTML('afterbegin', '<li>' + JSON.stringify(message.data) + '</li>');
});

/* Subscribe to a channel using deltas */
deltaChannel.subscribe(function(message) {
  receivedLogDeltas.insertAdjacentHTML('afterbegin', '<li>' + JSON.stringify(message.data) + '</li>');
});

/* Recursively work out the size of the message's elements */
function getMessageSize(message) {
  var bytes = 0;
  if (typeof message === 'boolean') {
    bytes += 4;
  } else if (typeof message === 'string') {
    bytes += message.length * 2;
  } else if(typeof message === 'object') {
    for (var i in message) {
      /* Calculate the size of components of the object */
      bytes += i.length * 2;
      bytes += getMessageSize(message[i]);
    }
  } else if (typeof message == 'number') {
    bytes += 8;
  } else if (message === undefined) {
    bytes += 1;
  }
  return bytes;
}

/* Wrapper for the vcdiff decoder, allowing us to check the size of the original diff */
function decodeAndCountSize(delta, source) {
  totalWithDeltas.innerHTML = parseInt(totalWithDeltas.innerHTML, 10) + delta.byteLength;
  var result = decoder.decode(delta, source);
  return result;
}
[--- /Javascript ---]

[--- HTML ---]
<html>
<head>
  <script src="//cdn.ably.io/lib/ably-1.js"></script>
  <script src="//cdn.ably.io/lib/vcdiff-decoder.min-1.js"></script>
  </head>
<body>
  <h1><a href="https://ably.com" target="_blank" rel="noopener">Ably realtime deltas comparison</a></h1>
  <p>A simple example demonstrating how using <a href="https://ably.com/docs/realtime/channels/channel-parameters/deltas" target="_blank">deltas</a> compares to not using deltas.</p>
  <p>This example by default is subscribed to the CTtransit bus source, found on the <a href="https://ably.com/hub" target="_blank">Ably Hub</a>. If you want to test this on one of your own channels, you can replace the API key with one of your own.</p>

  <p>Cumulative size of messages sent <b>without deltas</b>: <span id="no-delta">0</span> Bytes</p>
  <p>Cumulative size of messages sent <b>with deltas</b>: <span id="delta">0</span> Bytes</p>
  <section>
      <h2>No deltas output</h2>
      <ul id="received-not-deltas"></ul>

      <h2>Deltas output</h2>
      <ul id="received-deltas"></ul>
    </tr>
  </section>
</body>
</html>
[--- /HTML ---]

[--- CSS ---]
body {
  font-family: Arial, Sans Serif;
  font-size: 13px;
  min-width: 700px;
}

h1 {
  font-family: Arial, Sans Serif;
  font-size: 18px;
}

a, a:visited, a:active {
  color: #ed760a;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

section {
  padding: 10px 4px;
  column-count: 2;
  column-gap: 5px;
}

h2 {
  margin: 0 auto 4px;
  text-align: center;
}

ul {
  display: block;
  height: calc(100vh - 230px);
  margin:0;
  padding:0;
  border: 1px solid #CCC;
  overflow: scroll;
  background-color: #EEE;

}

li {
  padding: 2px 5px;
  list-style: none;
  line-height: 2em;
}

li:nth-child(even) {
  background:#ccc;
}

section {
  column-count: 2;
}
[--- /CSS ---]
