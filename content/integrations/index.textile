---
title: Integrations overview
meta_description: "Integrations enable external services to send data to Ably channels, and for Ably events to send their data to external services."
meta_keywords: "integrations, integration, integrate, stream, external service, webhook, webhooks, functions"
redirect_from:
    - /general/integrations
---

Ably integrations enable you to send your data from Ably to an external service or push data into Ably from an external service.

h2(#inbound). Inbound integrations

Inbound integrations are where one of your external systems is sending data into Ably.

* "Inbound Webhooks":/integrations/inbound/webhooks enable you to configure an endpoint for generated requests to be picked up by Ably and published to a channel.
* The "Kafka connector":/integrations/inbound/kafka-connector enables you to send data from one or more Kafka topics into Ably channels.

h2(#outbound). Outbound Webhooks

"Outbound Webhooks":/integrations/webhooks enable you to push data to an external system from within Ably. These events that happen within Ably include messages being published to a channel, presence events being emitted, and changes in the channel occupancy and activity.

The following pre-built Webhooks can be configured:

* "AWS Lambda functions":/integrations/webhooks/lambda
* "Google Cloud functions":/integrations/webhooks/gcp-function
* "Zapier":/integrations/webhooks/zapier
* "Cloudflare Workers":/integrations/webhooks/cloudflare
* "IFTTT":/integrations/webhooks/ifttt

h2(#continuous). Outbound streaming

"Outbound streaming":/integrations/streaming involves streaming a constant flow of data from Ably to other streaming or queuing services. This is useful for integrating Ably with large-scale, event-driven architectures or data pipelines.

The following pre-built services can be configured:

* "Kafka":/integrations/streaming/kafka
* "AWS Kinesis":/integrations/streaming/kinesis
* "AMQP":/integrations/streaming/amqp
* "AWS SQS":/integrations/streaming/sqs
* "Apache Pulsar":/integrations/streaming/pulsar

h2(#queues). Message queues

"Message queues":/integrations/queues enable asynchronous communication between a queueing pattern. Producers (Ably channels) publish messages to a queue, and consumers retrieve them in a first-in, first-out order.

Whilst pub-sub channels broadcast messages to all subscribers, queues distribute work among consumers. Both patterns serve different use cases. For example, pub/sub is ideal for many users to receive realtime updates, while queues handle tasks like triggering emails efficiently.
