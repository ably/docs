An @HttpPaginatedResponse@ is a "@PaginatedResult@":/rest/types#paginated-result – a type that represents a page of results, plus metadata indicating the relative queries available to it – that carries additional information about the response to an HTTP request. It is used when "making custom HTTP requests":/rest/usage#request.

h4.
  default: Properties
  java:    Members
  ruby:    Attributes
  python:  Attributes


- <span lang="default">items</span><span lang="csharp">Items</span> := contains a page of results (for example an Array of "@Message@":#message or "@PresenceMessage@":#presence-message objects for a channel history request). <br><span lang="default">__Type: @Array<>@__</span><span lang="python">__Type: @List<>@__</span>

- <div lang="javascript,nodejs,java,swift,objc">isLast</div> := @true@ if this page is the last page<br>__Type: @Boolean@__
- <div lang="ruby">last?</div> := @true@ if this page is the last page<br>__Type: @Boolean@__
- <div lang="php">isLast()</div> := @true@ if this page is the last page<br>__Type: @Boolean@__
- <div lang="python">is_last()</div> := @True@ if this page is the last page<br>__Type: @Boolean@__

- <div lang="default">hasNext</div> := @true@ if there are further pages<br>__Type: @Boolean@__
- <div lang="csharp">HasNext</div> := @true@ if there are further pages<br>__Type: @Boolean@__
- <div lang="ruby">has_next?</div> := @true@ if there are further pages<br>__Type: @Boolean@__
- <div lang="php">hasNext()</div> := @true@ if there are further pages<br>__Type: @Boolean@__
- <div lang="python">has_next()</div> := @True@ if there are further pages<br>__Type: @Boolean@__

- <span lang="default">statusCode</span><span lang="ruby">status_code</span><span lang="csharp">StatusCode</span> := the HTTP status code of the response<br>__Type: Number__
- <span lang="default">success</span><span lang="csharp">Success</span> := whether that HTTP status code indicates success (equivalent to @200 <= statusCode < 300@)<br>__Type: Boolean__
- <span lang="default">headers</span><span lang="csharp">Headers</span> := the response's headers<br>__Type: Object__

h4. Methods

h6.
  default: first
  csharp: First

bq(definition).
  default:  first(callback("ErrorInfo":/realtime/types#error-info err, "HttpPaginatedResponse":/realtime/types#http-paginated-response resultPage))
  ruby:     "HttpPaginatedResponse":/realtime/types#http-paginated-response first
  php:      "HttpPaginatedResponse":/realtime/types#http-paginated-response first()
  python:   "HttpPaginatedResponse":/realtime/types#http-paginated-response first()
  csharp:   Task<HttpPaginatedResponse<T>> FirstAsync()
  java:     "HttpPaginatedResponse":/realtime/types#http-paginated-response first()
  swift,objc: first(callback: (ARTHttpPaginatedResponse?, ARTErrorInfo?) -> Void)

Returns a new @HttpPaginatedResponse@ for the first page of results. <span lang="ruby">When using the Realtime library, the @first@ method returns a "Deferrable":/realtime/types#deferrable and yields an "@HttpPaginatedResponse@":/realtime/types#http-paginated-response.</span><span lang="csharp">The method is asynchronous and returns a Task which needs to be awaited to get the @HttpPaginatedResponse":/realtime/types#http-paginated-response.</span>

h6.
  default: next
  csharp: Next

bq(definition).
  default:  next(callback("ErrorInfo":/realtime/types#error-info err, "HttpPaginatedResponse":/realtime/types#http-paginated-response resultPage))
  ruby:     "HttpPaginatedResponse":/realtime/types#http-paginated-response next
  php:      "HttpPaginatedResponse":/realtime/types#http-paginated-response next()
  python:   "HttpPaginatedResponse":/realtime/types#http-paginated-response next()
  csharp:   Task<"HttpPaginatedResponse":/realtime/types#http-paginated-response <T>> NextAsync()
  java:     "HttpPaginatedResponse":/realtime/types#http-paginated-response next()
  swift,objc: next(callback: (ARTPaginatedResult?, ARTErrorInfo?) -> Void)

Returns a new @HttpPaginatedResponse@ loaded with the next page of results. If there are no further pages, then <span lang="default">@null@</span><span lang="csharp">a blank HttpPaginatedResponse will be returned</span><span lang="java">@Null@</span><span lang="python">@None@</span><span lang="objc,swift">@nil@</span> is returned. <span lang="csharp">The method is asynchronous and return a Task which needs to be awaited to get the @HttpPaginatedResponse@</span><span lang="ruby">When using the Realtime library, the @first@ method returns a "Deferrable":/realtime/types#deferrable and yields an "HttpPaginatedResponse":/realtime/types#http-paginated-response.</span>
