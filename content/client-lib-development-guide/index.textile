---
title: Client Library Development Guide
section: client-lib-development-guide
index: 0
---

We aim to have the most comprehensive set of client libraries for Ably covering all widely used platforms and languages.
The reference material in this section is intended to support developers in creating, extending or bugfixing libraries for environments that we do not support already.

"See the list of existing libraries Â»":https://ably.io/download/realtime-client-libraries

h2. Overview

Client libraries are of two types: REST and Realtime.

REST libraries provide a convenient way to access the Ably REST API, and are intended to be used by clients that do not need message-by-message access to the service, but need to interact with the service to:
* publish messages on behalf of clients using the stateless REST publish API;
* issue tokens on behalf of other realtime clients;
* retrieve persisted message history;
* retrieve account and application usage statistics.

Realtime libraries provide access to the messaging service, enabling real-time message publication, channel subscription and presence. The Realtime library typically extends the REST library, so that Realtime clients can access the REST functionality as well.

While REST is supportable in any environment supporting HTTP, the Realtime API is supportable only in environments that support asynchronous or evented IO. The environments we target for Realtime library support are those that might realistically be used to implement realtime system backends (nodejs, python twisted, java, etc) or environments that might be used to develop client apps (obviously the browser javascript environment, but also iOS, Android, etc).

Another important difference between the two interfaces is that the REST API has a stable interface definition at the REST level - ie the routes, formats, error codes - and are in principle accessible via any REST library. The Ably REST libraries provide convenience functionality, but they are just that; they are not the exclusive means to interface with
the Ably REST interface.

The Realtime interface, on the other hand, is implemented using an Ably-defined protocol (over WebSockets and other transports) and, although that protocol is published, we reserve the right to change the protocol and drop support for
superseded protocol versions at any time. Of course, we don't want to make life difficult for library developers, so any incompatible changes will be very carefully considered, but nonetheless developers must regard the protocol definition as being subject to change. Application developers using the Ably Realtime API should use the client library and can expect that API to be stable and supported even if the protocol changes underneath.

h2. Sandbox environment and library testing

The libraries each have test suites, and the test suites will run tests within temporary applications and accounts that are created during test setup. Although Ably does not provide a public provisioning API for account management (in the production system this is available only through the dashboard) there is a limited API provided via the REST
interface in the sandbox environment only, to enable test applications and keys to be provisioned. Therefore, all tests are set up to run against the sandbox environment.

See "Test API":test-api for details about the test routes provided in the REST API.

h2. Protocol definition

The core a Realtime library implementation is the implementation of the Ably protocol.
