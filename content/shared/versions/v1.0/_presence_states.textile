Whenever a member enters or leaves a channel, or updates "their member data":#member-data, a presence event is emitted to all presence subscribers on that channel. Subscribing to presence events makes it incredibly easy to build an app that shows, in real time, any changes to clients connected to Ably and present on a channel.

The following presence events are emitted:

- <span lang="ruby">:enter</span><span lang="python">PresenceAction.ENTER</span><span lang="java">Action.ENTER</span><span lang="csharp">Update</span><span lang="default">enter</span> := A new member has entered the channel

- <span lang="ruby">:leave</span><span lang="python">PresenceAction.LEAVE</span><span lang="java">Action.LEAVE</span><span lang="csharp">Leave</span><span lang="default">leave</span> := A member who was present has now left the channel. This may be a result of an explicit request to leave or implicitly when detaching from the channel. Alternatively, if a member's connection is abruptly disconnected and they do not resume their connection within a minute, Ably treats this as a leave event as the client is no longer present

- <span lang="ruby">:update</span><span lang="python">PresenceAction.UPDATE</span><span lang="java">Action.UPDATE</span><span lang="csharp">Update</span><span lang="default">update</span> := An already present member has updated their "member data":#member-data. Being notified of member data updates can be very useful, for example, it can be used to update the status of a user when they are typing a message

- <span lang="ruby">:present</span><span lang="python">PresenceAction.PRESENT</span><span lang="java">Action.PRESENT</span><span lang="csharp">Present</span><span lang="default">present</span> := When subscribing to presence events on a channel that already has members present, this event is emitted for every member already present on the channel before the subscribe listener was registered
