// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Ensure that divs show up correctly in all cases Ensures that divs show up correctly 6`] = `
[
  <blockquote
    class="definition"
    id="subscribe-event"
  >
    

    <p
      class="definition"
    >
      <span
        lang="default"
      >
        subscribe(String name, listener(
        <a
          href="#message"
        >
          Message
        </a>
        ))
      </span>
      <span
        lang="java"
      >
        void subscribe(String name, 
        <a
          href="#message-listener"
        >
          MessageListener
        </a>
         listener)
      </span>
      <span
        lang="csharp"
      >
        void Subscribe(string name, Action&lt;
        <a
          href="#message"
        >
          Message
        </a>
        &gt; handler)
      </span>
      <span
        lang="ruby"
      >
        subscribe(String name) → yields 
        <a
          href="#message"
        >
          Message
        </a>
      </span>
      <span
        lang="swift"
      >
        subscribe(name: String, callback: (
        <a
          href="#message"
        >
          ARTMessage
        </a>
        ) → Void) -&gt; ARTEventListener?
      </span>
      <span
        lang="objc"
      >
        subscribe(name: String, callback: (
        <a
          href="#message"
        >
          ARTMessage
        </a>
        ) → Void) -&gt; ARTEventListener?
      </span>
      <span
        lang="flutter"
      >
        StreamSubscription&lt;
        <a
          href="#message"
        >
          ably.Message
        </a>
        &gt; subscribe(name: String).listen((
        <a
          href="#message"
        >
          ably.Message
        </a>
        ) → void)
      </span>
    </p>
    

  </blockquote>,
  <p>
    Subscribe to messages with a given event 
    <code>
      name
    </code>
     on this channel. The caller supplies 
    <span
      lang="default"
    >
      a listener function
    </span>
    <span
      lang="csharp"
    >
      a lambda expression
    </span>
    <span
      lang="java"
    >
      an implementation of the 
      <a
        href="#message-listener"
      >
        MessageListener
      </a>
       interface
    </span>
    <span
      lang="ruby"
    >
      a block
    </span>
    , which is called each time one or more matching messages arrives on the channel.
  </p>,
  <div
    lang="csharp"
  />,
  <div
    lang="swift"
  />,
  <div
    lang="objc"
  />,
  <div
    lang="default"
  >
    <blockquote
      class="definition"
      id="subscribe-event-array"
    >
      <p
        class="definition"
      >
        <span
          lang="default"
        >
          subscribe(String[] names, listener(
          <a
            href="#message"
          >
            Message
          </a>
          ))
        </span>
        <span
          lang="java"
        >
          void subscribe(String[] names, 
          <a
            href="#message-listener"
          >
            MessageListener
          </a>
           listener)
        </span>
        <span
          lang="ruby"
        >
          subscribe(String *names) → yields 
          <a
            href="#message"
          >
            Message
          </a>
        </span>
        <span
          lang="flutter"
        >
          StreamSubscription&lt;
          <a
            href="#message"
          >
            ably.Message
          </a>
          &gt; subscribe(names: List&lt;String&gt;).listen((
          <a
            href="#message"
          >
            ably.Message
          </a>
          ) → void)
        </span>
      </p>
    </blockquote>
    <p>
      Subscribe a single listener to messages on this channel for multiple event 
      <code>
        name
      </code>
       values.
    </p>
  </div>,
]
`;

exports[`Ensure that divs show up correctly in all cases Ensures that divs show up correctly 7`] = `
[
  {
    "attribs": {
      "class": "definition",
      "id": "subscribe-event",
    },
    "data": [
      {
        "data": "
",
        "name": "text",
        "type": "text",
      },
      {
        "attribs": {
          "class": "definition",
        },
        "data": [
          {
            "attribs": {
              "lang": "default",
            },
            "data": [
              {
                "data": "subscribe(String name, listener(",
                "name": "text",
                "type": "text",
              },
              {
                "attribs": {
                  "href": "#message",
                },
                "data": [
                  {
                    "data": "Message",
                    "name": "text",
                    "type": "text",
                  },
                ],
                "name": "a",
                "type": "tag",
              },
              {
                "data": "))",
                "name": "text",
                "type": "text",
              },
            ],
            "name": "span",
            "type": "tag",
          },
          {
            "attribs": {
              "lang": "java",
            },
            "data": [
              {
                "data": "void subscribe(String name, ",
                "name": "text",
                "type": "text",
              },
              {
                "attribs": {
                  "href": "#message-listener",
                },
                "data": [
                  {
                    "data": "MessageListener",
                    "name": "text",
                    "type": "text",
                  },
                ],
                "name": "a",
                "type": "tag",
              },
              {
                "data": " listener)",
                "name": "text",
                "type": "text",
              },
            ],
            "name": "span",
            "type": "tag",
          },
          {
            "attribs": {
              "lang": "csharp",
            },
            "data": [
              {
                "data": "void Subscribe(string name, Action<",
                "name": "text",
                "type": "text",
              },
              {
                "attribs": {
                  "href": "#message",
                },
                "data": [
                  {
                    "data": "Message",
                    "name": "text",
                    "type": "text",
                  },
                ],
                "name": "a",
                "type": "tag",
              },
              {
                "data": "> handler)",
                "name": "text",
                "type": "text",
              },
            ],
            "name": "span",
            "type": "tag",
          },
          {
            "attribs": {
              "lang": "ruby",
            },
            "data": [
              {
                "data": "subscribe(String name) → yields ",
                "name": "text",
                "type": "text",
              },
              {
                "attribs": {
                  "href": "#message",
                },
                "data": [
                  {
                    "data": "Message",
                    "name": "text",
                    "type": "text",
                  },
                ],
                "name": "a",
                "type": "tag",
              },
            ],
            "name": "span",
            "type": "tag",
          },
          {
            "attribs": {
              "lang": "swift",
            },
            "data": [
              {
                "data": "subscribe(name: String, callback: (",
                "name": "text",
                "type": "text",
              },
              {
                "attribs": {
                  "href": "#message",
                },
                "data": [
                  {
                    "data": "ARTMessage",
                    "name": "text",
                    "type": "text",
                  },
                ],
                "name": "a",
                "type": "tag",
              },
              {
                "data": ") → Void) -> ARTEventListener?",
                "name": "text",
                "type": "text",
              },
            ],
            "name": "span",
            "type": "tag",
          },
          {
            "attribs": {
              "lang": "objc",
            },
            "data": [
              {
                "data": "subscribe(name: String, callback: (",
                "name": "text",
                "type": "text",
              },
              {
                "attribs": {
                  "href": "#message",
                },
                "data": [
                  {
                    "data": "ARTMessage",
                    "name": "text",
                    "type": "text",
                  },
                ],
                "name": "a",
                "type": "tag",
              },
              {
                "data": ") → Void) -> ARTEventListener?",
                "name": "text",
                "type": "text",
              },
            ],
            "name": "span",
            "type": "tag",
          },
          {
            "attribs": {
              "lang": "flutter",
            },
            "data": [
              {
                "data": "StreamSubscription<",
                "name": "text",
                "type": "text",
              },
              {
                "attribs": {
                  "href": "#message",
                },
                "data": [
                  {
                    "data": "ably.Message",
                    "name": "text",
                    "type": "text",
                  },
                ],
                "name": "a",
                "type": "tag",
              },
              {
                "data": "> subscribe(name: String).listen((",
                "name": "text",
                "type": "text",
              },
              {
                "attribs": {
                  "href": "#message",
                },
                "data": [
                  {
                    "data": "ably.Message",
                    "name": "text",
                    "type": "text",
                  },
                ],
                "name": "a",
                "type": "tag",
              },
              {
                "data": ") → void)",
                "name": "text",
                "type": "text",
              },
            ],
            "name": "span",
            "type": "tag",
          },
        ],
        "name": "p",
        "type": "tag",
      },
      {
        "data": "
",
        "name": "text",
        "type": "text",
      },
    ],
    "name": "blockquote",
    "type": "tag",
  },
  {
    "attribs": {},
    "data": [
      {
        "data": "Subscribe to messages with a given event ",
        "name": "text",
        "type": "text",
      },
      {
        "attribs": {},
        "data": [
          {
            "data": "name",
            "name": "text",
            "type": "text",
          },
        ],
        "name": "code",
        "type": "tag",
      },
      {
        "data": " on this channel. The caller supplies ",
        "name": "text",
        "type": "text",
      },
      {
        "attribs": {
          "lang": "default",
        },
        "data": [
          {
            "data": "a listener function",
            "name": "text",
            "type": "text",
          },
        ],
        "name": "span",
        "type": "tag",
      },
      {
        "attribs": {
          "lang": "csharp",
        },
        "data": [
          {
            "data": "a lambda expression",
            "name": "text",
            "type": "text",
          },
        ],
        "name": "span",
        "type": "tag",
      },
      {
        "attribs": {
          "lang": "java",
        },
        "data": [
          {
            "data": "an implementation of the ",
            "name": "text",
            "type": "text",
          },
          {
            "attribs": {
              "href": "#message-listener",
            },
            "data": [
              {
                "data": "MessageListener",
                "name": "text",
                "type": "text",
              },
            ],
            "name": "a",
            "type": "tag",
          },
          {
            "data": " interface",
            "name": "text",
            "type": "text",
          },
        ],
        "name": "span",
        "type": "tag",
      },
      {
        "attribs": {
          "lang": "ruby",
        },
        "data": [
          {
            "data": "a block",
            "name": "text",
            "type": "text",
          },
        ],
        "name": "span",
        "type": "tag",
      },
      {
        "data": ", which is called each time one or more matching messages arrives on the channel.",
        "name": "text",
        "type": "text",
      },
    ],
    "name": "p",
    "type": "tag",
  },
  {
    "attribs": {
      "lang": "csharp",
    },
    "data": [],
    "name": "div",
    "type": "tag",
  },
  {
    "attribs": {
      "lang": "swift",
    },
    "data": [],
    "name": "div",
    "type": "tag",
  },
  {
    "attribs": {
      "lang": "objc",
    },
    "data": [],
    "name": "div",
    "type": "tag",
  },
  {
    "attribs": {
      "lang": "default",
    },
    "data": [
      {
        "attribs": {
          "class": "definition",
          "id": "subscribe-event-array",
        },
        "data": [
          {
            "attribs": {
              "class": "definition",
            },
            "data": [
              {
                "attribs": {
                  "lang": "default",
                },
                "data": [
                  {
                    "data": "subscribe(String[] names, listener(",
                    "name": "text",
                    "type": "text",
                  },
                  {
                    "attribs": {
                      "href": "#message",
                    },
                    "data": [
                      {
                        "data": "Message",
                        "name": "text",
                        "type": "text",
                      },
                    ],
                    "name": "a",
                    "type": "tag",
                  },
                  {
                    "data": "))",
                    "name": "text",
                    "type": "text",
                  },
                ],
                "name": "span",
                "type": "tag",
              },
              {
                "attribs": {
                  "lang": "java",
                },
                "data": [
                  {
                    "data": "void subscribe(String[] names, ",
                    "name": "text",
                    "type": "text",
                  },
                  {
                    "attribs": {
                      "href": "#message-listener",
                    },
                    "data": [
                      {
                        "data": "MessageListener",
                        "name": "text",
                        "type": "text",
                      },
                    ],
                    "name": "a",
                    "type": "tag",
                  },
                  {
                    "data": " listener)",
                    "name": "text",
                    "type": "text",
                  },
                ],
                "name": "span",
                "type": "tag",
              },
              {
                "attribs": {
                  "lang": "ruby",
                },
                "data": [
                  {
                    "data": "subscribe(String *names) → yields ",
                    "name": "text",
                    "type": "text",
                  },
                  {
                    "attribs": {
                      "href": "#message",
                    },
                    "data": [
                      {
                        "data": "Message",
                        "name": "text",
                        "type": "text",
                      },
                    ],
                    "name": "a",
                    "type": "tag",
                  },
                ],
                "name": "span",
                "type": "tag",
              },
              {
                "attribs": {
                  "lang": "flutter",
                },
                "data": [
                  {
                    "data": "StreamSubscription<",
                    "name": "text",
                    "type": "text",
                  },
                  {
                    "attribs": {
                      "href": "#message",
                    },
                    "data": [
                      {
                        "data": "ably.Message",
                        "name": "text",
                        "type": "text",
                      },
                    ],
                    "name": "a",
                    "type": "tag",
                  },
                  {
                    "data": "> subscribe(names: List<String>).listen((",
                    "name": "text",
                    "type": "text",
                  },
                  {
                    "attribs": {
                      "href": "#message",
                    },
                    "data": [
                      {
                        "data": "ably.Message",
                        "name": "text",
                        "type": "text",
                      },
                    ],
                    "name": "a",
                    "type": "tag",
                  },
                  {
                    "data": ") → void)",
                    "name": "text",
                    "type": "text",
                  },
                ],
                "name": "span",
                "type": "tag",
              },
            ],
            "name": "p",
            "type": "tag",
          },
        ],
        "name": "blockquote",
        "type": "tag",
      },
      {
        "attribs": {},
        "data": [
          {
            "data": "Subscribe a single listener to messages on this channel for multiple event ",
            "name": "text",
            "type": "text",
          },
          {
            "attribs": {},
            "data": [
              {
                "data": "name",
                "name": "text",
                "type": "text",
              },
            ],
            "name": "code",
            "type": "tag",
          },
          {
            "data": " values.",
            "name": "text",
            "type": "text",
          },
        ],
        "name": "p",
        "type": "tag",
      },
    ],
    "name": "div",
    "type": "tag",
  },
]
`;
