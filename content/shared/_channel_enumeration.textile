The REST API now includes the endpoint:

```[sh]
  GET /channels
```

This enumerates all active channels in the application. This is a paginated API following the same API conventions as other paginated APIs in the "Ably REST library":/rest.

The following parameters are supported:

- limit := _100_ optionally specifies the maximum number of results to return. A limit greater than 1000 is unsupported<br>__Type: @integer@__
- prefix := optionally limits the query to only those channels whose name starts with the given prefix<br>__Type: @string@__
- by := _value_ optionally specifies whether to return just channel names (@by=id@) or "ChannelDetails":general/channel-lifecycle#channel-details (@by=value@)

The credentials presented with the request must include the @list-channels@ permission for the wildcard resource ('@*@') or, if a @prefix@ is specified, for a resource that matches the @prefix@.

Client libraries do not currently support this API, but it is usable via the generic "request API":/rest/usage#request.

@Enumeration@ is possible of all channels in an app, by repeated calls to the API, following the @next@ relative link on each successive call, until there is no @next@ relative link. However, the state of the app and the cluster itself can change during that enumeration. This API therefore has the following limitations:

- channels that become active, or become inactive, between the first and last request in the sequence, might or might not appear in the result. The API guarantees that if a channel is continuously active from the time that the first request is made until the time that the last request completes, then it is guaranteed to be present in the result. Similarly, if a channel is continously inactive between those times then it is guaranteed not to be present in the result
- cluster state changes, in this first release of this API, may cause a pagination sequence to become invalid, in which case the request will respond with an error with code @40011@. In this case, to get a complete result, it is necessary to start the enumeration again from the beginning. Other API options to deal with this possibility will be provided in later versions of this API. Enumerations that are satisfiable in the first response page do not have this issue.