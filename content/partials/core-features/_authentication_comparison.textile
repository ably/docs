When deciding on which authentication method you will be using, it is recommended you bear in mind the "principle of least privilege":https://en.wikipedia.org/wiki/Principle_of_least_privilege. 

A client should ideally only possess the credentials and rights that it needs to accomplish what it wants. This way, if the credentials are compromised, the rights that can be abused by an attacker are minimized.

The following table provides guidelines on what to consider when choosing your authentication method. Many applications will most naturally use a mixed strategy: one or more trusted application servers will use basic authentication to access the service and issue tokens over HTTPS, whereas remote browsers and devices will use individually issued tokens:

|_. Scenario |_. "Basic":/docs/auth/basic |_. "Token":/docs/auth/token |_. Description |
| Your scripts may be exposed | No | Yes | If the script, program or system holding the key is exposed, for example on a user's device, you should not embed an "API key":/docs/auth#api-key and instead use "Token Authentication":/docs/auth/token. If the script is on a secure environment such as your own server, an "API key":/docs/auth#api-key with "Basic Authentication":/docs/auth#basic is fine. |
| Your connection may be insecure | No | Yes | If there is a risk of exposure of the client's credentials, either directly or over an insecure, or insecurely proxied, connection, "Token Authentication":/docs/auth/token should be used. If you are sure the connection is secure and unmediated, "Basic Authentication":/docs/auth/basic is acceptable. |
| You have no server to control access | Yes | No  | If you do not have your own server to perform authentication and provide "tokens":/docs/api/realtime-sdk/authentication#tokens to users, you'll need to use "Basic Authentication":/docs/auth/basic. |
| You require fine-grained access control | No | Yes | If you need to provide "privileges":/docs/auth/capabilities on a user-by-user basis, you'd be better using "Token Authentication":/docs/auth/token. If you only need a few access control groups, "Basic Authentication":/docs/auth/basic is reasonable. |
| Users need restricted periods of access | No | Yes | If you need users to only have access for a certain period of time, or the ability to revoke access, Token Authentication is needed. If users are able to always have access, Basic Authentication is acceptable. |
| Users need to identify themselves | Partial  | Yes | If the user can be trusted to "identify":/docs/auth/identified-clients itself, "Basic Authentication":/docs/auth/basic is fine. If the user cannot be trusted however, "Token Authentication":/docs/auth/token is better as it allows for a trusted token distributor to identify the user instead. |
