---
title: Realtime.co VS Push Technology
section:
index: 150
competitors:
  - realtime
  - push-technology
jump_to:
  Compare:
    - Reliability#reliability
    - Interoperability#interoperability
    - Ease of use#starting
    - Documentation quality#documenting
    - Transport options#connectivity
    - Features#features
    - Management tools#management
    - Security#security
    - Support#support
    - Pricing#pricing
    - General#who-uses
    - Which is best?#best
---

_Disclaimer: All information is as accurate as possible as of publishing, January 2019. It’s worth noting that the information presented in this article has been gathered based on documentation and resources freely available online from Realtime.co and Push Technology. Be sure to double-check anything before you make any decisions. If you do find anything incorrect or out of date then please "let us know":https://www.ably.io/contact._

_That said, the aim is to help you make a more informed decision when it comes to choosing a realtime data streaming or messaging platform. We’ll cover a set of questions we think are essential to ask of any realtime data streaming platform._

"Realtime.co":http://realtime.co and "Push Technology":http://pushtechnology.com are realtime messaging platforms offering high-throughput and realtime data delivery between online networks of users and services. Like all platforms there are pros and cons of each.

h4. Contents

* "Is it fast, reliable, and redundant?":#reliability
* "What's the level of platform interoperability?":#interoperability
* "How easy is it to get started and then scale up?":#starting
* "How does the platform handle realtime connectivity?":#connectivity
* "How mature is the feature set?":#features
* "Does the platform offer realtime API Management tools?":#management
* "How secure is the platform and the way it does things?":#security
* "How responsive and helpful is support?":#support
* "How clear, flexible, and scalable is the pricing structure?":#interoperability

To help you answer the questions above in relation to Realtime.co and Push Technology we’ve done our best to perform an unbiased, high-level comparative analysis of both platforms.

h2(#reliability). Is it globally fast, reliable, and redundant?

Before considering anything else you need to trust your realtime provider can deliver a stable and reliable service that’s easy to implement.

compare_table(Reliability, Realtime.co, Push Technology).

</br>

h2(#interoperability). What’s the level of platform interoperability?

The modern internet is a web of different languages, platforms, open and proprietary protocols, and services built on top of other services. This isn’t likely to change anytime soon so a platform that supports widespread interoperability is essential in the long-term. There are three questions to help assess how interoperable a platform is:

* How extensive is the support for different languages, frameworks, and protocols?
* How easy is it to migrate to or move away from the platform?
* Are there ‘adapters’ for streaming data into third party platforms?

compare_table(Interoperability, Realtime.co, Push Technology).

</br>

h2(#starting). How easy is it to get started and scale up?

We all want to work with platforms and technologies that are easy to understand, implement, and then scale. When it comes to realtime platforms you can get a good feel for this by looking at:

* The user-friendliness of the API
* The documentation

h4(#ease). Is the API easy to use?

Looking at the official Node.js Client, this section compares ease of publishing.

<%= partial partial_version('compare/shared/ease/_realtime') %>

<%= partial partial_version('compare/shared/ease/_push') %>

h5(#ease-best). Which API is best?

Both Realtime.co and Push Technology APIs are easy to use. They’re simple and self-explanatory, getting you up and running in a relatively short time.

h2(#documenting). Is the documentation any good?

Documentation is the bedrock of understanding and using software, especially for such complicated and essential functionality as realtime messaging. Nowadays this is a really low bar but far too many services still have minimal, incomplete, or no documentation at all. Clear and succinct documentation is usually a good indication that the service is well-designed and you’ll be able to find the information you need. And if they’re using the "OpenAPI Specification":https://github.com/OAI/OpenAPI-Specification then that’s a good sign too.

So how do "Realtime.co":https://framework.realtime.co/messaging/#documentation and "Push Technology":https://www.pushtechnology.com/developers/ stack up? Both do quite well with fairly extensive documentation across quickstart guides, SDKs, and docs explaining some of the core features of their respective platforms such as ‘presence’ and ‘topics’. That said, Push Technology has the edge with clearer, more current, and a wider variety of documentation.

*NOTE: at the time of writing (the end of January 2019) it looks as if the Realtime.co documentation is quite out of date, with the most recent update on January 2nd 2018. This is a red flag because it suggests the product is no longer in active development or being maintained. In contrast, Push Technology’s last update was January 10th 2019. That’s over a year’s difference.*

h2(#connectivity). Connectivity and transport

How your data/messages are transported changes the speed of delivery and fundamentally impacts your product or service. A realtime platform provider should always choose the best transport available based on the browser and connection available. The client library should "prioritize transports in this order":https://support.ably.io/support/solutions/articles/3000044831-which-transports-are-supported:

* "Websockets":/concepts/websockets
* XHR streaming
* "XHR polling":/concepts/long-polling
* JSONP polling

Both Realtime.co and Push Technology support the full range of transports.

h2(#features). How mature is the feature set?

It takes non-trivial engineering effort to adopt a realtime data streaming platform and integrate into your application or service. It’s natural you’ll want to make sure the platform you choose has a mature and full feature set that provides the basic the functionality you’d expect from a realtime platform, provides the features you need right now, and has the functionality to support you as you grow and your needs change.

Below is a feature matrix with a set of standard features you’d expect to see on offer from an established realtime data streaming platform. Realtime.co and Push Technology are compared side by side against these features.

compare_table(Features, Realtime.co, Push Technology, Why does it matter?).

</br>

As the matrix shows, both platforms offer a good level of realtime messaging functionality. But they also offer some additional help for developers when it comes to doing the technical heavy lifting. However, both could offer more on that front as features like serverless functions, reliable message ordering, and message queues are missing. With serverless compute, functions, and event-driven architecture becoming more integrated into our software design these omissions should weigh heavily in your decision.

While on the surface it may look as if Push Technology has fewer features than Realtime.co, they both offer similar functionality. And one could argue that those features Realtime.co does offer that Push Technology doesn’t aren’t in the best of shape.

That said, each clearly has different offerings with their own strengths and weaknesses. So, as stated before, using this feature matrix as a guide, check the platform functionality in relation to your own specific requirements.

h2(#management). Does the platform offer realtime API Management tools?

The demand for realtime apps and experiences is exploding, which is probably why you’re reading this vendor comparison. Current realtime data streaming providers can give you the much-needed core transfer infrastructure for realtime data - but they put the responsibility for managing realtime APIs back onto you, which can get messy and why we all use REST API management tools nowadays.

A couple of extra considerations when you’re choosing a realtime data streaming platform:

* In addition to the realtime streaming infrastructure, does the platform provide the operational tools you need to stream, manage, and exchange data in realtime? For example, analytics, developer portals, and rate limiting tools.
* Is end-to-end data delivery supported - from source to subscriber? This might be sending data straight from an IoT sensor to a smartphone, without needing to pass through your own servers first.

A globally distributed data stream network providing an "all-encompassing platform":https://www.ably.io/api-streamer with everything you need to build the realtime experiences is the future. Just something to think about.

h2(#security). How secure is the platform and the way it does things?

Security and encryption are front of mind and any realtime platform will have robust security built into their design and delivery. A good general checklist for security is:

* TLS connection to ensure all "data in transit are encrypted":https://support.ably.io/support/solutions/articles/3000045208-are-messages-sent-to-and-received-from-ably-sent-security-using-tls
* "Token-based authentication":https://www.ably.io/documentation/core-features/authentication (including "JWT":https://jwt.io support), which ensures your private key is never shared and instead a short-lived token is used to authenticate
* Configurable "private key permissions":https://support.ably.io/support/solutions/articles/3000030502-setting-up-and-managing-api-keys to restrict "channels/topics":https://support.ably.io/support/solutions/articles/3000030057-what-are-channel-rules-and-how-can-i-use-them-in-my-app or operations
* "Encrypted message payloads":https://support.ably.io/support/solutions/articles/3000029535-cross-platform-symmetrical-encryption-offered-by-the-libraries to enhance security and privacy of all messages

<%= partial partial_version('compare/shared/security/_realtime') %>

<%= partial partial_version('compare/shared/security/_push') %>

h2(#support). How responsive and helpful is support?

Even if a platform or product is well-designed and the docs are strong, the nature of software and complex infrastructure means you’ll inevitably need to talk to a human at some point. Whether it’s about pricing, implementation, or a bug - support is a fact of building stuff on the internet. So it’s essential you can rely on responsive, helpful support.

Good indicators are short response times across live chat and email, access to people who understand the nitty gritty technical details of the platform, and an up-to-date support portal for docs. An active community with forums or a group chat can also be a good sign.

<%= partial partial_version('compare/shared/support/_realtime') %>

<%= partial partial_version('compare/shared/support/_push') %>

We can’t comment on the access to engineers for deeply technical support. It’s also worth noting it looks like there’s only a single person manning the live chat.

When it comes to support, Push Technology is the clear winner.

h2(#pricing). How clear, flexible, and scalable is the pricing structure?

Pricing for realtime platforms should be flexible and scalable. Rigid pricing tiers with fixed quotas on messages and concurrent connections often result in huge price jumps when you hit arbitary limits. It can even impact on your service availablity if the realtime provider locks you out once you hit your limits. This can be a huge pain when you're trying to grow your business or have a service with unpredictable spikes. And it often works against you when you want to scale up capacity because the price changes are so dramatic. Not good.

When it comes to testing the service out, a "generous free tier":https://www.ably.io/pricing is helpful as it enables you to do some real stuff with your service and properly evaluate whether the provider can deliver what you need.

Both Realtime.co and Push Technology offer free and paid versions.

<%= partial partial_version('compare/shared/pricing/_realtime_value') %>

<%= partial partial_version('compare/shared/pricing/_push_value') %>

h2(#who-uses). Who’s behind the platforms?

It’s good to know who’s behind a company when you’re relying on them for such an essential service. Do they have a proven track record? Will they be around next year? These are all valid concerns. We’ve tried to answer these questions with information from each platform’s website.

h4. How long have they been around?

Push Technology was founded in 2006 while Realtime.co was established in 2014.

h4. Team size

According to Crunchbase, "Realtime.co":https://www.crunchbase.com/organization/realtime-co has 51-100 employees and "Push Technology":https://www.crunchbase.com/organization/push-technology has 11-50 employees. It’s worth noting that Realtime.co is actually a product named Realtime Framework produced by Realtime.co app creators.

h4. Track record

Both Realtime.co and Push Technology both have a range of brands using their platforms, including:

|_. Products |_. Realtime.co |_. Push |
| | League Of War: Mercenaries | Brenock Technology (Ocean Guardian) |
| | Buddytruk | PIA First |
| | The Fluid App | Tradition |
| | Mastercook | Sportingbet |
| | Brandlive | Consorsbank |

</br>

h2(#best). Which platform is best?

Unfortunately this just isn’t a question we can answer outright. Both of these realtime data streaming platforms have their pros and cons when it comes to functionality. However, on the strength of docs, level of support, and outward strength of the core product Push Technology is likely to be the better choice of the two.

And, as we’ve mentioned twice before, as of January 2019 it’s unclear whether Realtime.co is still actively building or even maintaining their product. So please do your own research before choosing any provider.

Ultimately the choice is yours but hopefully this article helped you gain a better understanding of what you should look for in a "realtime data streaming platform":https://www.ably.io - and whether Realtime.co or Pusher Technology can provide what you’re looking for.
