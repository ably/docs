---
title: Pusher vs PubNub
section: compare
index: 151
published_date: April 2019
competitors:
  - pusher
  - pubnub
jump_to:
  Compare:
    - Reliability#reliability
    - Interoperability#interoperability
    - Ease of use#ease
    - Documentation quality#documenting
    - Transport options#connectivity
    - Features#features
    - Management tools#management
    - Security#security
    - Support#support
    - Pricing#pricing
    - Which is best?#best
---

<%= partial partial_version('compare/intros/_introduction') %>

h2(#reliability). Is it globally fast, reliable, and redundant?

<%= partial partial_version('compare/intros/_reliability') %>

compare_table(Reliability).

h2(#interoperability). What’s the level of platform interoperability?

<%= partial partial_version('compare/intros/_interoperability') %>

compare_table(Interoperability).

h2(#ease). How easy is it to get started and scale up?

<%= partial partial_version('compare/intros/_starting') %>

Note that we’ve only done a high-level overview of the API and initial setup so we can’t speak for more nuanced and long-term usability of the Pusher or PubNub APIs.

<%= partial partial_version('compare/ease/_pusher') %>

<%= partial partial_version('compare/ease/_pubnub') %>

h5(#ease-best). Which API is best?

Both the Pusher and PubNub JavaScript and Node.js APIs were easy to implement. They were simple and self-explanatory, getting us up and running in a relatively short time. And the ‘Quick start’ docs led us nicely through the setup process.

h2(#documenting). Is the documentation any good?

<%= partial partial_version('compare/intros/_documentation') %>

So how do "Pusher":https://pusher.com/docs and "PubNub":https://www.pubnub.com/docs stack up? Both do quite well with fairly extensive documentation across quickstart guides, SDKs, and docs explaining some of the core features of their respective platforms along with some "concepts":https://www.ably.io/concepts?utm_source=pusher_v_pubnub&utm_medium=compare_pages around streaming data in general.

As an aside, Pusher’s docs seem to focus on explaining the high-level concepts behind pub/sub messaging and then quickly getting you up and running. Whereas PubNub seems to focus on helping you select your programming language and providing a more in-depth implementation.

h2(#connectivity). Connectivity and transport

<%= partial partial_version('compare/intros/_connectivity') %>

"Pusher":https://pusher.com/websockets provide first-class WebSocket support with fallbacks for older clients.

Whereas PubNub rely on the HTTP transport protocol for their client libraries. A WebSocket compliant interface is provided in some libraries, however this is just a wrapper around an underlying HTTP transport.

The general consensus in the realtime industry is that the WebSocket protocol is a faster, more efficient transport option than HTTP. And while, at the moment, HTTP is more widely supported (although as of early 2019 the difference is small and rapidly shrinking) many believe WebSockets will become the universally-accepted standard for streaming data in the near future.

h2(#features). How mature is the feature set?

<%= partial partial_version('compare/intros/_features') %>

compare_table(Features, Why does this matter?).

As the matrix shows, both providers offer a good level of realtime messaging functionality. They also offer some additional help for developers when it comes to doing the technical heavy lifting. Yet both could offer more on that front as features like serverless functions, reliable message ordering, and message queues are missing or proprietary. With serverless compute and event-driven architecture becoming more integrated into our software design these omissions should weigh heavily in your decision.

PubNub has wider feature coverage, beating Pusher on message history and providing a proprietary solution for executing serverless functions. That said, the two have similar levels of service and both provide solid options. So, as stated before, using this feature matrix as a guide, check the platform functionality in relation to your own specific requirements and preferences.

h2(#management). Does the platform offer realtime API Management tools?

<%= partial partial_version('compare/intros/_api_tools') %>

h2(#security). How secure is the platform and the way it does things?

<%= partial partial_version('compare/intros/_security') %>

compare_table(Security, Why does it matter?).

h2(#support). How responsive and helpful is support?

<%= partial partial_version('compare/intros/_support') %>

<%= partial partial_version('compare/support/_pusher') %>

<%= partial partial_version('compare/support/_pubnub') %>

Until now Pusher and PubNub have been almost equal. PubNub nudge ahead with what seems to be a more comprehensive support offering.

h2(#pricing). How clear, flexible, and scalable is the pricing structure?

Like every realtime provider Pusher and PubNub offer free tiers. We found PubNub’s pricing to be a little obscure pricing with Pusher leaving little room for flexibility. We’ll take each provider into account separately and link to pricing pages so you can explore for yourself in more detail.

<%= partial partial_version('compare/pricing/_pusher_value') %>

<%= partial partial_version('compare/pricing/_pubnub_value') %>

Pricing is difficult to gauge based on pricing pages alone. A lot will depend on your usage and if you’re an Enterprise customer you’ll likely end up with custom SLAs. However, it’s clear Pusher aim for a simpler yet more rigid pricing structure while PubNub seem to have adopted a more complicated structure with granular, yet obscure and more expensive, pricing.

h2(#best). Which platform is best?

Unfortunately this just isn’t a question we can answer outright. Both of these data streaming platforms have their pros and cons when it comes to functionality. Here’s a recap of the major differences:

* Pusher uses the WebSocket protocol whereas PubNub uses HTTP
* PubNub supports serverless functions with their proprietary system whereas Pusher has no support for any serverless function - neither support queuing or streaming into existing third party solutions
* Neither do well on pricing but PubNub seems to be more expensive and a little more obscure than Pusher - but Pusher has simplistic tiers that don’t provide flexibility
* PubNub seems to offer better support than Pusher, but you need to purchase extra support plans
* Neither provide management tools or end-to-end streaming for realtime APIs

Broadly speaking it looks like Pusher is better for developers with simpler uses for realtime messaging and who want to get up and running quickly. Whereas PubNub might be better for organizations with more complex requirements and larger budgets. But please do your own research before choosing any provider.

Ultimately the choice is yours but hopefully this article helped you gain a better understanding of what you should look for "in a realtime data streaming platform":https://ably.io - and whether Pusher or PubNub can provide what you’re looking for.
