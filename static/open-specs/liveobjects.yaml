openapi: 3.0.0
info:
  title: Ably LiveObjects REST API
  version: 1.0.0
  description: |
    # LiveObjects REST API

    LiveObjects provides a comprehensive REST API that allows you to directly work with objects over HTTP.<br><br>

    Whilst you can interact with these endpoints directly, it is recommended where possible to use the Ably Pub/Sub SDKs - which provide a convenient `request` method for interacting with Ably APIs.
    By using this method, you can take advantage of built-in support for Ably's authentication, pagination, and link headers, as well as automatic retry and fallback mechanics. This approach helps ensure consistent error handling, reduces setup overhead, and simplifies performing common operations against the LiveObjects REST API. Using this method, instead of implementing your own request handling, will lead to more robust and maintainable client-side integrations.
servers:
  - url: https://main.realtime.ably.net/
    description: Production server for Ably REST API

paths:
  /channels/{channelName}/objects:
    post:
      summary: Publishing operations
      description: |
        Publish operations to create or update objects on the channel.<br><br>
        
        For more information, see the usage documentation for [publishing operations](/docs/liveobjects/rest-api-usage#updating-objects).
      parameters:
        - name: channelName
          in: path
          required: true
          description: The channel name.
          schema:
            type: string
            example: "my-channel"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationRequest'
            examples:
              incObjectId:
                summary: Increment a specific LiveCounter object
                value:
                  operation: "COUNTER_INC"
                  objectId: "counter:iVji62_MW_j4dShuJbr2fmsP2D8MyCs6tFqON9-xAkc@1745828645269"
                  data:
                    number: 1
              incPath:
                summary: Increment a LiveCounter object by path
                value:
                  operation: "COUNTER_INC"
                  path: "votes.up"
                  data:
                    number: 1
              incPathWildcard:
                summary: Increment multiple LiveCounter objects by wildcard path
                value:
                  operation: "COUNTER_INC"
                  path: "votes.*"
                  data:
                    number: 1
              remove:
                summary: Remove a LiveMap entry
                value:
                  operation: "MAP_REMOVE"
                  objectId: "root"
                  data:
                    key: "posts"
              createMap:
                summary: Create a new LiveMap object
                value:
                  operation: "MAP_CREATE"
                  data:
                    title:
                      string: "LiveObjects is awesome"
                    createdAt:
                      number: 1745835181122
                    isPublished:
                      boolean: true
              createCounter:
                summary: Create a new LiveCounter object
                value:
                  operation: "COUNTER_CREATE"
                  data:
                    number: 5
              createMapPath:
                summary: Create a new LiveMap object at a specific path
                value:
                  operation: "MAP_CREATE"
                  path: "posts.post1"
                  data:
                    title:
                      string: "LiveObjects is awesome"
                    createdAt:
                      number: 1745835181122
                    isPublished:
                      boolean: true
      responses:
        '200':
          description: Successfully published operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CreateOrUpdateObjectsBadRequest"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/AuthError'
                  - $ref: '#/components/schemas/ClientRestrictionNotSatisfied'
                  - $ref: '#/components/schemas/InvalidTokenKey'
                  - $ref: '#/components/schemas/MalformedCredential'
                  - $ref: '#/components/schemas/OperationObjectSubscribeUnauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ApplicationDisabled'
                  - $ref: '#/components/schemas/StateOperationsOnlyAppliedOnRegularChannels'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppNotFound'
        '429':
          description: Too many requests
          $ref: '#/components/schemas/RateLimitExceeded'
    get:
      summary: List objects
      description: |
        Fetch a flat list of objects on the channel.<br><br>

        For more information, see the usage documentation for [list objects](/docs/liveobjects/rest-api-usage#fetching-objects).
      parameters:
        - name: channelName
          in: path
          required: true
          description: The channel name.
          schema:
            type: string
            example: "my-channel"
        - name: values
          in: query
          required: false
          description: If `true`, includes the values of objects in the response. See [including values](/docs/liveobjects/rest-api-usage#fetching-objects-list-values).
          schema:
            type: boolean
            default: false
        - name: metadata
          in: query
          required: false
          description: If `true`, includes additional object [metadata](/docs/liveobjects/concepts/objects#metadata) in the response. See [including metadata](/docs/liveobjects/rest-api-usage#fetching-objects-list-metadata).
          schema:
            type: boolean
            default: false
        - name: limit
          in: query
          required: false
          description: Specifies the maximum number of objects to include in the response. See [pagination](/docs/liveobjects/rest-api-usage#fetching-objects-list-pagination).
          schema:
            type: integer
        - name: cursor
          in: query
          required: false
          description: The object ID to use as a cursor for pagination. See [pagination](/docs/liveobjects/rest-api-usage#fetching-objects-list-pagination).
          schema:
            $ref: '#/components/schemas/ObjectIdString'
      responses:
        '200':
          description: List of objects on the channel.
          content:
            application/json:
              schema:
                oneOf:
                  - type: array
                    items:
                      $ref: '#/components/schemas/LiveObjectShallow'
                  - type: array
                    items:
                      $ref: '#/components/schemas/ObjectIdString'
              examples:
                ids:
                  summary: "List of object IDs: ?values=false&metadata=false"
                  value:
                    - "counter:JbZYiHnw0ORAyzzLSQahVik31iBDL_ehJNpTEF3qwg8@1745828651669"
                    - "counter:iVji62_MW_j4dShuJbr2fmsP2D8MyCs6tFqON9-xAkc@1745828645269"
                    - "map:ja7cjMUib2LmJKTRdoGAG9pbBYCnkMObAVpmojCOmek@1745828596519"
                    - "root"
                values:
                  summary: "List of objects: ?values=true&metadata=false"
                  value:
                    - objectId: "counter:JbZYiHnw0ORAyzzLSQahVik31iBDL_ehJNpTEF3qwg8@1745828651669"
                      counter:
                        data:
                          number: 10
                    - objectId: "counter:iVji62_MW_j4dShuJbr2fmsP2D8MyCs6tFqON9-xAkc@1745828645269"
                      counter:
                        data:
                          number: 5
                    - objectId: "map:ja7cjMUib2LmJKTRdoGAG9pbBYCnkMObAVpmojCOmek@1745828596519"
                      map:
                        entries:
                          down:
                            data:
                              objectId: "counter:JbZYiHnw0ORAyzzLSQahVik31iBDL_ehJNpTEF3qwg8@1745828651669"
                          up:
                            data:
                              objectId: "counter:iVji62_MW_j4dShuJbr2fmsP2D8MyCs6tFqON9-xAkc@1745828645269"
                    - objectId: "root"
                      map:
                        entries:
                          votes:
                            data:
                              objectId: "map:ja7cjMUib2LmJKTRdoGAG9pbBYCnkMObAVpmojCOmek@1745828596519"
                valuesWithMetadata:
                  summary: "List of objects with metadata: ?values=true&metadata=true"
                  value:
                    - objectId: "counter:JbZYiHnw0ORAyzzLSQahVik31iBDL_ehJNpTEF3qwg8@1745828651669"
                      counter:
                        data:
                          number: 10
                      siteTimeserials:
                        e02: "01745828651671-000@e025VxXLABoR0C19591332:000"
                      tombstone: false
                    - objectId: "counter:iVji62_MW_j4dShuJbr2fmsP2D8MyCs6tFqON9-xAkc@1745828645269"
                      counter:
                        data:
                          number: 5
                      siteTimeserials:
                        e02: "01745828651671-000@e025VxXLABoR0C19591332:000"
                      tombstone: false
                    - objectId: "map:ja7cjMUib2LmJKTRdoGAG9pbBYCnkMObAVpmojCOmek@1745828596519"
                      map:
                        mapSemantics: "LWW"
                        entries:
                          down:
                            timeserial: "01745828651671-000@e025VxXLABoR0C19591332:000"
                            tombstone: false
                            data:
                              objectId: "counter:JbZYiHnw0ORAyzzLSQahVik31iBDL_ehJNpTEF3qwg8@1745828651669"
                          up:
                            timeserial: "01745828651671-000@e025VxXLABoR0C19591332:000"
                            tombstone: false
                            data:
                              objectId: "counter:iVji62_MW_j4dShuJbr2fmsP2D8MyCs6tFqON9-xAkc@1745828645269"
                      siteTimeserials:
                        e02: "01745828651671-000@e025VxXLABoR0C19591332:000"
                      tombstone: false
                    - objectId: "root"
                      map:
                        mapSemantics: "LWW"
                        entries:
                          votes:
                            timeserial: "01745828651671-000@e025VxXLABoR0C19591332:000"
                            tombstone: false
                            data:
                              objectId: "map:ja7cjMUib2LmJKTRdoGAG9pbBYCnkMObAVpmojCOmek@1745828596519"
                      siteTimeserials:
                        e02: "01745828651671-000@e025VxXLABoR0C19591332:000"
                      tombstone: false

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/AuthError'
                  - $ref: '#/components/schemas/ClientRestrictionNotSatisfied'
                  - $ref: '#/components/schemas/InvalidTokenKey'
                  - $ref: '#/components/schemas/MalformedCredential'
                  - $ref: '#/components/schemas/OperationObjectSubscribeUnauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ApplicationDisabled'
                  - $ref: '#/components/schemas/StateOperationsOnlyAppliedOnRegularChannels'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppNotFound'
        '429':
          description: Too Many Requests
          $ref: '#/components/schemas/RateLimitExceeded'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /channels/{channelName}/objects/{objectId}:
    get:
      summary: Get objects
      description: |
        Fetch an object by ID, optionally including its children.<br><br>

        For more information, see the usage documentation for [get objects](/docs/liveobjects/rest-api-usage#fetching-objects-get).
      parameters:
        - name: channelName
          in: path
          required: true
          description: The channel name.
          schema:
            type: string
            example: "my-channel"
        - name: objectId
          in: path
          required: true
          description: The [object ID](/docs/liveobjects/concepts/objects#object-ids) of the object to fetch.
          schema:
            $ref: '#/components/schemas/ObjectIdString'
        - name: children
          in: query
          required: false
          description: |
            Fetch the objects on the channel in a tree structure starting from the specified [object ID](/docs/liveobjects/concepts/objects#object-ids).
            Nested child objects are resolved and their values are included in the response. See [Get an object and its children](/docs/liveobjects/rest-api-usage#fetching-objects-get-children).
          schema:
            type: boolean
            default: false
        - name: metadata
          in: query
          required: false
          description: If `true`, includes additional object [metadata](/docs/liveobjects/concepts/objects#metadata) in the response. See [including metadata](/docs/liveobjects/rest-api-usage#fetching-objects-get-metadata).
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Tree of objects on the channel.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveObject'
              examples:
                singleObject:
                  summary: "Get a single object: ?children=false&metadata=false"
                  value:
                    objectId: "root"
                    map:
                      entries:
                        votes:
                          data:
                            objectId: "map:ja7cjMUib2LmJKTRdoGAG9pbBYCnkMObAVpmojCOmek@1745828596519"

                children:
                  summary: "Get an object and its children: ?children=true"
                  value:
                    objectId: "root"
                    map:
                      entries:
                        votes:
                          data:
                            objectId: "map:ja7cjMUib2LmJKTRdoGAG9pbBYCnkMObAVpmojCOmek@1745828596519"
                            map:
                              entries:
                                down:
                                  data:
                                    objectId: "counter:JbZYiHnw0ORAyzzLSQahVik31iBDL_ehJNpTEF3qwg8@1745828651669"
                                    counter:
                                      data:
                                        number: 10
                                up:
                                  data:
                                    objectId: "counter:iVji62_MW_j4dShuJbr2fmsP2D8MyCs6tFqON9-xAkc@1745828645269"
                                    counter:
                                      data:
                                        number: 5
                childrenWithMetadata:
                  summary: "Get an object and its children with metadata: ?children=true&metadata=true"
                  value:
                    objectId: "root"
                    map:
                      mapSemantics: "LWW"
                      entries:
                        votes:
                          timeserial: "01745828596522-000@e025VxXLABoR0C19591332:001"
                          tombstone: false
                          data:
                            objectId: "map:ja7cjMUib2LmJKTRdoGAG9pbBYCnkMObAVpmojCOmek@1745828596519"
                            map:
                              mapSemantics: "LWW"
                              entries:
                                down:
                                  timeserial: "01745828596522-000@e025VxXLABoR0C19591332:001"
                                  tombstone: false
                                  data:
                                    objectId: "counter:JbZYiHnw0ORAyzzLSQahVik31iBDL_ehJNpTEF3qwg8@1745828651669"
                                    counter:
                                      data:
                                        number: 10
                                    siteTimeserials:
                                      e02: "01745828651671-000@e025VxXLABoR0C19591332:000"
                                    tombstone: false
                                up:
                                  timeserial: "01745828596522-000@e025VxXLABoR0C19591332:001"
                                  tombstone: false
                                  data:
                                    objectId: "counter:iVji62_MW_j4dShuJbr2fmsP2D8MyCs6tFqON9-xAkc@1745828645269"
                                    counter:
                                      data:
                                        number: 5
                                    siteTimeserials:
                                      e02: "01745828651671-000@e025VxXLABoR0C19591332:000"
                                    tombstone: false
                            siteTimeserials:
                              e02: "01745828651671-000@e025VxXLABoR0C19591332:000"
                            tombstone: false
                    siteTimeserials:
                      e02: "01745828596522-000@e025VxXLABoR0C19591332:001"
                    tombstone: false
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/AuthError'
                  - $ref: '#/components/schemas/ClientRestrictionNotSatisfied'
                  - $ref: '#/components/schemas/InvalidTokenKey'
                  - $ref: '#/components/schemas/MalformedCredential'
                  - $ref: '#/components/schemas/OperationObjectSubscribeUnauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ApplicationDisabled'
                  - $ref: '#/components/schemas/StateOperationsOnlyAppliedOnRegularChannels'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/AppNotFound'
                  - $ref: '#/components/schemas/ObjectNotFound'
        '429':
          description: Too many requests
          $ref: '#/components/schemas/RateLimitExceeded'
  /channels/{channelName}/objects/{objectId}/compact:
    get:
      summary: Get a compact view of objects
      description: |
        Fetch the objects on the channel in a tree structure in a concise format.<br><br>
        
        For more information, see the usage documentation for [get a compact view of objects](/docs/liveobjects/rest-api-usage#fetching-objects-compact).
      parameters:
        - name: channelName
          in: path
          required: true
          description: The channel name.
          schema:
            type: string
            example: "my-channel"
        - name: objectId
          in: path
          required: true
          description: The [object ID](/docs/liveobjects/concepts/objects#object-ids) of the object to fetch.
          schema:
            $ref: '#/components/schemas/ObjectIdString'
      responses:
        '200':
          description: Compact tree of objects on the channel.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveObjectCompact'
              examples:
                compact:
                  summary: "Get a compact view of the object tree"
                  value:
                    votes:
                      up: 5
                      down: 10
                cyclic:
                  summary: "Get a compact view of the object tree with cycles"
                  value:
                    votes:
                      up: 5
                      down: 10
                      myRoot:
                        objectId: "root"
        '400':
          description: Bad request
          $ref: '#/components/schemas/TombstoneObjectError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/AuthError'
                  - $ref: '#/components/schemas/ClientRestrictionNotSatisfied'
                  - $ref: '#/components/schemas/InvalidTokenKey'
                  - $ref: '#/components/schemas/MalformedCredential'
                  - $ref: '#/components/schemas/OperationObjectSubscribeUnauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ApplicationDisabled'
                  - $ref: '#/components/schemas/StateOperationsOnlyAppliedOnRegularChannels'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/AppNotFound'
                  - $ref: '#/components/schemas/ObjectNotFound'
        '429':
          description: Too many requests
          $ref: '#/components/schemas/RateLimitExceeded'

components:
  schemas:

    # Fragments
    Encoding:
      type: object
      properties:
        encoding:
            type: string
            example: "json"
            description: A client-supplied encoding which clients can use to interpret raw string or bytes values.

    ObjectIdString:
      title: ObjectId
      type: string
      description: An [object ID](/docs/liveobjects/concepts/objects#object-ids).
      example: "counter:JbZYiHnw0ORAyzzLSQahVik31iBDL_ehJNpTEF3qwg8@1745828651669"

    NumberValue:
      title: Number
      type: object
      required: [number]
      properties:
        number:
          type: number
          description: A [primitive](/docs/liveobjects/concepts/objects#primitive-types) numeric value.
          example: 42

    BooleanValue:
      title: Boolean
      type: object
      required: [boolean]
      properties:
        boolean:
          type: boolean
          description: A [primitive](/docs/liveobjects/concepts/objects#primitive-types) boolean value.
          example: true

    StringValue:
      title: String
      type: object
      allOf:
        - $ref: '#/components/schemas/Encoding'
        - type: object
          required: [string]
          properties:
            string:
              type: string
              description: A [primitive](/docs/liveobjects/concepts/objects#primitive-types) string value.
              example: "LiveObjects is awesome"        

    BytesValue:
      title: Bytes
      type: object
      allOf:
        - $ref: '#/components/schemas/Encoding'
        - type: object
          required: [bytes]
          properties:
            bytes:
              type: string
              format: byte
              description: A [primitive](/docs/liveobjects/concepts/objects#primitive-types) base64-encoded bytes value.
              example: "TGl2ZU9iamVjdHMgaXMgYXdlc29tZQo="

    ObjectIdValue:
      title: ObjectId
      type: object
      required: [objectId]
      properties:
        objectId:
          $ref: '#/components/schemas/ObjectIdString'

    PrimitiveValue:
      oneOf:
        - $ref: '#/components/schemas/ObjectIdValue'
        - $ref: '#/components/schemas/NumberValue'
        - $ref: '#/components/schemas/BooleanValue'
        - $ref: '#/components/schemas/StringValue'
        - $ref: '#/components/schemas/BytesValue'

    SiteTimeserials:
      type: object
      description: A map of site ID to [timeserial](/docs/liveobjects/concepts/objects#timeserials).
      additionalProperties:
        type: string
        description: The [timeserial](/docs/liveobjects/concepts/objects#timeserials) of the latest operation applied in this site.
        example: "01745828651671-000@e025VxXLABoR0C19591332:000"

    LiveMapEntryMetadata:
      type: object
      properties:
        timeserial:
          type: string
          description: A [timeserial](/docs/liveobjects/concepts/objects#timeserials) value.
          example: "01745828651671-000@e025VxXLABoR0C19591332:000"
        tombstone:
          type: boolean
          description: Indicates whether this entry was deleted and is a [tombstone](/docs/liveobjects/concepts/objects#tombstones).
          example: false

    LiveMapMetadata:
      type: object
      properties:
        mapSemantics:
          type: string
          description: The semantics used for conflict resolution on the [LiveMap](/docs/liveobjects/map).
          example: "LWW"

    LiveObjectMetadata:
      type: object
      properties:
        siteTimeserials:
          $ref: '#/components/schemas/SiteTimeserials'
        tombstone:
          type: boolean
          description: Indicates whether this object was deleted as is a [tombstone](/docs/liveobjects/concepts/objects#tombstones).
          example: false

    LiveObjectBase:
      type: object
      required: [objectId]
      properties:
        objectId:
          $ref: '#/components/schemas/ObjectIdString'

    # Object types.
    # Shallow definitions do not resolve the values of child objects.
    # Some duplication in these definitions as unfortunately OpenAPI
    # does not support merging definitions, only replacements.
    LiveCounter:
      title: LiveCounter
      type: object
      required: [data]
      properties:
        data:
          description: |
            The value of the [LiveCounter](/docs/liveobjects/counter) object.
          allOf:
            - $ref: '#/components/schemas/NumberValue'

    LiveCounterObject:
      title: LiveCounter
      description: A [LiveCounter](/docs/liveobjects/counter) object.
      allOf:
        - $ref: '#/components/schemas/LiveObjectBase'
        - type: object
          required: [counter]
          properties:
            counter:
              description: A [LiveCounter](/docs/liveobjects/counter) object.
              allOf:
                - $ref: '#/components/schemas/LiveCounter'
        - $ref: '#/components/schemas/LiveObjectMetadata'

    LiveMapEntryShallow:
      title: LiveMapEntry
      allOf:
        - type: object
          description: |
            The value of an entry in a [LiveMap](/docs/liveobjects/map).
          required: [data]
          properties:
            data:
              description: |
                The value of the entry, which is either a [primitive value](/docs/liveobjects/concepts/objects#primitive-types) another [LiveObject](/docs/liveobjects/concepts/objects).
                If `?children=false`, child objects will be included by reference to their [ObjectId](/docs/liveobjects/concepts/objects#object-ids). Otherwise, the child object will be resolved and its value will be included in the response, unless resolving the child object would exceed the specified `limit`, in which case it will be included by reference.
              allOf:
                - $ref: '#/components/schemas/PrimitiveValue'
        - $ref: '#/components/schemas/LiveMapEntryMetadata'

    LiveMapEntry:
      title: LiveMapEntry
      allOf:
        - type: object
          description: |
            The value of an entry in a [LiveMap](/docs/liveobjects/map).
          required: [data]
          properties:
            data:
              description: |
                The value of the entry, which is either a [primitive value](/docs/liveobjects/concepts/objects#primitive-types) another [LiveObject](/docs/liveobjects/concepts/objects).
                If `?children=false`, child objects will be included by reference to their [ObjectId](/docs/liveobjects/concepts/objects#object-ids). Otherwise, the child object will be resolved and its value will be included in the response, unless resolving the child object would exceed the specified `limit`, in which case it will be included by reference.
              oneOf:
                - $ref: '#/components/schemas/PrimitiveValue'
                - $ref: '#/components/schemas/LiveMapObject'
                - $ref: '#/components/schemas/LiveCounterObject'
        - $ref: '#/components/schemas/LiveMapEntryMetadata'

    LiveMapShallow:
      title: LiveMap
      allOf:
        - type: object
          description: A [LiveMap](/docs/liveobjects/map) object.
          required: [entries]
          properties:
            entries:
              type: object
              description: |
                An object describing the entries in the [LiveMap](/docs/liveobjects/map) object.
                The properties in the `entries` object describe the map *keys*.
              additionalProperties:
                $ref: '#/components/schemas/LiveMapEntryShallow'
        - $ref: '#/components/schemas/LiveMapMetadata'

    LiveMap:
      title: LiveMap
      allOf:
        - type: object
          description: A [LiveMap](/docs/liveobjects/map) object.
          required: [entries]
          properties:
            entries:
              type: object
              description: |
                An object describing the entries in the [LiveMap](/docs/liveobjects/map) object.
                The properties in the `entries` object describe the map *keys*.
              additionalProperties:
                $ref: '#/components/schemas/LiveMapEntry'
        - $ref: '#/components/schemas/LiveMapMetadata'

    # Wrappers
    LiveMapObjectShallow:
      title: LiveMap
      description: A [LiveMap](/docs/liveobjects/map) object.
      allOf:
        - $ref: '#/components/schemas/LiveObjectBase'
        - type: object
          required: [map]
          properties:
            map:
              $ref: '#/components/schemas/LiveMapShallow'
        - $ref: '#/components/schemas/LiveObjectMetadata'

    LiveMapObject:
      title: LiveMap
      description: A [LiveMap](/docs/liveobjects/map) object.
      allOf:
        - $ref: '#/components/schemas/LiveObjectBase'
        - type: object
          required: [map]
          properties:
            map:
              $ref: '#/components/schemas/LiveMap'
        - $ref: '#/components/schemas/LiveObjectMetadata'

    LiveObjectShallow:
      title: LiveObject
      description: A [LiveObject](/docs/liveobjects/concepts/objects) instance, which is either a [LiveMap](/docs/liveobjects/map) or a [LiveCounter](/docs/liveobjects/counter).
      oneOf:
        - $ref: '#/components/schemas/LiveMapObjectShallow'
        - $ref: '#/components/schemas/LiveCounterObject'

    LiveObject:
      title: LiveObject
      description: A [LiveObject](/docs/liveobjects/concepts/objects) instance, which is either a [LiveMap](/docs/liveobjects/map) or a [LiveCounter](/docs/liveobjects/counter).
      oneOf:
        - $ref: '#/components/schemas/LiveMapObject'
        - $ref: '#/components/schemas/LiveCounterObject'

    LiveCounterCompact:
      title: LiveCounter
      description: The value of a [LiveCounter](/docs/liveobjects/counter) object.
      type: number

    LiveMapCompact:
      title: LiveMap
      type: object
      description: A compact view of a [LiveMap](/docs/liveobjects/map) object.
      additionalProperties:
        description: A compact view of an entry in a [LiveMap](/docs/liveobjects/map).
        oneOf:
          - $ref: '#/components/schemas/LiveCounterCompact'
          - $ref: '#/components/schemas/LiveMapCompact'
          - $ref: '#/components/schemas/ObjectIdValue'

    LiveObjectCompact:
      title: LiveObject
      description: A compact view of a [LiveObject](/docs/liveobjects/concepts/objects) instance, which is either a [LiveMap](/docs/liveobjects/map) or a [LiveCounter](/docs/liveobjects/counter).
      oneOf:
        - $ref: '#/components/schemas/LiveCounterCompact'
        - $ref: '#/components/schemas/LiveMapCompact'
    
    # Operations
    OperationBase:
      type: object
      properties:
        id:
          type: string
          description: An idempotency key used for [idempotent operations](/docs/liveobjects/rest-api-usage#idempotent-operations).
          example: "my-idempotency-key"
        objectId:
          $ref: '#/components/schemas/ObjectIdString'
        path:
          type: string
          description: The [path](/docs/liveobjects/rest-api-usage#updating-objects-by-path) from the root to the object.
          example: "votes.up"

    OperationMapSet:
      allOf:
        - $ref: '#/components/schemas/OperationBase'
        - type: object
          required: [operation, data]
          properties:
            operation:
              type: string
              enum: [MAP_SET]
            data:
              type: object
              description: The key and value to set in the [LiveMap](/docs/liveobjects/map) object.
              properties:
                key:
                  type: string
                  description: The name of the key.
                value:
                  description: The value to set at the specified `key`, which is either a [primitive value](/docs/liveobjects/concepts/objects#primitive-types) or the ID of another [LiveObject](/docs/liveobjects/concepts/objects).
                  allOf:
                    - $ref: '#/components/schemas/PrimitiveValue'

    OperationMapRemove:
      allOf:
        - $ref: '#/components/schemas/OperationBase'
        - type: object
          required: [operation, data]
          properties:
            operation:
              type: string
              enum: [MAP_REMOVE]
            data:
              type: object
              description: The key to remove from the [LiveMap](/docs/liveobjects/map) object.
              properties:
                key:
                  type: string
                  description: The name of the key.

    OperationMapCreate:
      allOf:
      - $ref: '#/components/schemas/OperationBase'
      - type: object
        required: [operation, data]
        properties:
          operation:
            type: string
            enum: [MAP_CREATE]
          data:
            type: object
            description: The initial value for the [LiveMap](/docs/liveobjects/map) object.
            additionalProperties:
              description: The initial value for this key, which is either a [primitive value](/docs/liveobjects/concepts/objects#primitive-types) or the ID of another [LiveObject](/docs/liveobjects/concepts/objects).
              allOf:
                - $ref: '#/components/schemas/PrimitiveValue'

    OperationCounterInc:
      allOf:
        - $ref: '#/components/schemas/OperationBase'
        - type: object
          required: [operation, data]
          properties:
            operation:
              type: string
              enum: [COUNTER_INC]
            data:
              description: The value to increment the [LiveCounter](/docs/liveobjects/counter) object by.
              allOf:
                - $ref: '#/components/schemas/NumberValue'

    OperationCounterCreate:
      allOf:
        - $ref: '#/components/schemas/OperationBase'
        - type: object
          required: [operation, data]
          properties:
            operation:
              type: string
              enum: [COUNTER_CREATE]
            data:
              description: The initial value for the [LiveCounter](/docs/liveobjects/counter) object.
              allOf:
                - $ref: '#/components/schemas/NumberValue'

    Operation:
      type: object
      discriminator:
        propertyName: operation
        mapping:
          MAP_SET: '#/components/schemas/OperationMapSet'
          MAP_REMOVE: '#/components/schemas/OperationMapRemove'
          MAP_CREATE: '#/components/schemas/OperationMapCreate'
          COUNTER_CREATE: '#/components/schemas/OperationCounterCreate'
          COUNTER_INC: '#/components/schemas/OperationCounterInc'
      oneOf:
        - $ref: '#/components/schemas/OperationMapSet'
        - $ref: '#/components/schemas/OperationMapRemove'
        - $ref: '#/components/schemas/OperationMapCreate'
        - $ref: '#/components/schemas/OperationCounterCreate'
        - $ref: '#/components/schemas/OperationCounterInc'

    OperationRequest:
      oneOf:
        - $ref: '#/components/schemas/Operation'
        - type: array
          title: BatchOperation
          items:
            $ref: '#/components/schemas/Operation'

    PublishResponse:
      type: object
      required:
        - messageId
        - channel
        - objectIds
      properties:
        messageId:
          type: string
          description: The message ID of the published operation.
          example: "TJPWHhMTrF:0"
        channel:
          type: string
          description: The channel name.
          example: "my-channel"
        objectIds:
          type: array
          items:
            $ref: '#/components/schemas/ObjectIdString'
          description: The [object IDs](/docs/liveobjects/concepts/objects#object-ids) of the objects that were created or updated by the operation.
          example:
            - "counter:JbZYiHnw0ORAyzzLSQahVik31iBDL_ehJNpTEF3qwg8@1745828651669"
            - "counter:iVji62_MW_j4dShuJbr2fmsP2D8MyCs6tFqON9-xAkc@1745828645269"

    # Errors
    ApplicationDisabled:
      title: Application disabled
      type: object
      properties:
        message:
          type: string
          description: The error message.
          example: "Application disabled."
        code:
          type: integer
          description: The HTTP status code returned.
          example: 403
        statusCode:
          type: integer
          description: The Ably error code.
          nullable: true
        href:
          type: string
          description: The URL to documentation about the error code.
          nullable: true
        details:
          type: object
          nullable: true
          description: Any additional details about the error message.
      required:
      - message
      - code
    AuthError:
      title: Auth error
      type: object
      properties:
        code:
          type: integer
          example: 401
        message:
          type: string
          example: "Token expired, token revoked, or client restriction not satisfied."
        statusCode:
          type: integer
          description: The Ably error code.
          nullable: true
        href:
          type: string
          description: The URL to documentation about the error code.
          nullable: true
        details:
          type: object
          nullable: true
          description: Any additional details about the error message.
    AppNotFound:
      title: App not found
      type: object
      properties:
        message:
          type: string
          description: The error message.
          example: "Application not found."
        code:
          type: integer
          description: The HTTP status code returned.
          example: 404
        statusCode:
          type: integer
          description: The Ably error code.
          nullable: true
        href:
          type: string
          description: The URL to documentation about the error code.
          nullable: true
        details:
          type: object
          nullable: true
          description: Any additional details about the error message.
      required:
      - message
      - code
    ClientRestrictionNotSatisfied:
      description: Client restriction not satisfied.
      type: object
      properties:
        message:
          type: string
          example: "Client restriction not satisfied."
        code:
          type: integer
          example: 401
        statusCode:
          type: integer
          description: The Ably error code.
          example: 40160
        href:
          type: string
          description: The URL to documentation about the error code.
          example: https://help.ably.io/error/40160
        details:
          type: object
          nullable: true
          description: Any additional details about the error message.
    ClientSpecifiedMessageIdInvalid:
      type: object
      properties:
        message:
          type: string
          example: "Client-specified message ID cannot be empty or does not match the required format for batches."
        code:
          type: integer
          example: 400
        statusCode:
          type: integer
          description: The Ably error code.
          example: 40031
        href:
          type: string
          description: The URL to documentation about the error code.
          example: https://help.ably.io/error/40031
        details:
          type: object
          nullable: true
          description: Any additional details about the error message.
      required:
      - message
      - code
      - statusCode
      - href
    CreateOrUpdateObjectsBadRequest:
      oneOf:
      - $ref: '#/components/schemas/FailureDecodingRequestBody'
      - $ref: '#/components/schemas/InvalidObjectId'
      - $ref: '#/components/schemas/InvalidObjectMessage'
      - $ref: '#/components/schemas/NoOperationsInRequest'
      - $ref: '#/components/schemas/ObjectIdOrPathRequired'
      - $ref: '#/components/schemas/UnknownOperationType'
      - $ref: '#/components/schemas/OperationPathNotProcessable'
      - $ref: '#/components/schemas/ClientSpecifiedMessageIdInvalid'
      - $ref: '#/components/schemas/FailedToUnmarshalOperationData'
      - $ref: '#/components/schemas/NoObjectsMatchedPath'
      - $ref: '#/components/schemas/UnableToUnquoteJsonData'
      - $ref: '#/components/schemas/ObjectsLimitExceeded'
      discriminator:
        propertyName: statusCode
        mapping:
          'Failure decoding request body': '#/components/schemas/FailureDecodingRequestBody'
          'Failed to unmarshal operation data': '#/components/schemas/FailedToUnmarshalOperationData'
          'No operations in request': '#/components/schemas/NoOperationsInRequest'
          'Operation Id or path required': '#/components/schemas/ObjectIdOrPathRequired'
          'No objects matched path': '#/components/schemas/NoObjectsMatchedPath'
          'Unknown operation type': '#/components/schemas/UnknownOperationType'
          'Unable to unquote json data': '#/components/schemas/UnableToUnquoteJsonData'
          'Invalid object message': '#/components/schemas/InvalidObjectMessage'
          'Invalid object id': '#/components/schemas/InvalidObjectId'
          'Client specified message Id invalid': '#/components/schemas/ClientSpecifiedMessageIdInvalid'
          'Objects limit exceeded': '#/components/schemas/ObjectsLimitExceeded'
          'Operation path not processable': '#/components/schemas/OperationPathNotProcessable'
    FailureDecodingRequestBody:
      type: object
      additionalProperties: false
      properties:
        message:
          type: string
          description: The error message.
          example: "Failure decoding request body."
        code:
          type: integer
          description: The HTTP status code returned.
          example: 400
        statusCode:
          type: integer
          description: The Ably error code.
          example: 92001
        href:
          type: string
          description: The URL to documentation about the error code.
          example: "https://help.ably.io/error/92001"
        details:
          type: object
          nullable: true
          description: Any additional details about the error message.
      required:
      - message
      - code
      - statusCode
      - href
    FailedToUnmarshalOperationData:
      type: object
      additionalProperties: false
      properties:
        message:
          type: string
          description: The error message.
          example: "Failed to unmarshal operation data."
        code:
          type: integer
          description: The HTTP status code returned.
          example: 400
        statusCode:
          type: integer
          description: The Ably error code.
          example: 92002
        href:
          type: string
          description: The URL to documentation about the error code.
          example: "https://help.ably.io/error/92002"
        details:
          type: object
          nullable: true
          description: Any additional details about the error message.
      required:
      - message
      - code
      - statusCode
      - href
    InvalidObjectMessage:
      type: object
      properties:
        message:
          type: string
          example: "Invalid object message."
        code:
          type: integer
          example: 400
        statusCode:
          type: integer
          description: The Ably error code.
          example: 92000
        href:
          type: string
          description: The URL to documentation about the error code.
          example: https://help.ably.io/error/92000
        details:
          type: object
          nullable: true
          description: Any additional details about the error message.
      required:
      - message
      - code
      - statusCode
      - href
    InvalidObjectId:
      type: object
      properties:
        message:
          type: string
          example: "Invalid object ID."
        code:
          type: integer
          example: 400
        statusCode:
          type: integer
          description: The Ably error code.
          example: 92000
        href:
          type: string
          description: The URL to documentation about the error code.
          example: https://help.ably.io/error/92000
        details:
          type: object
          nullable: true
          description: Any additional details about the error message.
      required:
      - message
      - code
      - statusCode
      - href
    InvalidTokenKey:
      title: Token expired or revoked, or key revoked, expired, or removed.
      type: object
      properties:
        code:
          type: integer
          example: 401
        message:
          type: string
          example: "Token expired"
    MalformedCredential:
      title: Malformed credential or invalid request.
      type: object
      properties:
        code:
          type: integer
          example: 401
        message:
          type: string
          example: "Malformed credential or unknown operation type."
    NoObjectsMatchedPath:
      type: object
      additionalProperties: false
      properties:
        message:
          type: string
          description: The error message.
          example: "(92005) No objects matched path."
        code:
          type: integer
          description: The HTTP status code returned.
          example: 400
        statusCode:
          type: integer
          description: The Ably error code.
          example: 92005
        href:
          type: string
          description: The URL to documentation about the error code.
          example: "https://help.ably.io/error/92005"
        details:
          type: object
          nullable: true
          description: Any additional details about the error message.
      required:
      - message
      - code
      - statusCode
      - href
    NoOperationsInRequest:
      type: object
      additionalProperties: false
      properties:
        message:
          type: string
          description: The error message.
          example: "No operations in request."
        code:
          type: integer
          description: The HTTP status code returned.
          example: 400
        statusCode:
          type: integer
          description: The Ably error code.
          example: 92003
        href:
          type: string
          description: The URL to documentation about the error code.
          example: "https://help.ably.io/error/92003"
        details:
          type: object
          nullable: true
          description: Any additional details about the error message.
      required:
      - message
      - code
      - statusCode
      - href
    ObjectIdOrPathRequired:
      type: object
      additionalProperties: false
      properties:
        message:
          type: string
          description: The error message.
          example: "(92006) Object ID or path required."
        code:
          type: integer
          description: The HTTP status code returned.
          example: 400
        statusCode:
          type: integer
          description: The Ably error code.
          example: 92006
        href:
          type: string
          description: The URL to documentation about the error code.
          example: "https://help.ably.io/error/92006"
        details:
          type: object
          nullable: true
          description: Any additional details about the error message.
      required:
      - message
      - code
      - statusCode
      - href
    ObjectNotFound:
      title: Object not found
      type: object
      properties:
        message:
          type: string
          description: The error message.
          example: "Object not found."
        code:
          type: integer
          description: The HTTP status code returned.
          example: 404
        statusCode:
          type: integer
          description: The Ably error code.
          example: 92004
        href:
          type: string
          description: The URL to documentation about the error code.
          example: "https://help.ably.io/error/92004"
        details:
          type: object
          nullable: true
          description: Any additional details about the error message.
      required:
      - message
      - code
      - statusCode
      - href
    ObjectsLimitExceeded:
      type: object
      properties:
        message:
          type: string
          example: "Objects limit max number exceeded."
        code:
          type: integer
          example: 400
        statusCode:
          type: integer
          description: The Ably error code.
          example: 32001
        href:
          type: string
          description: The URL to documentation about the error code.
          example: https://help.ably.io/error/32001
        details:
          type: object
          nullable: true
          description: Any additional details about the error message.
      required:
      - message
      - code
      - statusCode
      - href
    OperationPathNotProcessable:
      type: object
      properties:
        message:
          type: string
          example: "Operation path not processable."
        code:
          type: integer
          example: 400
        statusCode:
          type: integer
          description: The Ably error code.
          example: 92007
        href:
          type: string
          description: The URL to documentation about the error code.
          example: https://help.ably.io/error/92007
        details:
          type: object
          nullable: true
          description: Any additional details about the error message.
      required:
      - message
      - code
      - statusCode
      - href
    OperationObjectSubscribeUnauthorized:
      title: Operation object-subscribe unauthorized on channel.
      type: object
      properties:
        message:
          type: string
          example: "Operation object-subscribe unauthorized on channel."
        code:
          type: integer
          example: 401
        statusCode:
          type: integer
          description: The Ably error code.
          example: 40160
        href:
          type: string
          description: The URL to documentation about the error code.
          example: https://help.ably.io/error/40160
        details:
          type: object
          nullable: true
          description: Any additional details about the error message.
      required:
      - message
      - code
      - statusCode
      - href
    RateLimitExceeded:
      description: Rate limit exceeded.
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 429
              message:
                type: string
                example: "Rate limit exceeded."
    StateOperationsOnlyAppliedOnRegularChannels:
      title: State operations only applied on regular channels
      type: object
      properties:
        message:
          type: string
          description: The error message.
          example: "State operations only applied on regular channels (e.g., not [meta], [chat], etc channels)."
        code:
          type: integer
          description: The HTTP status code returned.
          example: 403
        statusCode:
          type: integer
          description: The Ably error code.
          nullable: true
        href:
          type: string
          description: The URL to documentation about the error code.
          nullable: true
        details:
          type: object
          nullable: true
          description: Any additional details about the error message.
      required:
      - message
      - code
    TombstoneObjectError:
      type: object
      properties:
        message:
          type: string
          description: The error message.
          example: "Unable to fetch objects tree for tombstone object."
        code:
          type: integer
          description: The HTTP status code returned.
          example: 400
        statusCode:
          type: integer
          description: The Ably error code.
          example: 92003
        href:
          type: string
          description: The URL to documentation about the error code.
          example: "https://help.ably.io/error/92003"
        details:
          type: object
          nullable: true
          description: Any additional details about the error message.
      required:
      - message
      - code
      - statusCode
      - href
    UnknownOperationType:
      type: object
      additionalProperties: false
      properties:
        message:
          type: string
          description: The error message.
          example: "Unknown operation type."
        code:
          type: integer
          description: The HTTP status code returned.
          example: 400
        statusCode:
          type: integer
          description: The Ably error code.
          example: 92007
        href:
          type: string
          description: The URL to documentation about the error code.
          example: "https://help.ably.io/error/92007"
        details:
          type: object
          nullable: true
          description: Any additional details about the error message.
      required:
      - message
      - code
      - statusCode
      - href
    UnableToUnquoteJsonData:
      type: object
      properties:
        message:
          type: string
          example: "Unable to unquote JSON encoded data field."
        code:
          type: integer
          example: 400
        statusCode:
          type: integer
          description: The Ably error code.
          nullable: true
        href:
          type: string
          description: The URL to documentation about the error code.
          nullable: true
        details:
          type: object
          nullable: true
          description: Any additional details about the error message.
      required:
      - message
      - code
    error:
      type: object
      additionalProperties: false
      properties:
        message:
          type: string
          description: The error message.
        code:
          type: integer
          description: The HTTP status code returned.
        statusCode:
          type: integer
          description: The Ably error code.
        href:
          type: string
          description: The URL to documentation about the error code.
        details:
          type: object
          nullable: true
          description: Any additional details about the error message.
      required:
      - message
      - code
      - statusCode
      - href
