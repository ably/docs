---
title: Dev console
meta_description: "Gain realtime insights into application-wide events, such as connection status changes, channel activity, and event logs.”
meta_keywords: “Ably dev console, realtime monitoring, connection status changes, channel activity, event logs"
---

The dev console tab provides realtime insights into application-wide events, such as connection status changes and channel activity. These features enable you to:

* Observe changes in connection status across the application.
* View activity on specific channels, including message traffic and channel events.
* Examine event logs to troubleshoot your application.

h2. Application-wide events interface

The application-wide events interface allows you to monitor your application's health and activity in realtime.

The following explains the realtime monitoring tools in the application-wide events interface:

|_. Field |_. Description |
| *API key* | The API key to access and view events within the app. |
| *Average application-wide events per second (p/s)* | This metric shows the average number of events occurring per second across your application. For example, if the current rate is 0, no active events are being processed. |
| *Event log table* | The event log table displays a record of events related to the current client's connection status. This table can be used to debug potential issues in your application. |

h2. Channels

The following is a step-by-step instructions for connecting to a channel, publishing messages.

h3. Connect to a channel

The following explains how to connect to a channel:

|_. Step |_. Action |
| *Enter a channel name* | In the channel name field, choose a name (e.g get-started). |
| *Attach to channel* | Click the *attach to channel* button. This connects you to the *get-started* channel, enabling you to start publishing or subscribing to messages. |
| *Monitor channel status* | The interface will display the channel status as *pending* and then *attached* once connected, confirming that the channel is ready for interaction.|

h3. Publish a message

The following explains how to publish a message:

|_. Step |_. Action |
| *Message data* | In the *message data* field, type a message (e.g. example). |
| *Publish message* | Click the *publish message* button to send the message to the *get-started* channel. |
| *View the message* | If you have a subscriber , it will receive and display the message in the console. |

The following explains how to interact with presence:

|_. Step |_. Action |
| *Client ID* | Enter a unique client ID to simulate joining the presence of the channel. |
| *Enter presence* | Click *enter presence* to indicate that this client is now in the channel. |
| *Monitor presence* | The interface will list all clients in the channel under *presence members*. |

h3. Control the channel

The following explains how to control the channel in the dev console:

|_. Step |_. Action |
| *Detach* | Click *detach* to disconnect from the channel. |
| *Pause* | Use *pause* to temporarily stop receiving messages. |
| *Clear* | Click *clear* to clear the channel data or logs from the interface. |
