openapi: 3.0.0
info:
  title: Ably Chat REST API
  version: 2.0.0
  description: |
    # Chat API

    This API enables you to integrate certain chat functionality into your application without requiring a Chat SDK. It provides endpoints for sending and retrieving messages, updating and deleting messages, and fetching occupancy information for chat rooms.

    ## The Ably PubSub SDKs

    Whilst you can interact with these endpoints directly, it is recommended where possible to use the Ably PubSub SDKs - which provide a convenient `request` method for interacting with Ably APIs.
    By using this method, you can take advantage of built-in support for Ablyâ€™s authentication, pagination, and link headers, as well as automatic retry and fallback mechanics. This approach helps ensure consistent error handling, reduces setup overhead, and simplifies performing common operations against the Chat REST API. Using this method, instead of implementing your own request handling, will lead to more robust and maintainable client-side integrations.

servers:
  - url: https://main.realtime.ably.net/
    description: Production server for Ably REST API
components:
  schemas:
    ErrorInfo:
      type: object
      properties:
        message:
          type: string
          description: Description of the error.
          example: "Invalid request payload. 'text' field is required."
        code:
          type: integer
          description: A unique error code generated by the server.
          example: 40001
        statusCode:
          type: integer
          description: The HTTP status code associated with the error.
          example: 400
        href:
          type: string
          description: A link to the relevant documentation for this error.
          example: "https://help.ably.io/error/40001"
  parameters:
    ClientIdParam:
      name: clientId
      in: query
      required: false
      description: Optional client ID. If provided, this must match the client ID used to authenticate the request.
      schema:
        type: string
        example: "some-client-id"
    AuthorizationHeader:
      name: Authorization
      in: header
      required: true
      description: A valid authentication token for accessing the requested resource. This can also be a base64 encoded API key when using basic authentication.
      schema:
        type: string
        example: "Bearer eyJhbGc..."
    ClientIdHeader:
      name: X-Ably-ClientId
      in: header
      required: false
      description: Optional client ID. If provided, this must match the client ID used to authenticate the request.
      schema:
        type: string
        example: "some-client-id"
    AcceptHeader:
      name: Accept
      in: header
      required: false
      description: |
        The content type the client is willing to accept in the response.
        Supported values are `application/json` and `application/x-msgpack`.
      schema:
        type: string
        enum:
          - application/json
          - application/x-msgpack
        example: "application/json"
        default: "application/json"

paths:
  /chat/{version}/rooms/{roomId}/messages:
    post:
      summary: Send a message to a room
      description: |
        Sends a new message to a specified room.

        A successful request returns a response with the serial and creation timestamp of the newly sent message. This will also mean the message has been broadcast to all subscribing members of the room.
      tags:
        - rooms
      parameters:
        - name: version
          in: path
          required: true
          description: The version of the Chat API endpoint to use.
          schema:
            type: string
            example: v3
        - name: roomId
          in: path
          required: true
          description: The unique identifier of the room to send the message to. The `roomId` must be URI-encoded.
          schema:
            type: string
        - $ref: '#/components/parameters/ClientIdHeader'
        - $ref: '#/components/parameters/AuthorizationHeader'
        - $ref: '#/components/parameters/AcceptHeader'
      requestBody:
        description: The message content and optional properties to send to the specified room.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: |
                    The main content of the message. This property is required. Empty strings will result in an error.
                  example: "Hello World!"
                headers:
                  type: object
                  description: |
                    Optional headers for adding additional information to a message, such as the relative timestamp of a livestream video, or flagging a message as important. Do not use the headers for authoritative information. Treat them like user input.
                  example:
                    liveStreamTime: "0:15:34.450"
                    priority: "high"
                metadata:
                  type: object
                  description: |
                    Optional metadata associated with the message. This can include animations, effects, or links, amongst others. This information is not read or processed by the server. Treat it like user input.
                  example:
                    animation: "wave_effect"
                    imageUrl: "https://example.com/image.jpg"
              required:
                - text
      responses:
        '200':
          description: |
            Successfully sent the message to the room.
          content:
            application/json:
              schema:
                type: object
                properties:
                  serial:
                    type: string
                    description: The unique identifier for the message.
                    example: "01826232498871-001@abcdefghij:001"
                  createdAt:
                    type: number
                    format: unix-timestamp
                    description: The timestamp when the message was created.
                    example: 1741973127428
        '400':
          description: Invalid request body. Check that the request format and required fields are correct.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
        '401':
          description: Unauthorized access. Authentication token is invalid or missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
              example:
                message: "Unauthorized access."
                code: 40005
                statusCode: 401
                href: "https://help.ably.io/error/40101"
        '422':
          description: Moderation error. The message content violates moderation rules and cannot be sent.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
              example:
                message: "Message contains inappropriate language."
                code: 42201
                statusCode: 422
                href: "https://help.ably.io/error/42201"
        '500':
          description: Server error. An unexpected error occurred on the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
              example:
                message: "Internal server error."
                code: 50001
                statusCode: 500
                href: "https://help.ably.io/error/50001"
    get:
      summary: Retrieve messages from a room
      description: |
        Fetches a list of messages from a specified room. The messages are returned in a paginated format with links to navigate through other pages.

        To query specific messages or control the set of messages returned, use the query parameters provided.
      tags:
        - rooms
      parameters:
        - name: roomId
          in: path
          required: true
          description: The unique identifier of the room to fetch messages from. The `roomId` must be URI-encoded.
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: The maximum number of messages to retrieve per request.
          schema:
            type: integer
            example: 50
        - name: serial
          in: query
          required: false
          description: The serial value to start fetching messages from, this must be URI encoded. If omitted, messages are retrieved from the beginning or end depending on the `orderBy` parameter.
          schema:
            type: string
            example: 01741966242815-000@cbf5P0_1gBmlrl25663776:000
        - name: orderBy
          in: query
          required: false
          description: |
            The order of messages in the response, based on the order of creation.
          schema:
            type: string
            enum: [oldestFirst, newestFirst]
            default: newestFirst
        - $ref: '#/components/parameters/ClientIdHeader'
        - $ref: '#/components/parameters/AuthorizationHeader'
        - $ref: '#/components/parameters/AcceptHeader'
      responses:
        '200':
          description: A paginated list of messages retrieved from the room.
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    description: A list of retrieved messages. Each message contains the following fields
                    items:
                      type: object
                      properties:
                        serial:
                          type: string
                          description: Unique identifier for the message.
                          example: "01741702684595-000@cbf5P0_1gBmlrl69332878:000"
                        clientId:
                          type: string
                          description: Client identifier of the message sender.
                          example: "some-client-id"
                        roomId:
                          type: string
                          description: Identifier of the room where the message originated.
                          example: "room-001"
                        text:
                          type: string
                          description: The main content of the message.
                          example: "Hello, world!"
                        headers:
                          type: object
                          description: Optional headers for additional message context.
                          example: { relativeTime: "10ms", urgency: "low" }
                        metadata:
                          type: object
                          description: Additional metadata or properties associated with the message.
                          example: { type: "chat", imageUrl: "https://example.com/image.jpg" }
                        createdAt:
                          type: number
                          format: unix-timestamp
                          description: The timestamp when the message was created.
                          example: 1741702684595
                        action:
                          type: string
                          description: Indicates the latest action performed on the message.
                          example: "message.create"
                        version:
                          type: string
                          description: A unique identifier for the version of the message.
                          example: "01741702684595-000@cbf5P0_1gBmlrl69332878:000"
                        timestamp:
                          type: number
                          format: unix-timestamp
                          description: The timestamp when the action was performed. For `message.create` actions, it is the same as `createdAt`.
                          example: 1741702684595
                  links:
                    type: object
                    description: If the response contains multiple pages, links shall be provided to navigate through the pages.
                    properties:
                      current:
                        type: string
                        format: uri
                        description: URI link to the current page of messages.
                        example: <./messages?direction=backwards&limit=100>; rel="current"
                      next:
                        type: string
                        format: uri
                        description: URI link to the next page of messages, if it exists.
                        example: <./messages?cursor=01741782820772-000%40cbf5P0_1gBmlrl73660839%3A000&direction=backwards&limit=100>; rel="previous"
                      first:
                        type: string
                        format: uri
                        description: URI link to the first page of messages.
                        example: <./messages?direction=backwards&limit=100>; rel="first"
        '400':
          description: Invalid query parameters. Check that required fields are included and properly formatted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
        '401':
          description: Unauthorized access. Authentication token is invalid or missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
              example:
                message: "Unauthorized access."
                code: 40005
                statusCode: 401
                href: "https://help.ably.io/error/40101"
        '500':
          description: Server error. An unexpected error has occurred, please contact support.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
              example:
                message: "Internal server error."
                code: 50001
                statusCode: 500
                href: "https://help.ably.io/error/50001"
  /chat/{version}/rooms/{roomId}/occupancy:
    get:
      summary: Retrieve occupancy of a room
      description: |
        Fetches the occupancy metrics of a specified room.

        A successful request returns the number of active connections and presence members.
      tags:
        - rooms
      parameters:
        - name: version
          in: path
          required: true
          description: The version of the Chat API endpoint to use.
          schema:
            type: string
            example: v3
        - name: roomId
          in: path
          required: true
          description: |
            The unique identifier of the room to retrieve occupancy information from.
            The `roomId` must be URI-encoded.
          schema:
            type: string
        - $ref: '#/components/parameters/ClientIdHeader'
        - $ref: '#/components/parameters/AuthorizationHeader'
        - $ref: '#/components/parameters/AcceptHeader'
      responses:
        '200':
          description: |
            Successfully retrieved the occupancy metrics for the specified room.
            The response provides the number of current active connections and presence members in the room.
          content:
            application/json:
              schema:
                type: object
                properties:
                  connections:
                    type: integer
                    description: The number of active connections in the room.
                    example: 103
                  presenceMembers:
                    type: integer
                    description: The number of presence members in the room.
                    example: 95
        '400':
          description: Invalid query parameters. Check that the request format and required fields are correct.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
        '401':
          description: Unauthorized access. Authentication token is invalid or missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
              example:
                message: "Unauthorized access."
                code: 40005
                statusCode: 401
                href: "https://help.ably.io/error/40101"
        '500':
          description: Server error. An unexpected error happened on the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
              example:
                message: "Internal server error."
                code: 50001
                statusCode: 500
                href: "https://help.ably.io/error/50001"
  /chat/{version}/rooms/{roomId}/messages/{serial}:
    put:
      summary: Update a message in a room
      description: |
        Updates an existing message in a specified room.

        **Important:** Omitting either the `headers` or `metadata` fields will result in removal of any existing values for those fields in the message. To retain original `headers` or `metadata`, you must include them explicitly in the update request.

        A successful request returns the updated message's `version` and the `timestamp` when the update occurred. This will broadcast the updated message to all subscribing members of the room.
      tags:
        - rooms
      parameters:
        - name: version
          in: path
          required: true
          description: The version of the Chat API endpoint to use.
          schema:
            type: string
            example: v3
        - name: roomId
          in: path
          required: true
          description: |
            The unique identifier of the room that contains the message to be updated.
            The `roomId` must be URI-encoded.
          schema:
            type: string
        - name: serial
          in: path
          required: true
          description: |
            The unique identifier of the message you wish to update.
            The `serial` must be URI-encoded.
          schema:
            type: string
            example: "01926232498871-001@abcdefghij:001"
        - $ref: '#/components/parameters/ClientIdHeader'
        - $ref: '#/components/parameters/AuthorizationHeader'
        - $ref: '#/components/parameters/AcceptHeader'
      requestBody:
        description: The updated message content and optional properties, along with details related to the update operation.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
                  description: The new content of the message, including text, headers, and metadata.
                  properties:
                    text:
                      type: string
                      description: |
                        The main content of the updated message. This property is required.
                        Empty strings will result in an error.
                      example: "Updated Text Content"
                    headers:
                      type: object
                      description: |
                        Optional headers for providing context, such as the relative timestamp
                        of a livestream or special tags for the message.
                        If not included, existing headers will be removed.
                      example:
                        liveStreamTime: "0:20:15.100"
                        priority: "medium"
                    metadata:
                      type: object
                      description: |
                        Optional metadata such as animations, effects, or links to other resources
                        associated with the message. If not included, existing metadata will be removed.
                      example:
                        animation: "highlight_effect"
                        imageUrl: "https://example.com/updated-image.jpg"
                  required:
                    - text
                description:
                  type: string
                  description: |
                    Optional description for the action. This provides context about the update operation.
                  example: "Message updated by user"
                metadata:
                  type: object
                  description: |
                    Optional metadata specific to the action. This does not modify the metadata of the message itself.
                  example:
                    editedBy: "user-12345"
                    reason: "Corrected typo"
      responses:
        '201':
          description: |
            Successfully updated the message in the room.
            The response contains the new `version` and the `timestamp` when the action was performed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                    description: The unique identifier for the updated version of the message.
                    example: "01926232498871-002@abcdefghij:001"
                  timestamp:
                    type: number
                    format: unix-timestamp
                    description: The timestamp when the message update was successfully performed.
                    example: 1741973127428
        '400':
          description: Invalid request body. Check that the required fields are provided and formatted correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
        '401':
          description: Unauthorized access. Authentication token is invalid or missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
              example:
                message: "Unauthorized access."
                code: 40005
                statusCode: 401
                href: "https://help.ably.io/error/40101"
        '404':
          description: Message not found. The message serial does not exist or the user does not have permissions to access it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
              example:
                message: "Message not found."
                code: 40400
                statusCode: 404
                href: "https://help.ably.io/error/40401"
        '500':
          description: Server error. An unexpected error occurred on the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
              example:
                message: "Internal server error."
                code: 50001
                statusCode: 500
                href: "https://help.ably.io/error/50001"
  /chat/{version}/rooms/{roomId}/messages/{serial}/delete:
    post:
      summary: Delete a message in a room
      description: |
        Deletes a specific message in a room.

        A successful request returns the `version` and `timestamp` of the deleted message. This will also broadcast the deletion to all subscribing members of the room.
      tags:
        - rooms
      parameters:
        - name: version
          in: path
          required: true
          description: The version of the Chat API endpoint to use.
          schema:
            type: string
            example: v3
        - name: roomId
          in: path
          required: true
          description: |
            The unique identifier of the room containing the message you wish to delete.
            The `roomId` should be URI-encoded.
          schema:
            type: string
        - name: serial
          in: path
          required: true
          description: |
            The unique identifier of the message you wish to delete.
            The `serial` must be URI-encoded.
          schema:
            type: string
            example: "01826232498871-001@abcdefghij:001"
        - $ref: '#/components/parameters/ClientIdHeader'
        - $ref: '#/components/parameters/AuthorizationHeader'
        - $ref: '#/components/parameters/AcceptHeader'
      requestBody:
        description: |
          Optional body containing additional information about the deletion action, such as a description and metadata.
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  description: |
                    Optional description providing context for the operation, such as the reason for deleting the message.
                  example: "Message deleted by user"
                metadata:
                  type: object
                  description: |
                    Optional metadata associated with the delete operation.
                    This does not affect the metadata of the message or room.
                  example:
                    deletedBy: "user-12345"
                    flaggedAs: "inappropriate"
      responses:
        '200':
          description: |
            Successfully deleted the message in the specified room.
            The response contains the new `version` and the `timestamp` when the deletion occurred.
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                    description: |
                      The unique identifier of the deleted version of the message.
                    example: "01826232498871-001@abcdefghij:001"
                  timestamp:
                    type: number
                    format: unix-timestamp
                    description: |
                      The timestamp when the deletion was successfully performed.
                    example: 1741973127428
        '400':
          description: Invalid request body or missing required fields. Ensure that the `serial` is provided and properly formatted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
        '401':
          description: Unauthorized access. The authentication token is invalid or missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
              example:
                message: "Unauthorized access."
                code: 40005
                statusCode: 401
                href: "https://help.ably.io/error/40101"
        '404':
          description: Message not found. Either the room or the message with the specified serial does not exist or the user lacks appropriate permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
              example:
                message: "Message not found."
                code: 40400
                statusCode: 404
                href: "https://help.ably.io/error/40401"
        '500':
          description: Server error. An unexpected error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
              example:
                message: "Internal server error."
                code: 50001
                statusCode: 500
                href: "https://help.ably.io/error/50001"
