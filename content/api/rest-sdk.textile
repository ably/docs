---
title: Constructor
meta_description: "Client Library SDK REST API Reference constructor documentation."
meta_keywords: "Ably, Ably REST, API Reference, REST SDK, REST interface, REST API, constructor"
section: api
index: 10
languages:
  - javascript
  - nodejs
  - php
  - python
  - ruby
  - java
  - swift
  - objc
  - csharp
  - go
  - flutter
jump_to:
  Constructor object:
    - constructor
  Attributes:
    - auth
    - push
    - channels
  Methods:
    - stats
    - time
    - request
  Types:
    - Related Types#related-types
redirect_from:
  - /api/versions/v1.1/rest-sdk
  - /api/versions/v1.0/rest-sdk
  - /api/versions/v0.8/rest-sdk
---

inline-toc.
  Properties:
    - auth#auth
    - push#push
    - device#device
    - channels#channels
  Methods:
    - stats(options)#stats
    - time()#time
    - request()#request
  Related types:
    - ClientOptions#client-options
    - Stats
    - Stats Granularity#stats-granularity
    - HttpPaginatedResponse#http-paginated-response
    - Params#param

blang[javascript,nodejs].

  <aside data-type='note'>
  <p>This API reference is for version 1.2 of the JavaScript SDK. Version 2.0 references are "available in TypeDoc.":https://ably.com/docs/sdk/js/v2.0/</p>
  </aside>

h2(#constructor). Constructor

The Ably REST library constructor is overloaded allowing it to be instantiated using a "@ClientOptions@":#client-options object, or more simply using a string containing an "API key":/auth/basic or "Token":/auth/token.

bq(definition).
  default:  new Ably.Rest(String keyOrTokenId)
  ruby:     Ably::Rest.new(String key_or_token_id)
  php:      new Ably\AblyRest(String key_or_token_id)
  java:     new io.ably.lib.AblyRest(String keyOrTokenIdString)
  csharp:   new IO.Ably.AblyRest(string key);
  objc:     - (instancetype)initWithKey:(NSString *)key<br>(instancetype)initWithToken:(NSString *)token
  swift:    init(key: String)<br>init(token: String)
  python:   AblyRest(String api_key)
  flutter:  ably.Rest(key: keyOrTokenIdString)
  go:       ably.NewREST(ably.WithKey(key string)) (<notextile>*</notextile>RestClient, error)

This will instantiate the REST library with the provided API key<span lang="default"> or Token ID string</span><span lang="csharp"></span>.

bq(definition).
  default:  new Ably.Rest("ClientOptions":#client-options clientOptions)
  ruby:     Ably::Rest.new("ClientOptions":#client-options client_options)
  php:      new Ably\AblyRest("ClientOptions":#client-options client_options)
  java:     new io.ably.lib.AblyRest("ClientOptions":#client-options clientOptions)
  csharp:   new IO.Ably.AblyRest("ClientOptions":#client-options clientOptions)
  objc:     - (instancetype)initWithOptions:("ARTClientOptions":#client-options *)options;
  swift:    init(options: "ARTClientOptions":#client-options)
  python:   AblyRest("ClientOptions":#client-options client_options)
  flutter:  ably.Rest(options: "ClientOptions":#client-options clientOptions)
  go:      ably.NewREST(ably.WithKey(key string), ably.WithClientID(clientID string)) (<notextile>*</notextile>RestClient, error)

blang[default].
  This will instantiate the library using the specified "ClientOptions":#client-options.

blang[ruby].
  This will instantiate the library and create a new @Ably::Rest::Client@ using the specified "@ClientOptions@":#client-options.

The REST constructor is used to instantiate the library. The REST library may be instantiated multiple times with the same or different "@ClientOptions@":#client-options in any given context. Except where specified otherwise, instances operate independently of one another.

h3(#authentication). Authentication

The REST library needs to have credentials to be able to authenticate with the Ably service. Ably supports both Basic and Token based authentication schemes. Read more on "authentication":/auth.

h4. Basic Authentication

A private API key string for "<span lang="default">@ClientOptions#key@</span><span lang="csharp,go">@ClientOptions#Key@</span>":#client-options or the constructor, as obtained from the "application dashboard":https://ably.com/dashboard, is required for "Basic Authentication":/auth/basic. Use this option if you wish to use "Basic authentication":/auth/basic, or if you want to be able to "request Ably Tokens":/auth/token without needing to defer to a separate entity to sign Ably TokenRequests. Note that initializing the library with a <span lang="default">@key@</span><span lang="csharp,go">@Key@</span> does not necessarily mean that the library will use Basic auth; using the private key it is also able to create and sign Ably TokenRequests and use token authentication when necessary.

h4. Token Authentication

The "<span lang="default">@ClientOptions#token@</span><span lang="csharp,go">@ClientOptions#Token@</span>":#client-options option takes a @token@ string, and assumes that the Ably-compatible token has been obtained from some other instance that requested the token. Use the token option if you are provided with a token to use and you do not have a key (or do not have a key with the capabilities that you require).

Since tokens are short-lived, it is rarely sufficient to start with a token without the means for refreshing it. The "<span lang="default">@authUrl@ and @authCallback@</span><span lang="ruby">@:auth_url@ and @:auth_callback@</span><span lang="python">@auth_url@ and @auth_callback@</span><span lang="python">@AuthUrl@ and @AuthCallback@</span> options":#client-options are provided to allow a user of the library to provide new Ably-compatible tokens or Ably TokenRequests to the library as required; using these options allows the library to be instantiated without a <span lang="default">@key@ or @token@</span><span lang="csharp,go">@Key@ or @Token@</span>, and an initial token will be obtained automatically when required.

Read more on "authentication":/auth.

h2(#properties).
  default: AblyRest Properties
  jsall: Ably.Rest Properties
  java: io.ably.lib.AblyRest Members
  ruby: Ably::Rest::Client Attributes
  objc,swift: ARTRest Properties
  flutter: ably.Rest Properties

The REST client exposes the following public <span lang="default">attributes</span><span lang="java">members</span><span lang="jsall,objc,swift,php">properties</span>:

h6(#auth).
  default: auth
  csharp,go: Auth

A reference to the "@Auth@":/api/rest-sdk/authentication authentication object configured for this client library.

h6(#push).
  default: push

A reference to the "<span lang="default">@Push@</span><span lang="objc,swift">@ARTPush@</span>":/general/push object in this client library.

<div lang="java,swift,objc">

h6(#device).
  default: device

A reference to the "<span lang="default">@LocalDevice@</span><span lang="objc,swift">@ARTLocalDevice@</span>":/general/push/activate-subscribe#local-device object.
</div>

h6(#channels).
  default: channels
  csharp,go: Channels

"@Channels@":/channels is a reference to the "@Channel@":/channels collection instance for this library indexed by the channel name. You can use the "@Get@":/api/rest-sdk/channels#get method of this to get a @Channel@ instance. See "channels":/channels and "messages":/channels/messages/ for more information.

h2(#methods).
  default: AblyRest Methods
  jsall: Ably.Rest Methods
  java: io.ably.lib.AblyRest Methods
  ruby: Ably::Rest::Client Methods
  objc,swift: ARTRealtime Methods
  flutter: ably.Rest Methods

h6(#stats).
  default:    stats
  csharp,go:  Stats

bq(definition).
  default:    stats(Object options, callback("ErrorInfo":/api/rest-sdk/types#error-info err, "PaginatedResult":/api/rest-sdk/types#paginated-result<"Stats":#stats> results))
  ruby:       "PaginatedResult":/api/rest-sdk/types#paginated-result<"Stats":#stats> stats(Hash options)
  python:     "PaginatedResult":/api/rest-sdk/types#paginated-result<"Stats":#stats> stats(kwargs_options)
  php:        "PaginatedResult":/api/rest-sdk/types#paginated-result<"Stats":#stats> stats(Array options)
  java:       "PaginatedResult":/api/rest-sdk/types#paginated-result<"Stats":#stats> stats("Param":#param[] options)
  csharp:     Task<"PaginatedResult":#paginated-result<"Stats":#stats>> StatsAsync("StatsRequestParams":/api/rest-sdk/types#data-request query)
  swift,objc: stats(query: ARTStatsQuery?, callback: ("ARTPaginatedResult":#/realtime/types#paginated-result<"ARTStats":/api/realtime-sdk/types#stats>?, ARTErrorInfo?) -> Void) throws
  go:         (c <notextile>*</notextile>RestClient) Stats(params <notextile>*</notextile>PaginateParams) (<notextile>*</notextile>PaginatedResult, error)

This call queries the "REST @/stats@ API":/api/rest-api#stats and retrieves your application's usage statistics. A "PaginatedResult":/api/rest-sdk/types#paginated-result is returned, containing an array of "Stats":#stats for the first page of results. "PaginatedResult":/api/rest-sdk/types#paginated-result objects are iterable providing a means to page through historical statistics. "See an example set of raw stats returned via the REST API":/metadata-stats/stats#metrics.

See "statistics":/metadata-stats/stats for more information.

<%= partial partial_version('rest/_stats') %>

h6(#time).
  default: time
  csharp:  Time

bq(definition).
  default:    time(callback("ErrorInfo":/api/rest-sdk/types#error-info err, Number time))
  ruby:       Time time
  python:     Int time()
  php:        Integer time()
  java:       long time()
  csharp:     Task<DateTimeOffset> TimeAsync()
  objc,swift: time(callback: (NSDate?, NSError?) -> Void)
  go:         (c <notextile>*</notextile>RestClient) Time() (time.Time, "error":/api/rest-sdk/types#error-info)

Obtains the time from the Ably service as <span lang="ruby">a @Time@ object</span><span lang="csharp">a @DateTimeOffset@ object</span><span lang="default">milliseconds since epoch</span>. (Clients that do not have access to a sufficiently well maintained time source and wish to issue Ably "TokenRequests":/api/rest-sdk/authentication#token-request with a more accurate timestamp should use the @queryTime@ "clientOptions":#client-options instead of this method).

blang[jsall,objc,swift].
  h4. Callback result

  On success, @time@ is a number containing the number of milliseconds since the epoch.

  On failure to retrieve the Ably server time, @err@ contains an "@ErrorInfo@":#error-info object with an error response as defined in the "Ably REST API":/api/rest-api#common documentation.

blang[java,ruby,php,csharp].
  h4. Returns

  On success, <span lang="default">milliseconds since epoch</span><span lang="ruby">the @Time@</span><span lang="csharp">the @DateTimeOffset@</span> is returned.

  Failure to retrieve the Ably server time will raise an "@AblyException@":/api/rest-sdk/types#ably-exception.

blang[go].
  h4. Returns

  On success, <span lang="default">milliseconds since epoch</span><span lang="ruby">the @Time@</span><span lang="csharp">the @DateTimeOffset@</span> is returned.

  On failure to retrieve the Ably server time, @error@ contains an "@ErrorInfo@":#error-info object with an error response as defined in the "Ably REST API":/api/rest-api#common documentation.

<%= partial partial_version('rest/_request') %>

h2(#related-types). Related types

h3(#client-options).
  default:   ClientOptions
  swift,objc: ARTClientOptions
  java:      io.ably.types.ClientOptions
  csharp:    IO.Ably.ClientOptions
  flutter:   ably.ClientOptions

<%= partial partial_version('types/_rest_client_options_intro') %>
<%= partial partial_version('types/_client_options') %>
<%= partial partial_version('types/_rest_client_options') %>

h3(#stats-type).
  default:   Stats object
  swift,objc: ARTStats
  java:      io.ably.lib.types.Stats
  ruby:      Ably::Models::Stats
  php:       Ably\Models\Stats
  csharp:    IO.Ably.Stats

<%= partial partial_version('types/_stats') %>

h3(#stats-granularity).
  objc,swift: ARTStatsGranularity
  csharp: StatsGranularity

<%= partial partial_version('types/_stats_granularity') %>

h3(#http-paginated-response).
  default:   HttpPaginatedResponse

<%= partial partial_version('types/_http_paginated_response') %>

h3(#param).
  java:    io.ably.lib.types.Param

blang[java].
  <%= partial partial_version('types/_param'), indent: 2, skip_first_indent: true %>
