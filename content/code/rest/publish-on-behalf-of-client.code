[--- Javascript ---]
var apiKey = '{{API_KEY}}',
    channelName = '{{RANDOM_CHANNEL_NAME}}',
    rest = new Ably.Rest({ key: apiKey }),
    restChannel = rest.channels.get(channelName),
    clientA = new Ably.Realtime({ key: apiKey, echoMessages: false }),
    channelA = clientA.channels.get(channelName),
    clientB = new Ably.Realtime({ key: apiKey }),
    channelB = clientB.channels.get(channelName);

$('input#publish').on('click', function() {
  if (clientA.connection.state !== 'connected') {
    show('client A is not connected, cannot publish on behalf of client A', 'red');
    return;
  }

  show('Publishing message over REST on behalf of client A with connection ID "' + clientA.connection.id + '"', 'orange');

  /* Specifying a private (secret) connection key allows a message be published
     on behalf of that connected client */
  var msg = { data: 'data', connectionKey: clientA.connection.key };

  restChannel.publish(msg, function(err) {
    if (err) {
      show('✗ REST publish failed: ' + err.message, 'red');
    } else {
      show('✓ REST publish successful', 'green');
    }
  });
});

clientA.connection.on('connected', function() {
  show('Client A is connected with connection ID "' + clientA.connection.id + '"<br>Secret connection key is "' + clientA.connection.key + '"', 'green');
});

clientB.connection.on('connected', function() {
  show('Client B is connected with connection ID "' + clientB.connection.id + '"', 'green');
});

channelA.subscribe(function(msg) {
  show('✗ Client A should not have received any messages as echoMessage is explicitly set to false', 'red');
});

channelB.subscribe(function(msg) {
  show('✓ Client B received published message from client A\'s connection ID "' + msg.connectionId + '"', 'green');
});

function show(status, color) {
  $('#channel-status').append($('<li>').html(status).css('color', color));
}
[--- /Javascript ---]

[--- HTML ---]
<script type="text/javascript" src="//cdn.ably.io/lib/ably.min-1.js"></script>
<script src="//jsbin-files.ably.io/js/jquery-1.8.3.min.js"></script>
<h1>Ably: Publishing over REST on behalf of a Realtime client example</h1>

<p>In this example, we demonstrate how it is possible to publish a message over REST on behalf of a connected Realtime client. We create two Realtime clients: client A is the publisher client that the REST client publishes on behalf of, and the other simply subscribes to messages. client A in this example is configured with the client option echoMessages set to false thus preventing the message sent on behalf of itself via the REST library being echoed back to itself. See <a href="https://ably.com/docs/rest/messages#publish-on-behalf">our REST Channel documentation</a> for more details.

<div class="row">
  <input id="publish" type="submit" value="Publish a message on behalf of client A">
</div>

<ul class="row" id="channel-status"></ul>
[--- /HTML ---]

[--- CSS ---]
body {
  font: 14px 'Helvetica Neue', Helvetica, Arial, sans-serif;
}

h1 {
  background: url('//jsbin-files.ably.io/images/logo.png') no-repeat;
  font-size: 18px;
  font-weight: bold;
  padding: 8px 0 0 120px;
  height: 42px;
}

.row {
  margin-bottom: 1em;
}
[--- /CSS ---]
