---
title: Channel Status API
section: rest
index: 15
jump_to:
  Help with:
    - Overview#overview
    - Metachannels#metachannels
    - Permissions#permissions
    - Requesting Channel Status#channel-status
    - Use Cases#use-cases
    - Tutorials#tutorials
  Channel API Types:
    - ChannelDetails#channel-details
    - ChannelStatus#channel-status
    - Occupancy#occupancy
---

h2(#overview). Overview

h2(#use-cases). Use cases

Having access to channel metadata can provide numerous benefits. In a scenario where the number of subscribers of a channel goes well beyond a hundred, usage of other options such as "presence":/core-features/presence becomes less effective leading to an unexpected n-squared problem if all of the clients are subscribed to presence. You could instead make use of our "channel metadata":#metachannels to check the number of active subscribers.

Equally, you may want to publish your data only if there is a subscriber for that data. The "channel lifecycle events":#lifecycle-events can notify you when a channel is opened, becomes active, or is no longer active thus giving your publisher clients an opportunity to know when the last subscriber leaves the channel.

If you need to be able to query channel metadata at any point, you can make use of the "Channel Status API":#metadata-rest to inspect the state of individual channels, or "enumerate":#enumeration-rest all active channels in an app.

h2(#tutorials). Tutorials

If you wish to see an example of how to use channel metadata, you can check out our "Channel Lifecycle Events":/tutorials/channel-lifecycle-events tutorial, "Channel Occupancy Events":/tutorials/channel-occupancy-events tutorial, and the "Channel Enumeration":tutorials/channel-enumeration-rest tutorial.

h1. Channel Status API Reference

inline-toc.
  Types:
    - ChannelDetails#channel-details
    - ChannelStatus#channel-status
    - Occupancy#occupancy

h2(#types). Types

The payload of lifecycle events for channels is the "ChannelDetails":#channel-details type which contains the @channelId@ and other static information about the channel, plus a @status@ containing a "ChannelStatus":#channel-status instance which contains information about the current state of the channel.

h3(#channel-details). ChannelDetails

ChannelDetails is an object returned when requesting channel metadata. It contains information on the channel itself, along with the current state of the channel in the "ChannelStatus":#channel-status object.

- channelId := the required name of the channel including any qualifier, if any<br>__Type: @string@__
- region := in events relating to the activity of a channel in a specific region, this optionally identifies the region<br>__Type: @string@__
- isGlobalMaster := in events relating to the activity of a channel in a specific region, this optionally identifies whether or not that region is resonsible for global coordination of the channel<br>__Type: @string@__
- status := an optional "ChannelStatus":#channel-status instance<br>__Type: "ChannelStatus":#channel-status__

h3(#channel-status). ChannelDetails.ChannelStatus

ChannelStatus is contained within the above ChannelDetails object, and optionally contains the below "Occupancy":#occupancy object.

- isActive := a required boolean value indicating whether the channel that is the subject of the event is active. For events indicating regional activity of a channel this indicates activity in that region, not global activity<br>__Type: @boolean@__
- occupancy := an optional "Occupancy":#occupancy instance indicating the occupancy of the channel. For events indicating regional activity of a channel this indicates activity in that region, not global activity.<br>__Type: "Occupancy":#occupancy__

h3(#occupancy). ChannelDetails.ChannelStatus.Occupancy

Occupancy is optionally contained within the above "ChannelStatus":#channel-status object, and contains information on the occupants of the channel. This is usually contained within the *metrics* object, an optional dictionary of membership categories for a realtime channel and their counts. Membership categories include:

- publishers := the number of connections attached to the channel that are authorised to publish<br>__Type: @integer@__
- subscribers := the number of connections attached that are authorised to subscribe to messages<br>__Type: @integer@__
- presenceSubscribers := the number of connections that are authorised to subscribe to presence messages<br>__Type: @integer@__
- presenceConnections := the number of connections that are authorised to enter members into the presence channel<br>__Type: @integer@__
- presenceMembers := the number of members currently entered into the presence channel<br>__Type: @integer@__
