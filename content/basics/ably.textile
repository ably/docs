---
title: What is Ably?
meta_description: "Ably is a realtime platform delivering powerful digital realtime experiences through a publish/subscribe network."
---

Ably’s realtime platform provides a scalable, fault-tolerant and worldwide publish/subscribe(pub/sub) network. Providing SDKs in a variety of programming languages with both REST and realtime interfaces Ably helps you get connected.

This section will provide a short introduction to some of the key features and APIs of Ably, giving you an idea of what you can expect to build with Ably and how Ably's infrastructure helps you succeed.

h2(#what). What can you build with Ably?

Ably enables the distribution of realtime data to multiple users using the pub/sub messaging pattern with WebSockets, enabling you to build realtime experiences for your applications without having to build your own realtime infrastructure. Common use cares are:

* Live Chat - chat for customer support or community engagement
* Data Broadcast - broadcast realtime event data to millions of devices
* Data Sync - keep backend and frontend clients in realtime sync
* Multiplayer Collaboration - collaborative workspaces for synchronous teamwork
* Notifications - deliver in-app notifications in realtime to users

h2(#about). Ably features

Ably provides a number of features that enhance realtime experiences, some of the key Ably features are: 

* "Pub/sub with channels":#pubsub
* "Presence and occupancy":#presence-and-occupancy
* "Message storage and history":#message-storage-and-history
* "Push Notifications":#push-notifications

h3(#pubsub). Pub/sub with channels

Ably uses the pub/sub architectural pattern to enable any number of publishers to publish data and any number of subscribers to subscribe to that data. This works with Ably's "concept of channels":/channels, enabling publishers to publish to a single location and subscribers to subscribe to a single source.

h3(#presence-and-occupancy). Presence and occupancy

Ably’s "presence":/presence-occupancy/presence feature enables clients or devices to announce their presence on a channel. Other devices or services may then subscribe to these presence events, such as a client entering or leaving the presence set. Each member in the presence set can have data associated with them. You can also request a list of clients or devices that are connected to a channel at a particular point in time via the REST API.

"Occupancy":/presence-occupancy/occupancy provides metrics about the clients attached to a channel, including a count of the number of clients attached, the number of presence members, and a breakdown of clients by authorization.

h3(#message-storage-and-history). Message storage and history

By default messages are only stored for two minutes on Ably’s servers. Messages are retrieved automatically by the SDK in the event of a lost connection within these two minutes. However, if you've enabled message persistence and the disconnection is longer than two minutes you can use the history feature to retrieve messages.

Ably's "message storage and history":/storage-history enables messages to be accessed after initially being sent. When enabled you can retrieve the last message sent to a channel using rewind, or enable persistence of all messages for 24 hours for the free account tier or 72 hours for paid account tiers. These messages can be retrieved using history. You can also persist messages to external storage services such as AWS through the use of "Ably Integrations":/integrations.

h3(#push-notifications). Push notifications

Ably's "Push Notifications":/push feature enables messages to be pushed to subscribers without needing a device to maintain a connection to Ably.

h3(#interfaces). SDK interfaces

Ably provides "both realtime and REST interfaces":/basics/use-ably. 

The "realtime interface":/basics/use-ably#realtime-interface establishes and maintains a constant connection to Ably, enabling realtime messages to be sent both to and from Ably. Using multiplexed "WebSocket":/https://ably.com/topic/websockets connections to enable multiple channels to share a single connection without having to fall back to inefficient techniques like HTTP polling.

The "REST interface":/basics/use-ably#rest-interface uses HTTP protocols and is effectively stateless, removing the need to retain session information or any in-flight request states. Although the REST interface cannot subscribe to data published in real time, it can be used to publish and retrieve realtime data.

There are a number of "Ably SDKs":LINK-ME in different programming languages to match your needs.

h2(#infrastructure). Ably's realtime infrastructure

Ably's infrastructure focuses on the "Four Pillars of Dependability":#infrastructure: performance, integrity, reliability, and availability.

Ably has a Global Network of 7 geographically-distributed core routing datacenters and 307 edge acceleration points-of-presence(PoPs). Ably's Global Network ensures unrivalled realtime messaging, data streaming performance, availability, and reliability.

Building on the Global Network Ably focuses on a seamless experience, that's why Ably's infrastructure is built around the "Four Pillars of Dependability":https://ably.com/four-pillars-of-dependability.

h3(#performance). Performance

By ensuring latency is minimized and providing consistent bandwidth requirements Ably enables developers to design applications to known standards and limitations. Knowing any boundaries, such as latency or channel throughput, that Ably operates within enables you to design, build, and scale features around them, confident they’ll perform as expected under various conditions.

h3(#integrity). Integrity

Ably is designed to maintain the end-to-end integrity of messages, knowing that many applications rely on strict message sequencing - dependent on each other. This enables simplified app architecture as missed, unordered, or duplicated messages don't need to be considered when developing with Ably.

h3(#reliability). Reliability

Ably understands the importance of trust and ensures this trust with a platform designed with redundancy at both regional and global levels based on statistical risks of failure, continuing even in the event of multiple infrastructure failures.

h3(#availability). Availability

Ably is designed to be elastic and highly-available to even the most stringent and demanding realtime requirements. Ably can transparently share the operating boundaries we monitor to ensure capacity and therefore availability, helping you understand the type of scale and elasticity capable with Ably.

RELATED-RESOURCES
 
* "Four Pillars of Dependability":https://ably.com/four-pillars-of-dependability.
* "How to use Ably":/basics/use-ably