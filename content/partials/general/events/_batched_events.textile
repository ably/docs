Each batched message will have the following fields:

- name := the event type, aka "@presence.message@", "@channel.message@", "@channel.closed@", etc
- webhookId := an internal unique ID for the configured webhook
- source := the source for the webhook, namely "@channel.message@", "@channel.presence@", "@channel.lifecycle@"
- timestamp := a timestamp represented as milliseconds since the epoch for the presence event
- data := an object containing the data of the event defined below in "JSONPath format":http://goessner.net/articles/JsonPath

h4(#batch-example-message). Batched message events

For @message@ events, @data@ will contain:

- data.channelId := name of the channel that the presence event belongs to
- data.site := an internal site identifier indicating which primary datacenter the member is present in
- data.messages := an @Array@ of raw messages

minimize. View batched @message@ payload example
  ```[json]
  {
    "items": [{
      "webhookId": "ABcDEf",
      "source": "channel.lifecycle",
      "timestamp": 1562124922426,
      "serial": "a7bcdEFghIjklm123456789:4",
      "name": "channel.message",
      "data": {
        "channelId": "channelName",
        "site": "eu-west-1-A",
        "messages": [{
          "id": "ABcDefgHIj:1:0",
          "connectionId": "ABcDefgHIj",
          "timestamp": 1123145678900,
          "data": "some message data",
          "name": "my message name"
        }]
      }
    }]
  }
  ```

h5(#batch-example-message-decoding). Decoding batched messages

Messages sent "over the realtime service":/realtime/channels are automatically decoded into "@Messages@":/realtime/types#message object by the Ably client library. With webhooks you need to to do this explicitly, using "@Message.fromEncodedArray@":/realtime/messages#message-from-encoded-array on the @data.messages@ array, or "@Message.fromEncoded@":/realtime/messages#message-from-encoded or an individual member of that array. This will transform them into an array of "@Messages@":/realtime/types#message (or in the case of @fromEncoded@, an individual "@Message@":/realtime/types#message). This has several advantages, e.g.:

* It will fully decode any @data@ (using the @encoding@) back into the same datatype that it was sent in (or an equivalent in each client library's language)
* If you are using "encryption":/realtime/encryption, you can pass your encryption key to the method and it will decrypt the @data@ for you

We recommend you do this for all messages you receive over webhooks. For example (using ably-js):

```[javascript]
webhookMessage.items.forEach((item) => {
  const messages = Ably.Realtime.Message.fromEncodedArray(item.data.messages);
  messages.forEach((message) => {
    console.log(message.toString());
  })
})
```

h4(#batch-example-presence). Batched presence events

For @presence@ events, @data@ will contain:

- data.channelId := name of the channel that the presence event belongs to
- data.site := an internal site identifier indicating which primary datacenter the member is present in
- data.presence := an @Array@ of "@Presence@":/realtime/presence#presence-message events

minimize. View batched @presence@ payload example
  ```[json]
  {
    "items": [{
      "webhookId": "ABcDEf",
      "source": "channel.lifecycle",
      "timestamp": 1562124922426,
      "serial": "a7bcdEFghIjklm123456789:4",
      "name": "presence.message",
      "data": {
        "channelId": "education",
        "site": "eu-west-1-A",
        "presence": [{
          "id": "ABcDefgHIj:1:0",
          "connectionId": "ABcDefgHIj",
          "timestamp": 1123145678900,
          "clientId": "bob",
          "data": "some message data",
          "action": 4
        }]
      }
    }]
  }
  ```

h4(#batch-example-lifecycle). Batched channel lifecycle events

For @channel lifecycle@ events, @data@ will contain:

- data.channelId := name of the channel that the presence event belongs to
- data.status := a "@ChannelStatus@":/realtime/channel-metadata#channel-details object

minimize. View batched @channel lifecycle@ payload example
  ```[json]
  {
    "items": [{
      "webhookId": "ABcDEf",
      "source": "channel.lifecycle",
      "timestamp": 1562124922426,
      "serial": "a7bcdEFghIjklm123456789:4",
      "name": "channel.opened",
      "data": {
        "channelId": "channelName",
        "name": "channelName",
        "status": {
          "isActive": true,
          "occupancy": {
            "metrics": {
              "connections": 1,
              "publishers": 1,
              "subscribers": 1,
              "presenceConnections": 1,
              "presenceMembers": 0,
              "presenceSubscribers": 1
            }
          }
        }
      }
    }]
  }
  ```
