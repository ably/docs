version: 2.1

orbs:
  node: circleci/node@5.3.0

parameters:
  content-update:
    type: boolean
    default: false

executors:
  default:
    description: Node 20.13.1
    docker:
      - image: cimg/node:20.13.1

jobs:
  install-dependencies:
    executor:
      name: default
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - persist_to_workspace:
          root: .
          paths:
            - node_modules

  test:
    executor:
      name: default
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Run linting
          command: yarn lint
      - run:
          name: Install JUnit coverage reporter
          command: yarn add jest-junit
      - run:
          name: Run tests
          command: yarn test -- --ci --collectCoverage=true --coverageDirectory=coverage --coverageReporters=html --runInBand --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/junit/
      - store_test_results:
          path: ./reports/junit
      - store_artifacts:
          path: coverage

  build:
    executor:
      name: default
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Build site
          command: yarn build
      - persist_to_workspace:
          root: .
          paths:
            - config
            - public

  validate-llms-txt:
    executor:
      name: default
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Validate llms.txt
          command: yarn validate-llms-txt

  test-nginx:
    docker:
      - image: heroku/heroku:24-build
    environment:
      PORT: 3001
      STACK: heroku-24
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Install Heroku nginx & ruby
          command: |
            mkdir -p buildpack
            curl -sSL https://buildpack-registry.s3.amazonaws.com/buildpacks/heroku-community/nginx.tgz | tar -zx -C buildpack
            curl -sSL -o bin/compile https://github.com/heroku/heroku-buildpack-nginx/raw/refs/heads/main/bin/compile
            chmod +x bin/compile
            cd buildpack
            ../bin/compile build /tmp
            mv build/bin/nginx ../bin/
      - run:
          name: Require redirects file to be generated
          command: test -f config/nginx-redirects.conf
      - run:
          name: Test nginx configuration
          command: |
            export PATH="$PWD/bin:$PWD/buildpack/build/.heroku-buildpack-nginx/ruby/bin:$PATH"
            erb config/nginx.conf.erb > config/nginx.conf
            mkdir -p logs/nginx
            nginx -p . -c config/nginx.conf -t
      - run:
          name: Start nginx
          command: |
            export PATH="$PWD/bin:$PWD/buildpack/build/.heroku-buildpack-nginx/ruby/bin:$PATH"
            mkdir -p logs/nginx
            SKIP_HTTPS=false ./bin/start-nginx
          background: true
      - run:
          name: Wait for nginx
          command: |
            until $(curl --retry 10 --output /dev/null --silent --head --fail http://localhost:3001/); do
                printf '.'
                sleep 1
            done
      - run:
          name: Smoke test trailing slash redirects
          command: |
            ./bin/assert-success.sh /docs/getting-started/quickstart
            ./bin/assert-redirect.sh /docs/getting-started/quickstart/ \
                                     https://localhost/docs/getting-started/quickstart
      - run:
          name: Smoke test redirect_from redirects
          command: |
            ./bin/assert-redirect.sh /docs/how-ably-works \
                                     http://localhost/docs/key-concepts
            ./bin/assert-redirect.sh /docs/rest/history \
                                     http://localhost/docs/storage-history/history
      - run:
          name: Test website redirects
          command: |
            ./bin/assert-redirect.sh /tutorials https://ably.com/tutorials

workflows:
  test_branch:
    unless: << pipeline.parameters.content-update >>
    jobs:
      - install-dependencies
      - test:
          requires:
            - install-dependencies
      - build:
          requires:
            - install-dependencies
      - test-nginx:
          requires:
            - build
      - validate-llms-txt:
          requires:
            - build

