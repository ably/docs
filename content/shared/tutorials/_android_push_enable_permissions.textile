Create or use an application as shown below and make sure that both the @Push Admin@ and @Push Subscribe@ permissions are checked, for your API key. You can do this under the settings tab of your app in the developer dashboard.

<a href="/images/tutorials/push-android/sandbox-app.png" target="_blank">
  <img src="/images/tutorials/push-android/sandbox-app.png" style="width: 100%" alt="Setting up a Sandbox app">
</a>

<a href="/images/tutorials/push-android/adding-capabilities.png" target="_blank">
  <img src="/images/tutorials/push-android/adding-capabilities.png" style="width: 100%" alt="Adding Push capabilities">
</a>

These permissions correspond to the following:

* "@push-subscribe@":/general/push/activate-subscribe: A client with this permission is a push target device, and it can manage the registration and subscription for itself. However, it won't be able to manage push registrations or channel subscriptions for any other device.
* "@push-admin@":/general/push/admin: A client with this permission has full access to the "Push Admin API":https://www.ably.io/documentation/general/push/admin and can manage registrations and subscriptions for all devices.

Read more about permissions (also called capabilities) in our "API documentation":/core-features/authentication#capabilities-explained.

Next, navigate to the app's *Settings* tab, and add a channel rule for your chosen channel namespace by checking the *Push notifications enabled* option.

<a href="/images/tutorials/push-android/editing-channel-rules.png" target="_blank">
  <img src="/images/tutorials/push-android/editing-channel-rules.png" style="width: 100%" alt="Adding channel rules">
</a>

With this done, your app now has a key with push permissions, along with a channel on which push notifications can be sent.