[--- Javascript ---]
var apiKey = '{{API_KEY}}';

Ably.Realtime.Crypto.generateRandomKey(function(err, key) {
  var cipherParams = Ably.Realtime.Crypto.getDefaultParams({ key: key }),
      channelOpts = { cipher: cipherParams };

  var realtimePub = new Ably.Realtime({ key: apiKey }),
      channelPub = realtimePub.channels.get('employee', channelOpts),
      realtimeSub = new Ably.Realtime({ key: apiKey }),
      channelSub = realtimeSub.channels.get('employee', channelOpts),
      realtimeNoEnc = new Ably.Realtime({ key: apiKey }),
      channelNoEnc = realtimeNoEnc.channels.get('employee');

  $('input#publish').on('click', function() {
    show('Publishing encrypted message', 'orange');
    channelPub.publish('event', 'secret payload', function(err) {
      if (err) {
        show('✗ Publish failed: ' + err.message, 'red');
      } else {
        show('✓ Publish successful', 'green');
      }
    });
  });

  channelSub.subscribe(function(message) {
    show('⬅ Decrypted message on channel (with secret key): ' + message.data, 'green');
  });

  channelNoEnc.subscribe(function(message) {
    show('⬅ Could not decrypt encrypted message (no secret key): hex => ' + arrayBufferToHex(message.data), 'orange');
  });

  function show(status, color) {
    $('#channel-status').append($('<li>').text(status).css('color', color));
  }
});


function arrayBufferToHex(arrayBuffer) {
  var ua = new Uint8Array(arrayBuffer);
  var hex = [];
  for (var i = 0; i < ua.length; i++) {
      hex.push(ua[i].toString(16));
  }
  return hex.join(' ');
}
[--- /Javascript ---]

[--- HTML ---]
<script type="text/javascript" src="//cdn.ably.io/lib/ably.min-1.js"></script>
<script src="//jsbin-files.ably.io/js/jquery-1.8.3.min.js"></script>
<h1>Ably Encrypted Channel Example</h1>

<p>In this example, we demonstrate how to use symmetric encryption to publish and receive messages encrypted end-to-end. We also include an un-encrypted channel demonstrating that the opqaue encrypted message is received. See <a href="https://www.ably.io/documentation/realtime/encryption">our Realtime Encryption documentation</a> for more details.

<div class="row">
  <input id="publish" type="submit" value="Publish an encrypted message">
</div>

<ul class="row" id="channel-status"></ul>
[--- /HTML ---]

[--- CSS ---]
body {
  font: 14px 'Helvetica Neue', Helvetica, Arial, sans-serif;
}

h1 {
  background: url('//jsbin-files.ably.io/images/logo.png') no-repeat;
  font-size: 18px;
  font-weight: bold;
  padding: 8px 0 0 120px;
  height: 42px;
}

.row {
  margin-bottom: 1em;
}
[--- /CSS ---]
