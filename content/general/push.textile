---
title: Push Notifications
meta_description: "Ably can deliver push notifications to devices using, amongst others, Apple's Push Notification service and Google's Firebase Cloud Messaging service. This topic provides an overview."
meta_keywords: "Push, push notifications, Apple Push Notification Service, Google Firebase Cloud Messaging Service"
section: general
index: 55
jump_to:
  Help with:
    - Delivering push notifications#deliver
    - Activating and subscribing a device#activate-device
    - Managing devices and subscriptions#admin
    - Platform support#platform-support
    - Tutorials#tutorials
redirect_from:
  - /general/push-notifications
  - /general/smart-notifications
---

<%= partial partial_version('general/push/_push_intro') %>

h3(#download). Downloading a client library with push support

The following Ably client library SDKs provide support for activating and receiving push notifications:

* "Android SDK":https://github.com/ably/ably-java
* "iOS Objective-C and Swift SDK":https://github.com/ably/ably-cocoa

<!--*[!!Ed. note: removed as part of EDU-1155. Return if required in the future.] Experimental "W3C Push API":https://www.w3.org/TR/push-api/ push notification support for compatible browsers, in the "JavaScript SDK":https://github.com/ably/ably-js.-->

<!--[!!Ed. note: removed as part of EDU-1155. Return if required in the future.]**Note**: Our W3C Push API is still in development and should not be used in production applications. We welcome feedback and are particularly interested in which browsers you require support for. "Get in touch":https://ably.com/contact for access to this experimental feature.-->

All Ably client library SDKs, that adhere to the "v1.1 specification support":/client-lib-development-guide/features/, support "push publishing":/general/push/publish and "push admin":/general/push/admin functionality.

"See the list of client libraries available for download":https://ably.com/download

h3(#features). Key features

<!--[!!Ed. note: removed as part of EDU-1155. Return if required in the future.] * Browsers receive the notification in a Web Worker which is in turn responsible for presenting a visual notification to the user (this is an experimental feature). * Experimental support for Chrome, Firefox and Opera. Apple's Safari Notifications planned.-->


* General Availability Support for Android and iOS
* Custom notification formats and badges for iOS and Android. 
* Both visual notifications and data payloads can be sent to mobile devices.
* Any number of mobile and browser devices can be registered on pub/sub channels. Each time a message is published with a push notification payload, Ably will ensure that all registered devices receive the push notification in near realtime.
* Scale to millions of devices simultaneously by leveraging Ably's global platform.
* User-centric device registration allowing devices to be grouped by user ("@clientId@":/realtime/authentication#identified-clients)
* Filters can be applied to notifications such as client ID, connection ID or device type, or alternatively you can push message directly to devices or users via our API.
* Realtime metrics for your delivered and undelivered push notifications.
* Error logging on a dedicated metachannel ("@[meta]log:push@":/realtime/metachannels)

h2(#tutorials). Tutorials

If you wish to see step by step instructions to set up, send and receive push notifications on your mobile devices, you can checkout our "tutorials for iOS and Android, with both direct device registration and registration via server":/tutorials#tut-push-notifications examples.
