One or more channel namespaces, or channel name prefixes, may be "configured for an app in your dashboard":https://support.ably.io/solution/articles/3000030053-how-do-i-access-my-app-dashboard. When a channel is created whose name is prefixed with one of the namespaces, the channel assumes certain configured attributes associated with that namespace. For example, a channel namespace named "@private@" would match channels named "@private@", "@private:chat@", "@private:chat:mike@".

Namespace-prefixed channel names are delimited by a single colon @:@; the first component of the channel name (from the start up to and including the last character before the colon) is the namespace. A channel name may validly contain a colon even if the namespace component does not correspond to a namespace; also, a channel may contain multiple colons and only the component up to the first colon will be matched with a namespace. The only restriction on channel names is that a channel name may not start with a colon @:@, an open square bracket @[@ and it may not be empty.

Namespaces are defined and configured via the "application dashboard settings":https://support.ably.io/solution/articles/3000030057-what-are-channel-rules-and-how-can-i-use-them-in-my-app. The namespace attributes that can be configured are:

* **Persisted messages** - If enabled, all messages within this namespace will be stored according to the storage rules for your account. You can access stored messages via the "history API":/realtime/history
* **Require identification** - if enabled, clients will not be permitted to subscribe to matching channels unless they are both authenticated and identified (they have an assigned client ID). Anonymous clients are not permitted to join these channels. Find out more about "authenticated and identified clients":https://support.ably.io/solution/articles/3000038608-authenticated-clients
* **Require TLS** - if enabled, only clients who have connected to Ably over TLS will be allowed to join the channel

Key or token capabilities can also specify access rights based on channel namespace, find out more about "authentication":/core-features/authentication
