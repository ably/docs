[--- Javascript ---]
var ably = new Ably.Rest('{{API_KEY}}');

$('input#connect').on('click', function() {
  var myToken = createAblyJWT();
  $('#token-container').show();
  var realtime = new Ably.Realtime({
    token: myToken
  });
  $('#realtime-status').text('Connecting...').css('color', '');
  realtime.connection.on(function (stateChange){
    console.log(stateChange);
  });
  realtime.connection.on('connected', function() {
    $('#realtime-status').
      text('âœ“ Connected to Ably' + (realtime.auth.clientId ? ' with client ID ' + realtime.auth.clientId : '')).
      css('color', 'green');
  });
});

function createAblyJWT() {
   var header = {
    "typ":"JWT",
    "alg":"HS256",
    "kid": "{{API_KEY_NAME}}"
  };
  var clientId = $('#clientId').val();
  if(clientId === "") clientId = null;
  var currentTime = Math.round(Date.now()/1000);
  var claims = {
    "iat": currentTime, /* current time in seconds */
    "exp": currentTime + 3600, /* time of expiration in seconds */
    "x-ably-capability": $('#capability').val(),
    "x-ably-clientId": clientId
  };
  var base64Header = b64(CryptoJS.enc.Utf8.parse(JSON.stringify(header)));
  var base64Claims = b64(CryptoJS.enc.Utf8.parse(JSON.stringify(claims)));

  var token = base64Header + "." + base64Claims;
  /* Apply the hash specified in the header */
  var signature = b64(CryptoJS.HmacSHA256(token, "{{API_KEY_SECRET}}"));
  var ablyJWT = token + "." + signature;
     $('#token').text(JSON.stringify(header, null,'\t') + JSON.stringify(claims, null,'\t'));
  $('#signed-token').text(ablyJWT);
  return ablyJWT;
}

function b64(token) {
  encode = CryptoJS.enc.Base64.stringify(token);
  encode = encode.replace( /\=+$/, '');
  encode = encode.replace(/\+/g, '-');
  encode = encode.replace(/\//g, '_');

  return encode;
}
[--- /Javascript ---]

[--- HTML ---]
<script type="text/javascript" src="//cdn.ably.io/lib/ably.min-1.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/rollups/hmac-sha256.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/enc-base64-min.js"></script>
<script src="//jsbin-files.ably.io/js/jquery-1.8.3.min.js"></script>
<h1>Ably JWT Example</h1>

<p>In this example, we demonstrate how to create an Ably JWT that can be used by any client authenticate with Ably. The token may optionally set an identify for the client as well as a set of capabilities. See <a href="https://www.ably.io/documentation/core-features/authentication">our authentication documentation</a> for more details.

<div class="row">
  <label for="clientId">Client ID:</label>
  <input id="clientId" type="text" placeholder="Optional client identity">
</div>

<div class="row">
  <label for="capability">Capability:</label>
  <select id="capability">
    <option value='{"*":["*"]}'>All operations: {"*":["*"]}</option>
    <option value='{"*":["subscribe"]}'>Subscribe all channels: {"*":["subscribe"]}</option>
    <option value='{"position":["publish"]}'>Publish to 'position' channel: {"position":["publish"]}</option>
  </select>
</div>

<div id="token-container">
  Unencrypted token:
  <pre id="token"></pre>
  Encrypted signed token:
  <pre id="signed-token"></pre>
</div>

<div class="row">
  <input id="connect" type="submit" value="Connect to Ably using Ably JWT">
</div>

<div class="row" id="realtime-status">
</div>
[--- /HTML ---]

[--- CSS ---]
body {
  font: 14px 'Helvetica Neue', Helvetica, Arial, sans-serif;
}

h1 {
  background: url('//jsbin-files.ably.io/images/logo.png') no-repeat;
  font-size: 18px;
  font-weight: bold;
  padding: 8px 0 0 120px;
  height: 42px;
}

label {
  display: block;
}

.row {
  margin-bottom: 1em;
}
#token-container {
  display: none;
}

#token {
  border: 1px solid #999;
  border-radius: 5px;
  padding: 10px;
  font-family: "Courier New", Courier, monospace;
}
[--- /CSS ---]
