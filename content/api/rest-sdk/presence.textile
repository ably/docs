---
title: Presence
meta_description: "Presence events provide clients with information about the status of other clients 'present' on a channel"
meta_keywords: "Ably, presence, presence events, channel members, presence history."
section: api
index: 50
languages:
  - javascript
  - nodejs
  - php
  - python
  - ruby
  - java
  - swift
  - objc
  - csharp
  - go
jump_to:
  Presence API reference:
    - get
    - history
  Types:
    - Related Types#related-types
redirect_from:
  - /docs/api/versions/v1.1/rest-sdk/presence
  - /docs/api/versions/v1.0/rest-sdk/presence
  - /docs/api/versions/v0.8/rest-sdk/presence
---

h2. Methods

h6(#get).
  default: get
  csharp,go: Get

Get the current presence member set for this channel.  In the REST client library this method directly queries "Ably's REST presence API":/docs/api/rest-api#presence

bq(definition).
  default:    get(Object options, callback("ErrorInfo":/docs/api/rest-sdk/types#error-info err, "PaginatedResult":#paginated-result<"PresenceMessage":#presence-message> resultPage))
  jsall:      get(Object params?): Promise<"PresenceMessage[]":#presence-message>
  ruby:       "PaginatedResult":#paginated-result<"PresenceMessage":#presence-message> get(Hash options)
  python:     "PaginatedResult":#paginated-result<"PresenceMessage":#presence-message> get(kwargs_options)
  php:        "PaginatedResult":#paginated-result<"PresenceMessage":#presence-message> get(Array options)
  java:       "PaginatedResult":#paginated-result<"PresenceMessage":#presence-message> get("Param[]":#param options)
  csharp:     Task<"PaginatedResult":#paginated-result<"PresenceMessage":#presence-message>> GetAsync(int? limit = null, string clientId = null, string connectionId = null);
  swift,objc: get(query: ARTPresenceQuery, callback: (["ARTPresenceMessage":#presence-message], ARTErrorInfo?) -> Void)
  go:         (p <notextile>*</notextile>RestPresence) Get(options <notextile>*</notextile>PaginateParams) (<notextile>*</notextile>"PaginatedResult":#paginated-result, error)

Gets an array of members present on the channel as "PresenceMessage":#presence-message objects.

blang[jsall,ruby,python,php,java,swift,objc,go].
  h4. Parameters

  - <span lang="default">options</span><span lang="jsall">params</span><span lang="objc,swift,csharp">query</span><span lang="java">"Param[]":#param options</span> := <span lang="default">an optional object containing query parameters</span><span lang="python">optional keyword arguments containing the query parameters</span><span lang="ruby">an optional set of symbol key and value pairs containing the query parameters</span><span lang="php">an optional Associate Array containing the query parameters</span> as specified below.

  - <div lang="objc,swift">callback</div> := called with a "@PaginatedResult@":#paginated-result@<@"@PresenceMessage@":#presence-message@>@, or with an error

h4. <span lang="default">@options@ parameters</span><span lang="jsall">@params@ parameters</span><span lang="objc,swift">@ARTPresenceQuery@ properties</span><span lang="csharp">Arguments</span>

- <span lang="default">clientId</span><span lang="python">client_id</span><span lang="ruby">:client_id</span> := when provided, will filter array of members returned that match the provided <span lang="default">"@clientId@":/docs/api/rest-sdk#client-options</span><span lang="ruby,python">"@client_id@":/docs/api/rest-sdk#client-options</span><span lang="csharp">"@ClientId@":/docs/api/rest-sdk#client-options</span> string
- <span lang="default">connectionId</span><span lang="python">connection_id</span><span lang="ruby">:connection_id</span> := when provided, will filter array of members returned that match the provided <span lang="default">"@connectionId@":/docs/api/realtime-sdk/connection#id</span><span lang="csharp">"@ConnectionId@":/docs/api/realtime-sdk/connection#id</span><span lang="ruby">"@connection_id@":/docs/api/realtime-sdk/connection#id</span> string

blang[jsall].
  h4. Returns

  Returns a promise. On success, the promise is fulfilled with an array of "@PresenceMessage@":#presence-message objects corresponding to the current set of present members on the channel. On failure, the promise is rejected with an "@ErrorInfo@":/docs/api/rest-sdk/types#error-info object that details the reason why it was rejected.

blang[java,ruby,php,python,csharp].
  h4. Returns

  <span lang="csharp">This method is asynchronous and needs to be awaited.</span>

  On success, the returned "@PaginatedResult@":#paginated-result encapsulates an array of "@PresenceMessage@":#presence-message objects corresponding to the current page of members currently present on the channel. "@PaginatedResult@":#paginated-result supports pagination using "<span lang="default">@next@</span><span lang="csharp">@NextAsync@</span>":#paginated-result and "<span lang="default">@first@</span><span lang="csharp">@FirstAsync@</span>":#paginated-result methods.

  Failure to retrieve the current presence member set will raise an "@AblyException@":/docs/api/realtime-sdk/types#ably-exception

blang[java,ruby,php,python,csharp].
  h4. Returns

  <span lang="go">This method is asynchronous and needs to be awaited.</span>

  On success, @resultPage@ contains a "@PaginatedResult@":#paginated-result encapsulating an array of "@PresenceMessage@":#presence-message objects corresponding to the current page of members currently present on the channel. "@PaginatedResult@":#paginated-result supports pagination using "@next()@":#paginated-result and "@first()@":#paginated-result methods.

  Failure to retrieve the current presence member, the @error@ contains an "@ErrorInfo@":#error-info object with the failure reason.

h6(#history).
  default: history
  csharp: History

bq(definition).
  default:    history(Object options, callback("ErrorInfo":/docs/api/rest-sdk/types#error-info err, "PaginatedResult":#paginated-result<"PresenceMessage":#presence-message> resultPage))
  jsall:      history(Object params?): Promise<"PaginatedResult":#paginated-result<"PresenceMessage":#presence-message>>
  ruby:       "PaginatedResult":#paginated-result<"PresenceMessage":#presence-message> history(Hash options)
  python:     "PaginatedResult":#paginated-result<"PresenceMessage":#presence-message> history(kwargs_options)
  php:        "PaginatedResult":#paginated-result<"PresenceMessage":#presence-message> history(Array options)
  java:       "PaginatedResult":#paginated-result<"PresenceMessage":#presence-message> history("Param[]":#param options)
  csharp:     Task<"PaginatedResult":#paginated-result<"PresenceMessage":#presence-message>> HistoryAsync("PaginatedRequestParams":#paginated-request-params query);
  objc,swift: history(query: ARTDataQuery?, callback: ("ARTPaginatedResult":#paginated-result<"ARTPresenceMessage":#presence-message>?, ARTErrorInfo?) -> Void) throws
  go:         (p <notextile>*</notextile>RestPresence) History(params <notextile>*</notextile>PaginateParams) (<notextile>*</notextile>PaginatedResult, error)

Gets a "paginated":#paginated-result set of historical presence message events for this channel. If the "channel is configured to persist messages to disk":https://faqs.ably.com/how-long-are-messages-stored-for, then the presence message event history will "typically be available for 24 - 72 hours":https://faqs.ably.com/how-long-are-messages-stored-for. If not, presence message events are only retained in memory by the Ably service for two minutes.

h4. Parameters

- <span lang="default">options</span><span lang="jsall">params</span><span lang="java">"Param[]":#param options</span><span lang="objc,swift">query</span><span lang="csharp">"PaginatedRequestParams":#paginated-request-params query</span> := <span lang="default">an optional object containing query parameters</span><span lang="python">optional keyword arguments containing the query parameters</span><span lang="ruby">an optional set of key value pairs containing query parameters</span><span lang="php">an optional Associate Array containing the query parameters</span>, as specified in the "presence history API documentation":/docs/storage-history/history#presence-history.

- <div lang="swift,objc">callback</div> := called with a "ARTPaginatedResult":#paginated-result<"ARTPresenceMessage":#presence-message> object or an error

blang[jsall].
  h4. Returns

  Returns a promise. On success, the promise is fulfilled with a "@PaginatedResult@":#paginated-result object containing an array of "@PresenceMessage@":#presence-message objects  corresponding to the current page of results. On failure, the promise is rejected with an "@ErrorInfo@":/docs/api/rest-sdk/types#error-info object that details the reason why it was rejected.

blang[swift,objc].
  h4. Callback result

  On success, @resultPage@ contains a "@PaginatedResult@":#paginated-result encapsulating an array of "@PresenceMessage@":#presence-message objects corresponding to the current page of results. "@PaginatedResult@":#paginated-result supports pagination using "@next()@":#paginated-result and "@first()@":#paginated-result methods.

  On failure to retrieve message history, @err@ contains an "@ErrorInfo@":#error-info object with the failure reason.

blang[java,ruby,php,python,csharp].
  h4. Returns

  <span lang="csharp">This method is asynchronous and needs to be awaited.</span>

  On success, the returned "@PaginatedResult@":#paginated-result encapsulates an array of "@PresenceMessage@":#presence-message objects corresponding to the current page of results. "@PaginatedResult@":#paginated-result supports pagination using "<span lang="default">@next@</span><span lang="csharp">@NextAsync@</span>":#paginated-result and "<span lang="default">@first@</span><span lang="csharp">@FirstAsync@</span>":#paginated-result methods.

  Failure to retrieve the message history will raise an "@AblyException@":/docs/api/realtime-sdk/types#ably-exception

blang[go].
  h4. Returns

  On success, @resultPage@ contains a "@PaginatedResult@":#paginated-result encapsulating an array of "@PresenceMessage@":#presence-message objects corresponding to the current page of results. "@PaginatedResult@":#paginated-result supports pagination using "@next()@":#paginated-result and "@first()@":#paginated-result methods.

  Upon failure to retrieve the message history, the @error@ contains an "@ErrorInfo@":#error-info object with the failure reason.

h2(#related-types). Related types

h3(#presence-message).
  default: PresenceMessage
  swift,objc: ARTPresenceMessage
  ruby:    Ably::Models::PresenceMessage
  java:    io.ably.lib.types.PresenceMessage
  csharp:  IO.Ably.PresenceMessage

<%= partial partial_version('types/_presence_message') %>

h3(#presence-action).
  default: Presence action
  python:  PresenceAction
  swift,objc: ARTPresenceAction
  java:    io.ably.lib.types.PresenceMessage.Action
  ruby:    Ably::Models::PresenceMessage::ACTION
  csharp:  IO.Ably.PresenceAction

<%= partial partial_version('types/_presence_action') %>

h3(#paginated-request-params).
  csharp: PaginatedRequestParams

blang[csharp].
  <%= partial partial_version('types/_history_request_params'), indent: 2, skip_first_indent: true %>

h3(#paginated-result).
  default: PaginatedResult
  swift,objc: ARTPaginatedResult
  ruby:    Ably::Models::PaginatedResult
  java:    io.ably.lib.types.PaginatedResult
  csharp:  IO.Ably.PaginatedResult

<%= partial partial_version('types/_paginated_result') %>

h3(#param).
  java:    io.ably.lib.types.Param

blang[java].
  <%= partial partial_version('types/_param'), indent: 2, skip_first_indent: true %>
