---
title: Types
section: realtime
index: 500
languages:
  - javascript
  - nodejs
  - ruby
  - java
  - swift
  - objc
  - csharp,0.8
---

The Ably client library defines both data types and option types.  Data types are used to represent object such as messages; Option types are used in method arguments.

Where client libraries support both Realtime and REST APIs, the types are shared between both clients.

All types are always classes or their respective equivalent for each language implementation. Options on the other hand, may often support both typed option classes or more flexible key value objects such as a Hash or plain Javascript object.

If you are interested in finding out more about the exact types and options definitions in each language, we recommend you download "our open source libraries":https://www.ably.io/download and review the code.

h1. API Reference

inline-toc.
  Data types:
    - AblyException#ably-exception
    - DeviceDetails#device-details
    - Error Info
    - Message
    - Presence Message
    - Presence action
    - Paginated Result
    - HTTP Paginated Response
    - Param
    - PushChannelSubscription#push-channel-subscription
    - Token Details
    - Token Request
    - Stats
    - Stats Granularity
  Other Types:
    - Auth Options
    - Client Options
    - Channel Options
    - Channel State
    - Channel Event
    - Channel State Change
    - Channel State Listener
    - Cipher Params
    - Completion Listener
    - Connection State#connection-state
    - Connection Event#connection-event
    - Connection State Listener
    - Connection State Change
    - History Request Params
    - LastConnnectionDetails#last-connection-details
    - Message Listener
    - Presence Listener
    - Stats Request Params
    - Token Params

h2. Data types

h3(#ably-exception).
  java:  io.ably.lib.types.AblyException
  ruby:  Ably::Exceptions::BaseAblyException
  csharp: IO.Ably.AblyException

blang[java,csharp].
  <%= partial partial_version('types/_ably_exception'), indent: 2, skip_first_indent: true %>

blang[ruby].
  <%= partial partial_version('types/_base_ably_exception'), indent: 2, skip_first_indent: true %>

h3(#device-details).
  jsall: DeviceDetails
  ruby:  Ably::Models::DeviceDetails

blang[jsall,ruby].
  <%= partial partial_version('types/_device_details'), indent: 2, skip_first_indent: true %>

h3(#error-info).
  default: ErrorInfo
  objc,swift: ARTErrorInfo
  java:    io.ably.lib.types.ErrorInfo
  ruby:    Ably::Models::ErrorInfo
  csharp:  IO.Ably.ErrorInfo

<%= partial partial_version('types/_error_info') %>

h3(#message).
  default: Message
  objc,swift: ARTMessage
  java:    io.ably.lib.types.Message
  ruby:    Ably::Models::Message
  csharp:  IO.Ably.Message

<%= partial partial_version('types/_message') %>

h3(#presence-message).
  default: PresenceMessage
  objc,swift: ARTPresenceMessage
  java:    io.ably.lib.types.PresenceMessage
  ruby:    Ably::Models::PresenceMessage
  csharp:  IO.Ably.PresenceMessage

<%= partial partial_version('types/_presence_message') %>

h3(#presence-action).
  default: Presence action
  objc,swift: ARTPresenceAction
  java:    io.ably.lib.types.PresenceMessage.Action
  ruby:    Ably::Models::PresenceMessage::ACTION
  csharp:  IO.Ably.PresenceAction

<%= partial partial_version('types/_presence_action') %>

h3(#paginated-result).
  default: PaginatedResult
  objc,swift: ARTPaginatedResult
  java:    io.ably.lib.types.PaginatedResult
  ruby:    Ably::Models::PaginatedResult
  csharp:  IO.Ably.PaginatedResult

<%= partial partial_version('types/_paginated_result') %>

h3(#http-paginated-response).
  default: HttpPaginatedResponse

<%= partial partial_version('types/_http_paginated_response') %>

h3(#param).
  java:    io.ably.lib.types.Param

blang[java].
  <%= partial partial_version('types/_param'), indent: 2, skip_first_indent: true %>

h3(#push-channel-subscription).
  jsall: PushChannelSubscription
  ruby:  Ably::Models::PushChannelSubscription

blang[jsall,ruby].
  <%= partial partial_version('types/_push_channel_subscription'), indent: 2, skip_first_indent: true %>

h3(#token-details).
  default: TokenDetails
  objc,swift: ARTTokenDetails
  java:    io.ably.lib.types.TokenDetails
  ruby:    Ably::Models::TokenDetails
  csharp:  IO.Ably.TokenDetails

<%= partial partial_version('types/_token_details') %>

h3(#token-request).
  default: TokenRequest
  objc,swift: ARTTokenRequest
  java:    io.ably.lib.types.TokenRequest
  ruby:    Ably::Models::TokenRequest
  csharp:  IO.Ably.TokenRequest

<%= partial partial_version('types/_token_request') %>

h3(#stats).
  default: Stats object
  objc,swift: ARTStats
  java:    io.ably.lib.types.Stats
  ruby:    Ably::Models::Stats
  csharp:  IO.Ably.Stats

<%= partial partial_version('types/_stats') %>

h3(#stats-granularity).
  objc,swift: ARTStatsGranularity

<%= partial partial_version('types/_stats_granularity') %>

h2. Other types

h3(#auth-options).
  default:   AuthOptions Object
  objc,swift:   ARTAuthOptions
  ruby:      AuthOptions Hash
  java:      io.ably.lib.rest.Auth.AuthOptions
  csharp:    IO.Ably.AuthOptions

<%= partial partial_version('types/_auth_options') %>

h3(#client-options).
  default:   ClientOptions Object
  objc,swift:   ARTClientOptions
  ruby:      ClientOptions Hash
  java:      io.ably.types.ClientOptions
  csharp:    IO.Ably.ClientOptions

<%= partial partial_version('types/_client_options') %>
<%= partial partial_version('types/_realtime_client_options') %>

h3(#channel-options).
  default:   ChannelOptions Object
  objc,swift:   ARTChannelOptions
  ruby:      ChannelOptions Hash
  java:      io.ably.lib.types.ChannelOptions
  csharp:    IO.Ably.Rest.ChannelOptions

<%= partial partial_version('types/_channel_options') %>

h3(#channel-state).
  default: ChannelState
  objc,swift: ARTRealtimeChannelState
  ruby:    Channel::STATE Enum
  java:    io.ably.lib.realtime.ChannelState Enum
  csharp:  IO.Ably.Realtime.ChannelState Enum

<%= partial partial_version('types/_channel_state') %>

h3(#channel-event).
  default: ChannelEvent
  swift,objc: ARTChannelEvent
  ruby:    Channel::EVENT Enum
  java:    io.ably.lib.realtime.ChannelEvent Enum
  csharp:  IO.Ably.Realtime.ChannelEvent Enum

<%= partial partial_version('types/_channel_event') %>

h3(#channel-state-change).
  default: ChannelStateChange Object
  objc,swift: ARTRealtimeChannelStateChange
  ruby:    ChannelStateChange
  java:    io.ably.lib.realtime.ConnectionStateListener.ChannelStateChange
  csharp:  IO.Ably.Realtime.ChannelStateChange

<%= partial partial_version('types/_channel_state_change') %>

h3(#channel-state-listener).
  java:   io.ably.lib.realtime.ChannelStateListener

blang[java].
  <%= partial partial_version('types/_channel_state_listener'), indent: 2, skip_first_indent: true %>

h3(#cipher-params).
  default: CipherParams
  objc,swift: ARTCipherParams
  ruby:    CipherParams Hash
  java:    io.ably.lib.util.Crypto.CipherParams
  csharp:  IO.Ably.CipherParams

<%= partial partial_version('types/_cipher_params') %>

h3(#completion-listener).
  java:   io.ably.lib.realtime.CompletionListener

blang[java].
  <%= partial partial_version('types/_completion_listener'), indent: 2, skip_first_indent: true %>

h3(#connection-state).
  default: ConnectionState
  objc,swift: ARTRealtimeConnectionState
  ruby:    Connection::STATE
  java:    io.ably.lib.realtime.ConnectionState
  csharp:  IO.Ably.Realtime.ConnectionState

<%= partial partial_version('types/_connection_state') %>

h3(#connection-event).
  default: ConnectionEvent
  swift,objc: ARTRealtimeConnectionEvent
  ruby:    Connection::EVENT Enum
  java:    io.ably.lib.realtime.ConnectionEvent Enum
  csharp:  IO.Ably.Realtime.ConnectionEvent Enum

<%= partial partial_version('types/_connection_event') %>

h3(#connection-state-listener).
  java: io.ably.lib.realtime.ConnectionStateListener

blang[java].
  <%= partial partial_version('types/_connection_state_listener'), indent: 2, skip_first_indent: true %>

h3(#connection-state-change).
  default: ConnectionStateChange Object
  objc,swift: ARTConnectionStateChange
  ruby:    ConnectionStateChange
  java:    io.ably.lib.realtime.ConnectionStateListener.ConnectionStateChange
  csharp:  IO.Ably.Realtime.ConnectionStateChange

<%= partial partial_version('types/_connection_state_change') %>

h3(#history-request-params).
  csharp: IO.Ably.HistoryRequestParams

blang[csharp].
  <%= partial partial_version('types/_history_request_params'), indent: 2, skip_first_indent: true %>

h3(#message-listener).
  java: io.ably.lib.realtime.Channel.MessageListener

blang[java].
  <%= partial partial_version('types/_message_listener'), indent: 2, skip_first_indent: true %>

h3(#last-connection-details).
  javascript: LastConnectionDetails

blang[javascript].
  <%= partial partial_version('types/_last_connection_details'), indent: 2, skip_first_indent: true %>

h3(#presence-listener).
  java: io.ably.lib.realtime.Presence.PresenceListener

blang[java].
  <%= partial partial_version('types/_message_listener'), indent: 2, skip_first_indent: true %>

blang[ruby].
  h3(#deferrable).
    ruby: Ably::Util::SafeDeferrable

  <%= partial partial_version('types/_deferrable'), indent: 2, skip_first_indent: true %>

h3(#stats-request-params).
  csharp: IO.Ably.StatsRequestParams

blang[csharp].
  <%= partial partial_version('types/_history_request_params'), indent: 2, skip_first_indent: true %>

h3(#token-params).
  default:   TokenParams Object
  objc,swift:   ARTTokenParams
  ruby:      TokenParams Hash
  java:      io.ably.lib.rest.Auth.TokenParams
  csharp:    IO.Ably.TokenParams

<%= partial partial_version('types/_token_params') %>
