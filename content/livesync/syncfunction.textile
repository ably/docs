---
title: Sync Function
product: Livesync
---

You will need a sync function to ensure that your model is initialised with the latest data. Your sync function should follow this format:

```
type SyncFunc<T> = () => Promise<T>;
```

To ensure synchronization, the sync function must be a promise-returning function containing your data model's latest state. In most cases, this is done by creating a function that retrieves the model's state from a backend source, usually via a network request. For example, if your model is based on a post, you might have a REST HTTP API endpoint that provides the required data:

```
async function sync() {
  const result = await fetch('/api/post');
  return result.json();
}

const model = modelsClient.models.get<Post>({
  sync: /* ... */,
  /* other registrations */
})
```

The sync function plays a crucial role as it sets up the initial state at the beginning of the model's lifecycle. Additionally, it is responsible for re-syncing the model's state whenever needed, such as after losing network connection for a significant duration.