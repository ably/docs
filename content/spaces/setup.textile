---
title: SDK setup
meta_description: "Install, authenticate and instantiate the Spaces SDK."
product: spaces
languages:
  - javascript
---

Use these instructions to install, authenticate and instantiate the Spaces SDK.

h2(#authenticate). Authenticate

An "API key":/auth#api-keys is required to authenticate with Ably. API keys are used either to authenticate directly with Ably using "basic authentication":/auth/basic, or to generate tokens for untrusted clients using "token authentication":/auth/token.

<aside data-type='important'>
<p>The examples use "basic authentication":/auth/basic to demonstrate features for convenience. In your own applications, basic authentication should never be used on the client-side as it exposes your Ably API key. Instead use "token authentication":/auth/token. </p>
</aside>

"Sign up":https://ably.com/sign-up to Ably to create an API key in the "dashboard":https://ably.com/dashboard or use the "Control API":/account/control-api to create an API programmatically.

API keys and tokens have a set of capabilities assigned to them that specify which operations, such as @subscribe@ or @publish@ can be performed on which resources. To use the Spaces SDK, the API key requires the following "capabilities":/auth/capabilities#58: 

* Publish
* Subscribe
* Presence
* History

h2(#install). Install

The Spaces SDK is built on top of the Ably JavaScript SDK and uses it to establish a connection with Ably. Therefore the Ably JavaScript SDK is installed alongside the Spaces SDK.

Both SDKs are available as "NPM modules":#npm and via "CDN.":#cdn

h3(#npm). Using NPM

Install the Ably JavaScript SDK and the Spaces SDK:

```[sh]
npm install ably @ably/spaces
```

Import the SDKs into your project:

```[javascript]
import Spaces from '@ably/spaces';
import { Realtime } from 'ably';
```

h3(#cdn). Using a CDN

Reference the Ably JavaScript SDK and the Spaces SDK within the @<head>@ of your HTML file:

```[html]
<script src="https://cdn.ably.com/lib/ably.min-1.js"></script>
<script src="https://cdn.ably.com/spaces/0.1.2/iife/index.bundle.js"></script>
```

h2(#instantiate). Instantiate

Instantiate a realtime client using the Ably JavaScript SDK and pass the generated client into the Spaces constructor:

```[javascript]
const client = new Realtime.Promise({key: "<API-key>", clientId: "<client-ID>"});
const spaces = new Spaces(client);
```

A "@ClientOptions@":/api/realtime-sdk#client-options object may be passed to the Ably JavaScript SDK to further customize the connection, however at a minimum you must set your API key and provide a @clientId@ so that the client is "identified.":/auth/identified-clients

<aside data-type='note'>
<p>Only the promises version of the Ably JavaScript is supported when using Spaces, not the callback version.</p>
</aside>

h2(#connections). Client connections

A Spaces client exposes the underlying "connection":/connect to Ably that is established via the Ably JavaScript SDK. This means that Spaces clients benefit from the same functionality available in the Ably JavaScript SDK, such as automatic transport selection and "connection state recovery":/connect/states in the event of brief disconnections.

Connections transition through multiple states throughout their lifecycle. Whilst these transitions are handled by the Ably SDK, there are certain cases where you may need to observe and handle them within your application. Ably SDKs enable these transitions to be observed and triggered using methods available on the @connection@ object. The Spaces SDK exposes the underlying connection with @spaces.connection@, which is a reference to "@client.connection@":/api/realtime-sdk/connection in the Ably JavaScript SDK.
