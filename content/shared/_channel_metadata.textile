This returns a "ChannelDetails":/realtime/channel-metadata#channel-details for the given channel, indicating global "occupancy":/rest/channel-status#occupancy. A side-effect of this request, in the current version of this API, is that it will cause the channel in question to become activated; therefore it is primarily intended to be used in conjunction with the "enumeration API":#enumeration-rest or in situations where the application has another means to know whether or not a given channel is active.

Example request:

bc[sh]. curl https://rest.ably.io/channels/<channelId> \
 -u "{{API_KEY}}"

The credentials presented with the request must include the @channel-metadata@ permission for the channel in question.

Client libraries currently do not support this API, but it is usable via the generic "request API":/rest/usage#request:

```[jsall]
var rest = new Ably.Rest({ key: '{{API_KEY}}' });

rest.request(
  'get',
  '/channels/<my_channel>',
  null,
  null,
  null,
  function(err, response) {
    if(err) {
      console.log('An error occurred; err = ' + err.toString());
    } else {
      console.log('Success! status code was ' + response.statusCode);
      console.log(response.items);
    }
  }
);
```
```[php]
$client = new Ably\AblyRest('{{API_KEY}}');

$response = $rest->request('GET', '/channels/<my_channel>');
echo("Response code: " . $response->statusCode);
echo("<br>isActive: " . $response->items[0]->status->isActive . "<br>");
print_r($response->items[0]->status->occupancy);
```
```[python]
rest = AblyRest('{{API_KEY}}')
response = rest.request('GET', '/channels/<my_channel>').items[0]
print('Response is is: ' + str(recent_message))
```
```[java]
AblyRest ablyRest = new AblyRest("{{API_KEY}}");
HttpPaginatedResponse resultPage = ablyRest.request("GET", "/channels/<my_channel>", null, null, null);
System.out.println(resultPage.items()[0].toString());
```
```[ruby]
client = Ably::Rest.new(key: '{{API_KEY}}')

response = client.request(:get, '/channels/<my_channel>')
puts "Status: #{response.items[0]['status']}"
```
```[objc]
ARTRest *client = [[ARTRest alloc] initWithKey:@"{{API_KEY}}"];
[client.request method:"GET" path:"/channels/<my_channel>" callback:^(ARTHTTPPaginatedResponse *response, ARTErrorInfo *error) {
    NSLog(@"%@", response);
}];
```
```[go]
rest, err := ably.NewRestClient(ably.NewClientOptions("{{API_KEY}}"))
if err != nil {
  panic(err)
}
response, err := rest.Request("GET", "/channels/<my_channel>", nil, nil, nil)
if err != nil {
  panic(err)
}

fmt.Println(response.PaginatedResult)
```