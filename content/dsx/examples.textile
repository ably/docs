---
title: DSX examples using Open Data in the Ably Hub
section: dsx
index: 1001
languages:
  - javascript
jump_to:
  TFL:
    - Introduction
---

h2(#coindesk-bitcoin). Coindesk - bitcoin prices live stream

"CoinDesk":https://www.coindesk.com/price/bitcoin provides current pricing for Bitcoin. This data is available for free on their website. Using DSX, it's easy to access this data as a realtime stream for free. "View the documentation for this product on Ably Hub":https://www.ably.io/dsx/hub/products/20 to learn how to implement this yourself.

h3. Live Demo:


<table style="width:100%; padding: 20px; height: 50px;" border="1">
  <tr>
    <td style="text-align: center;">
      <div class="container">
      <div class="c-flashbox"><h4 id="result-coindesk"></h4></div>
      </div>
    </td>
  </tr>
</table>

h2. Transport for London

TFL publishes information such as arrivals at stations and existing disruptions into the Ably Hub. Using the Ably DSX, you can trivially subscribe to this data for free. See the example below:

<div>
  <div>
    Station:
    <select id="naptan-code">
      <option value="northern:940GZZLUEUS">Euston Underground Station</option>
      <option value="northern:940GZZLUKSX">Kings Cross Underground Station</option>
      <option value="jubilee:940GZZLUWSM">Westminster Underground Station</option>
      <option value="northern:940GZZLUWLO">Waterloo Underground Station</option>
    </select>
  </div>
</div>
<table id="table-tfl" class="c-flashbox" style="margin-top: 20px;">
  <thead>
    <tr>
      <th>Due</th>
      <th>Destination</th>
      <th>Platform</th>
      <th>Line</th>
    </tr>
  </thead>
  <tbody>
  </tbody>
</table>

h3. Code example

Subscribing to a data stream product requires the producer and product identifier, and then the channel name.  In the example below:

* The producer is @TFL@
* The product is @Tube@
* The channel is @tube:northern:940GZZLUEUS:arrivals@ which corresponds to Euston Underground station NAPTAN code, for the Northern Line. "Find more station NAPTAN codes":https://data.gov.uk/dataset/ff93ffc1-6656-47d8-9155-85ea0b8f2251/national-public-transport-access-nodes-naptan.

```[javascript]
let ably = new Ably.Realtime('YOUR_API_KEY');
let channelName = '[product:TFL/Tube]tube:northern:940GZZLUEUS:arrivals';
let channel = ably.channels.get(channelName);
channel.subscribe((msg) => {
  /* station update in msg */
});
```

<script src="//cdn.ably.io/lib/ably.min-1.js" crossorigin="anonymous"></script>
<script src="https://apis.google.com/js/api.js"></script>
<script type="text/javascript">
  window.addEventListener("load", function() {
    var ably = new Ably.Realtime({ authUrl: 'https://www.ably.io/ably-auth/token/dsx' }),
        $resultTfl = $('#result-tfl'),
        $resultCoindesk = $('#result-coindesk'),
        $flashBox = $('.c-flashbox'),
        $tableTfl = $('#table-tfl'),
        tableBodyTfl = document.getElementById('table-tfl').getElementsByTagName('tbody')[0],
        tableTflData = {},
        tableTfl = {},
        oldPrice = 0.0,
        channelTfl,
        channelCoindesk;


    ably.connection.on('connecting', function() {
      console.log("[Connecting to Ably]");
    });

    ably.connection.on('connected', function() {
      console.log("[Connected to Ably]");
    });

    function subscribeToChannel(name, channel, subscribe) {
      if (channel) {
        channel.detach(function(err) {
          if(err) {
            console.log("Error detaching: " + err);
          } else {
            subscribe(name);
          }
        });
      } else {
        subscribe(name);
      } 
    }

    function subscribeTfl(name) {
      let newBodyTfl = document.createElement('tbody');
      tableBodyTfl.parentNode.replaceChild(newBodyTfl, tableBodyTfl);
      tableBodyTfl = newBodyTfl;
      console.log(name);
      channelTfl = ably.channels.get('[product:TFL/Tube]tube:' + name + ':arrivals');
      historyTfl();
      channelTfl.subscribe(function(msg) {
        updateTfl(msg.data);
      });
    }

    function updateTfl(arrivals) {
      arrivals = arrivals.reverse();
      let newBodyTfl = document.createElement('tbody');
      arrivals.forEach((arrival) => {
        let arrivalTime = new Date(arrival.ExpectedArrival).toLocaleTimeString();
        let tmpTableRow = newBodyTfl.insertRow(0);
        tmpTableRow.insertCell(0).innerHTML = arrivalTime;
        tmpTableRow.insertCell(1).innerHTML = arrival.Towards;
        tmpTableRow.insertCell(2).innerHTML = arrival.PlatformName;
        tmpTableRow.insertCell(3).innerHTML = arrival.LineName;
      });
      for(let i=0; i < arrivals.length; i++) {
        let arrivalTime = new Date(arrivals[arrivals.length - i - 1].ExpectedArrival).toLocaleTimeString();
        if(tableBodyTfl.rows[i] != undefined && newBodyTfl.rows[i] != undefined){
          if(tableBodyTfl.rows[i].cells[0].innerHTML != arrivalTime) {
            newBodyTfl.rows[i].classList.add("c-flashbox__positive-flash");
          }
        }
      }

      tableBodyTfl.parentNode.replaceChild(newBodyTfl, tableBodyTfl);
      tableBodyTfl = newBodyTfl;
    }

    function subscribeCoindesk(name) {
      channelCoindesk = ably.channels.get('[product:Coindesk/Bitcoin]bitcoin:' + name);
      historyCoindesk();
      channelCoindesk.subscribe(function(msg) {
        let newPrice = parseFloat(msg.data.replace(',', ''));
        if(oldPrice > newPrice) {
          $resultCoindesk.removeClass("c-flashbox__negative-flash");
          $resultCoindesk.removeClass("c-flashbox__positive-flash");
          setTimeout(function() {
            $resultCoindesk.addClass("c-flashbox__negative-flash");
          }, 6);
        } else if(oldPrice < newPrice) {
          $resultCoindesk.removeClass("c-flashbox__negative-flash");
          $resultCoindesk.removeClass("c-flashbox__positive-flash");
          setTimeout(function() {
            $resultCoindesk.addClass("c-flashbox__positive-flash");
          }, 6);
        }
        oldPrice = newPrice;
        $resultCoindesk.text('$' + msg.data);
      });      
    }

    function historyCoindesk() {
      channelCoindesk.attach(function(err) {
        channelCoindesk.history({ untilAttach: true, limit: 1 }, function(err, resultPage) {
          if(err) return
          let recentMessage = resultPage.items[0];
          if(recentMessage) {
            $resultCoindesk.text('$' + recentMessage.data);
          }
        });
      });
    }

    function historyTfl() {
      channelTfl.attach(function(err) {
        channelTfl.history({ untilAttach: true, limit: 1 }, function(err, resultPage) {
          if(err) return;
          let recentMessage = resultPage.items[0];
          if(recentMessage) {
            updateTfl(recentMessage.data);
          }
        });
      });
    }

    $('select#naptan-code').on('change', function() {
      subscribeToChannel($('select#naptan-code').val(), channelTfl, subscribeTfl);
    });

    subscribeToChannel($('select#naptan-code').val(), channelTfl, subscribeTfl);
    subscribeToChannel('usd', channelCoindesk, subscribeCoindesk);
  });
</script>