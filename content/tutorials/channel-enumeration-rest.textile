---
title: Channel Enumeration using the REST API
section: tutorials
index: 14
---

Ably Realtime's Data Stream Network organizes all of the message traffic within its applications into named "channels":https://www.ably.io/channels. Channels are the “unit” of message distribution; clients attach to any number of channels to publish or subscribe to messages. Every message published to a channel is broadcasted to all subscribers. 

Many times, developers find it helpful to be aware of specific metadata related to their channels. This metadata can be accessed using our "Channel Metadata API":/realtime/channel-metadata. This API allows you to subscribe to the "channel lifecycle events":/realtime/channel-metadata#lifecycle-events and "channel occupancy events":/realtime/channel-metadata#occupancy-realtime or send one off REST requests to the "Channel Status API":/rest/channel-status to query "channel enumeration":/rest/channel-metadata/enumeration-rest, i.e., listing all the active channels associated with a particular API key in an app or to query the status and occupancy data associated with the channel. In this tutorial, we'll see how to implement the channel enumeration functionality.

Channel enumeration, as decribed above, is part of the Channel Status API, and can be currently implemented via our "REST API":/rest-api only; however, you can still use our "REST client library":/rest to send requests to the REST API as you'll see further down this tutorial.

<%= partial 'tutorials/_step-1-setup-free-account' %>

h2(#permissions). Step 2 - Setting the right permissions on your API key

In order to be able to use the enumeration feature, you'll need to ensure that the @Channel Metadata@ permission is enabled on your API key. "Permissions":/core-features/authentication/#capabilities-explained (or privileges or capabilities, used interchangeably) restrict your API key from being used to performing specific actions only, such as publish-and-subscribe or publish-only, etc. These privileges can be set on your API key via your account dashboard. Navigate to the 'API Keys' tab of your dashboard as shown in the image below and click on the 'settings' button against an existing API key that you'd like to use or create a new one.

A regular Ably API key has a @capability@ which lists resources (glob expressions that match channel names) and, for any given resource, a set of permitted operations. The wildcard resource @'*'@ will match any regular channel name.

In order to enumerate channels, your key or token must permit the @channel-metadata@ capability on the wildcard resource. The following are examples of capabilities that will allow access to channel enumeration:

```[json]
    {"*":["channel-metadata"]}
    {"*":["*"]}
    {"[*]*":["*"]}
```

<a href="/images/tutorials/channel-metadata-permissions.png" target="_blank">
    <img src="/images/tutorials/channel-metadata-permissions.png" style="width: 100%" alt="Channel metadata permissions">
</a>

From the list of privileges, enable the @Channel Metadata@ privilege, and you are good to go on the permissions part of it.

h2(#front-end). Step 3 - Creating a basic HTML page to display the results

Since we'll be using JavaScript in this tutorial, the best way to display the results is in a browser. So, go ahead and paste the following simple HTML in a file and name it @index.html@

```[html]
<html>

<head>
    <title>Channel Enumeration</title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script lang="text/javascript" src="https://cdn.ably.io/lib/ably-1.js"></script>
</head>

<body style="padding: 60px; font-family:Arial, Helvetica, sans-serif">
    Ably Channel Enumeration using REST API - Demo
    <br/>
    <div>
        <button id='enumerate' onclick="enumerateChannels()">Enumerate channels</button>
        <br>
        <textarea id="result" rows="30" style="width: 30%; margin-top: 14px; font-family: courier, courier new; background-color: #333; color: orange;  overflow-y: scroll;" disabled autocomplete="off">
        </textarea>
    </div>
    <script src="main.js"></script>
</body>

</html>
```


The key thing to note in the HTML above is the inclusion of two JS files, one is the Ably Library, referenced via the CDN, while the other is the @main.js@ file which will include our logic. We'll work on this next.

"See this step in Github":https://github.com/ably/tutorials/commit/1360e82


h2(#performing-the-rest-request). Step 4 - Using Ably's REST library to perform a REST API request

Channel enumeration is not currently integrated into our REST client libraries as a dedicated method. However, you can still use our "REST client libraries":/rest to query it, using the "request() method":https://www.ably.io/documentation/rest/usage#request , which can perform arbitrary REST requests to our API. We highly recommend you do this rather than querying the REST api directly yourself; see "Should I use the REST API directly?":https://ably.freshdesk.com/support/solutions/articles/3000061848-should-i-use-the-rest-api-directly- for why.

For the simplicity of this tutorial, we'll use "Basic authentication":/core-features/authentication#basic-authentication to perform the request. However, it is highly recommended to use "Token auth":/core-features/authentication#token-authentication on client-side applications for "better security and protection of your API key":/root/best-practice-guide#using-api-key-client-side.

In order to receive channel enumeration information, we'll have to make use of the @/channels@ endpoint of "Ably's REST API":rest-api. We'll perform a @GET@ request using the REST library, and the result of this request will be an "HTTPPaginatedResponse":https://www.ably.io/documentation/rest/usage#http-paginated-response object. This allows the results to be returned in a paginated fashion, i.e, it returns a page of results and allows you to automatically request for more pages until all of the available results are returned.

Let's begin with instantiating the Ably REST library using the API key. Create a new file called @main.js@ and add the following to it.

```[javascript]
var ably = new Ably.Rest('<YOUR-API-KEY>');
```

"See this step in Github":https://github.com/ably/tutorials/commit/49cb7e3

Next, let's go ahead and perform the actual REST request using the @request()@ method as follows:

```[javascript]
var url = '/channels';
var resultArea = document.getElementById('result');

//request a list of channels on button click
function enumerateChannels() {
  ably.request('get', url, { limit: 100, by: 'id' }, null, null, handleResultPage);
}

var channelCount = 0;
function handleResultPage(err, resultPage) {
  if(err || !resultPage.success) {
    resultArea.value += 'An error occurred; err = ' + (err || resultPage.errorMessage);
    return;
  }
  if(channelCount === 0) {
    if(resultPage.items.length == 0){
      resultArea.value += "Your app does not have any active channels\n";
      return;
    }
    resultArea.value += "Your app has the following active channels:\n";
  }

  resultPage.items.forEach(function(channel) {
    resultArea.value += (++channelCount) + ". " + channel + "\n";
  })

  if(resultPage.hasNext()) {
    resultPage.next(handleResultPage);
  };
}
```

"See this step in Github":https://github.com/ably/tutorials/commit/62c8ec5

Remember to replace <YOUR-API-KEY> with an actual Ably API key.

In the code above, we have set the REST endpoint to be @/channels@. The @enumerateChannels()@ function is invoked on a button click from the front end. Inside this function, we have made a simple request to Ably's REST API, using Ably's JavaScript REST client library. We can optionally specify a limit to the results returned; you can have a look at the "API reference":/general/channel-lifecycle.textile in the docs to learn more. As mentioned before, the results are returned in the form of an @HTTPPaginatedResponse@; hence we are required to process them page by page. Each page contains one @Channel@ per active channel that exists within an app. Here, all we are interested in is the name of the channel, so we used @by: 'id'@ parameter to request only a list of names. If you want more detailed information about each channel (such as occupancy data), you can remove this parameter. See "our REST API docs":/rest-api#enumeration-rest for documentation on all supported parameters.

h2(#live-demo). Step - 5 Live Demo

    Ably Channel Enumeration using REST API - Demo
    <br/><br/>
    Make sure that you've enabled the channel metadata permission on your API key.
    <br/>
    <div>
        <input type="text" style="width: 30%" id="user-api-key" placeholder="Paste your Ably API key"></input>
        <br/>
        <button id='enumerate' onclick="enumerateChannels()">Enumerate channels</button>
        <br>
        <textarea id="result" rows="30" style="width: 100%; margin-top: 14px; font-family: courier, courier new; background-color: #333; color: orange;  overflow-y: scroll;" autocomplete="off" disabled>
        </textarea>
    </div>

"See the full code in GitHub":https://github.com/ably/tutorials/tree/channel-enumeration-rest

h2(#next-steps). Next Steps

1. If you would like to find out more about how channels and publishing or subscribing to messages work, see the realtime "channels":https://www.ably.io/documentation/realtime/channels & "messages":https://www.ably.io/documentation/realtime/messages documentation.
2. If you would like to check out the other related tutorials to work with channel metadata, see the "Channel Lifecycle Events":/tutorials/channel-lifecycle-events and "Channel Occupancy Events":/tutorials/channel-occupancy-events tutorials.
3. Learn more about "Ably features":https://www.ably.io/features by going through our other "Ably tutorials":https://www.ably.io/tutorials
4. Gain a good technical "overview of how the Ably realtime platform works":https://www.ably.io/documentation/how-ably-works
5. "Get in touch if you need help":https://www.ably.io/contact



<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script lang="text/javascript" src="https://cdn.ably.io/lib/ably-1.js"></script>

<script type="text/javascript">
  var url = '/channels';
  var resultArea = document.getElementById('result');

  //request a list of channels on button click
  function enumerateChannels() {
    var userApiKey = document.getElementById('user-api-key').value;
    var ably = new Ably.Rest(userApiKey);
    ably.request('get', url, { limit: 100, by: 'id' }, null, null, handleResultPage);
  }

  var channelCount = 0;
  function handleResultPage(err, resultPage) {
    if(err || !resultPage.success) {
      resultArea.value += 'An error occurred; err = ' + (err || resultPage.errorMessage);
      return;
    }
    if(channelCount === 0) {
      if(resultPage.items.length == 0){
        resultArea.value += "Your app does not have any active channels\n";
        return;
      }
      resultArea.value += "Your app has the following active channels:\n";
    }

    resultPage.items.forEach(function(channel) {
      resultArea.value += (++channelCount) + ". " + channel + "\n";
    })

    if(resultPage.hasNext()) {
      resultPage.next(handleResultPage);
    };
  }
</script>
