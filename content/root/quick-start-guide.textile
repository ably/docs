---
title: Quickstart Guide
section: root
index: 10
---

Integrating Ably is simple.  In this guide we'll run you through the basics.

Whilst our client libraries do support "every popular language and platform":https://ably.io/download, for simplicity we have used Javascript as the primary language for this guide.

h3. Adding the Ably realtime library

Simply include the Ably Javascript library within the @<head>@ of your HTML page as follows:

bc[html]. <script src="http://cdn.ably.io/lib/ably.min.js"></script>

h3. The basics: Receiving a message

To connect to Ably, you need an API key.  In this example we have provided a temporary API key, however if you are signed up and visit your "application dashboard":https://ably.io/dashboard, you will be able to use your own API key.  If you do not have an API key yet, why not "sign up now for a free app and API key":https://ably.io/#signup.

bc[javascript](code-editor:quick-start-guide/connect). var ably = new Ably.Realtime('{{API_KEY}}');
ably.connection.on('connected', function() {
  alert("That was simple, you're now connected to Ably in real-time");
});

Messages are broadcasted on channels.  Next we will subscribe to a channel and listen for messages that are sent to us from other connected clients or servers.

bc[javascript](code-editor:quick-start-guide/send-message). var channel = ably.channels.get('quickstart');
channel.subscribe('greeting', function(message) {
  alert("Received a greeting message in real-time: " + message.data);
});

h3. The basics: Sending a message

Publishing a message to a channel is extremely straightforward.  As this is commonly performed by both connected devices and servers, here are examples in multiple languages

bc[javascript](code-editor:quick-start-guide/send-message). var channel = ably.channels.get('quickstart');
channel.publish('greeting', 'hello!');

bc[csharp,java]. Channel channel = ably.channel('quickstart');
channel.publish('greeting', 'hello!');

bc[python]. channel = ably.channel('quickstart')
channel.publish('greeting', 'hello!')

bc[ruby]. channel = ably.channel('quickstart')
channel.publish 'greeting', 'hello!'

bc[php]. $channel = $ably.channel('quickstart');
$channel('quickstart').publish('greeting', 'hello!');

bc[ios]. -(Channel) channel = ably.channel('quickstart');
channel('quickstart').publish('greeting', 'hello!');

h3. Sending a message via the REST API

We recommend using our REST client libraries over direct REST API access.  However, if you want to comunnicate directly over HTTP with Ably it's as simple as:

bc[sh]. curl https://rest.ably.io/channels/{{RANDOM_CHANNEL_NAME}}/publish \
  --user "{{API_KEY}}" \
  --data "name=greeting&data=Hello"

Copy and paste the @curl@ command above into your console and try it now.

<script type="text/javascript">
function subscribeToCurlRequest(key) {
  var ably = new Ably.Realtime(key),
      channelName = '{{RANDOM_CHANNEL_NAME}}';
  if (channelName === '{{RANDOM_CHANNEL' + '_NAME}}') { channelName = window.randomChannelName; }
  ably.channels.get(channelName).subscribe('greeting', function(message) {
    alert('That was easy, a message was just received from the REST API on channel "' + channelName + '".\n\nGreeting => ' + message.data);
  });
}

/* API_KEY variable is replaced inline on https://www.ably.io so
  {{API_KEY}} will not equal '{{API_' + 'KEY}}'
  On docs.ably.io, we rely on application.js to call the onApiKeyRetrieved method */
if ('{{API_KEY}}' !== '{{API_' + 'KEY}}') {
  subscribeToCurlRequest('{{API_KEY}}');
} else {
  window.onApiKeyRetrieved = subscribeToCurlRequest;
}
</script>
