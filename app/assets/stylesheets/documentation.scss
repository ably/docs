$doc-body-font: Lucida Sans Unicode, sans-serif;
$linenums-margins: 0 5px 5px 30px;

$code-block-background: #f6f6f6;

@font-face {
  font-family: 'emoji';
  src: url('fonts/EmojiSymbols-Regular.woff') format('woff');
}

.documentation {
  font-family: $doc-body-font;
  font-size: 12px;

  h1 {
    color: #6e7d9a;
    font-size: 30px;
    font-weight: normal;
    line-height: 30px;
    padding-top: 25px;
    &:first-child {
      padding-top: 0;
      margin-top: 0;
      font-weight: bold;
    }
  }

  header {
    h1 {
      padding-top: 0;
      margin-top: 0;
      font-weight: bold;
    }
    .breadcrumb {
      font-size: 20px;
      a {
        color: lighten(#6e7d9a, 10%);
      }
    }
    .separator {
      margin: 0 10px;
      font-size: 20px;
      color: lighten(#6e7d9a, 10%);
    }
  }

  p {
    margin: 0 0 20px 0;
    font-size: 12px;
    line-height: 20px;
    /* if a paragraph precedes a list, don't double space with margins */
    + ul,
    ol {
      margin-top: 0;
    }
    + pre[lang] {
      margin-top: -5px;
    }
  }

  ul,
  ol {
    margin: 20px;
    li > ul {
      margin-bottom: 0;
    }
  }

  /* if a list is within a div tag, remove white space at the top */
  div[lang] {
    ul,
    ol {
      margin: 0 20px 20px 20px;
      &.linenums {
        margin: $linenums-margins;
      }
    }
  }

  li {
    font-size: 12px;
    line-height: 20px;
  }

  ul li {
    list-style-type: square;
  }

  @mixin header-intro-text {
    font-size: 1.2em;
    line-height: 1.2em;
  }

  /* First paragraph after a H1 is emphasised */
  h1,
  header {
    + article > p:first-child {
      @include header-intro-text;
    } /* standard format is header + article > p */
    + p {
      @include header-intro-text;
    } /* allow in-line H1 tag and following p to be emphasised */
  }
  p.larger {
    @include header-intro-text;
  }

  article h1 {
    border-top: 5px dashed #aaa;
    margin: 50px 0 20px 0;
    padding-top: 40px;
  }

  /* H2s indicate sections such as Methods / Attributes of an object */
  h2 {
    border-top: 1px solid #aaa;
    padding-top: 20px;
    font-size: 22px;
    margin-top: 25px;
  }

  h3 {
    font-size: 17px;
    margin-top: 25px;
  }

  /* H4s indicate sections within a method or attribute */
  h4 {
    font-size: 13.5px;
  }

  h5 {
    font-size: 13px;
    color: #444;
    clear: left;
  }

  /* H6s indicate methods or attribute */
  h6 {
    background-color: #a6412c;
    color: white;
    font-size: 12px;
    font-weight: normal;
    display: inline;
    padding: 5px 10px;
    border-radius: 5px;
    font-family: monospace, serif;
    line-height: 40px;
    position: relative;
    top: 15px;
    code {
      background-color: transparent;
      color: #fbb;
    }
  }

  p ~ code.prettyprint,
  h6 + code,
  h6 + code.prettyprint {
    margin-top: 20px;
  }

  /* provide sufficient space after h6 tags and following text */
  h6 ~ p {
    margin-top: 1px;
  }

  /* h6 that follow paragraphs need less space above */
  p ~ h6,
  p ~ div[lang] h6 {
    line-height: 25px;
    top: 0;
  }

  h2,
  h3,
  h6[lang] {
    /* code definition heading is following a section heading yet is inline, so needs to be positioned carefully
       also include support for ul in case a language selector is added, or another h6[lang] tag */
    + h6,
    + ul + h6 {
      position: static;
      line-height: inherit;
      + code,
      + code.prettyprint {
        margin-top: 15px;
      }
      + p {
        margin-top: 20px;
      }
    }
  }

  /* indent all copy under a heading */
  h3 ~ p,
  h3 ~ div[lang] p {
    margin-left: 10px;
  }

  em {
    color: #888;
  }

  // nested lists, don't space our second nest uls
  ul > li > ul {
    margin-top: 0;
  }

  /* block quotes are used for function definitions as code, but are changed at runtime with code blocks as they can be colour coded */
  code.prettyprint {
    border: 1px solid #999;
    background-color: $code-block-background;
    border-radius: 10px;
    padding: 10px;
    margin: 10px 0;
    display: block;
    p {
      margin: 0;
    }
  }

  blockquote {
    margin: 0 0 20px 10px;
    font-family: monospace, serif;
    background-color: $code-block-background;
    border-radius: 10px;
    padding: 5px 10px;
    p:last-child {
      margin: 0;
    }
  }

  table {
    border-collapse: collapse;
    th,
    td {
      border: 1px solid #eee;
      padding: 5px;
    }
  }

  dl {
    @mixin definition-header {
      font-family: $doc-body-font;
      font-weight: bold;
      display: block;
      background-color: #ddd;
      color: #000;
      padding: 0 4px;
    }
    /* make space for anything after a definition list */
    margin-bottom: 3em;
    + dl {
      /* push up consecutive definition lists so only 1em between */
      margin-top: -2em;
    }
    dt {
      clear: left;
      float: left;
      width: 180px;
      font-weight: bold;
      text-align: right;
      padding: 0 10px 0 0;
      color: darken(#6e7d9a, 10%);
      &:before {
        content: '';
      }
      &:after {
        content: ':';
      }
      &.header:after {
        content: '';
      }
      /* title row for a defintion list */
      > strong {
        @include definition-header;
        &:after {
          content: '';
        }
      }
    }
    dd {
      margin: 5px 0 13px 190px;
      /* Default value */
      em {
        color: #000;
        background-color: #eee;
        padding: 2px 5px;
        border-radius: 5px;
        line-height: 23px;
        position: relative;
        top: -2px;
        &:before {
          content: '(default: ';
        }
        &:after {
          content: ')\A';
          white-space: pre;
        }
        code {
          background-color: transparent;
        }
      }
      /* Type definition as last italicised item */
      i:last-child {
        display: block;
        color: #999;
        font-style: normal;
        text-alignt: right;
        code {
          color: #000;
        }
      }
      pre:not([lang]) {
        border: none;
        background-color: transparent;
        padding: 1px;
        font-size: 12px;
        code {
          background-color: transparent;
          color: #009;
          font-size: 1em;
        }
      }
      ul {
        margin: 0;
        li {
          margin: 0 0 0 30px;
        }
        > br {
          display: none;
        }
      }
      /* code block within a dl using a <pre>@code@</pre> */
      pre ol.linenums {
        margin: 0;
        li {
          margin: 0;
          list-style: none;
        }
      }
      /* title row for a defintion list */
      > strong {
        @include definition-header;
      }
    }
  }

  ul.lang-selector {
    margin: 10px 0 0 20px;
    position: relative;
    z-index: 5;
    li {
      list-style: none;
      margin: 0 -1px 0 0;
      float: left;
      border: 1px solid #999;
      border-bottom: 0;
      padding: 2px 10px;
      border-top-left-radius: 5px;
      border-top-right-radius: 5px;
      cursor: pointer;
      &.selected {
        background-color: #eee;
      }
      &.warning {
        border: 0;
        float: right;
        color: #a00;
        cursor: default;
        &:before {
          content: 'âš ';
          font-size: 16px;
          font-weight: bold;
          position: relative;
          top: 3px;
          margin-right: 5px;
        }
      }
    }
  }

  pre {
    border: 1px solid #999;
    border-radius: 5px;
    background-color: $code-block-background;
    padding: 5px 5px 0 10px;
    font-family: monospace, serif;
    font-size: 11px;
  }

  /* more space for method definition unless after a H6 definition anchor */
  code.prettyprint {
    margin-top: 40px;
    margin-bottom: 10px;
  }

  h3 + pre {
    margin-top: 30px;
  }

  /* code examples with language specified */
  pre[lang] {
    margin: 5px 0 10px 0;
    code {
      font-family: monospace, serif;
      font-size: 11px;
      background-color: transparent;
      span {
        font-family: monospace, serif;
      }
    }
    &[lang]::before {
      font-weight: bold;
      background-color: white;
      background-color: rgba(255, 255, 255, 0.5);
      color: rgba(0, 0, 0, 0.5);
      padding: 3px;
      border-radius: 3px;
      float: right;
    }
    &.linenums[lang]::before {
      position: relative;
      left: 5px;
    }
    &.bash.linenums {
      ol {
        margin-left: 15px;
        li {
          list-style-type: none;
        }
      }
      ol > li.L0:first-child::before {
        content: '$';
        position: absolute;
        left: 14px;
        color: #333;
      }
    }
    @each $lang_id in language_ids() {
      &[lang='#{$lang_id}']::before {
        content: '#{language_name($lang_id)}';
      }
    }
    /*&.with-lang-nav::before {
      display: none;
    }*/
  }

  code {
    font-family: monospace, serif;
    background-color: #fde9d7;
  }

  pre code {
    background-color: unset;
  }

  /* code block that potentially has a language nav above it if a language is not supported */
  .with-lang-nav {
    display: none;
    position: relative;
    top: -1px;
    z-index: 1;
    clear: left;
    border-style: dashed;
    padding: 10px;
    border-radius: 5px;
    &:hover {
      background-color: rgba(0, 0, 0, 0.05);
      border-color: #666;
    }
    &.selected {
      display: block;
    }
  }

  /* typically an inline language resource shown if the correct global language is selected */
  .lang-resource {
    outline: 1px dashed rgba(0, 0, 0, 0.075);
    display: none; /* hide by default and let language selector show the correct resource */
    p {
      clear: both;
    }
    &.selected {
      display: block;
    }
    &:hover {
      background-color: rgba(0, 0, 0, 0.03);
      border-color: #ccc;
    }
  }
  span.lang-resource.selected {
    display: inline;
  }
  h6.lang-resource.selected {
    /* h6 blocks are used as code definitions so ensure they remain inline with block surrounding the type */
    display: inline;
  }

  /* used to simply break up consecutive language tags so that they are not grouped */
  .breaker {
    display: none;
  }

  /* div with a language within a dt is used to indicate the language for the dt and dd, so don't treat this as a div */
  dl dt[lang] > div {
    display: inline;
  }

  ol.linenums {
    margin: $linenums-margins;
    li {
      font-size: 10px;
    }
  }

  .tip {
    display: block;
    float: right;
    margin: 10px 0 10px 10px;
    border: 1px solid #aaa;
    background-color: #fbfab4;
    width: 200px;
    padding: 10px;
    border-radius: 5px;
    font-family: 'American Typewriter', 'Trebuchet MS', sans;
    &:before {
      content: 'TIP';
      font-weight: bold;
      color: #a6412c;
      display: block;
      margin-bottom: 5px;
    }
  }

  .beta-notice {
    display: block;
    float: right;
    margin: 10px 0 10px 10px;
    border: 1px solid #aaa;
    background-color: #fbfab4;
    width: 200px;
    padding: 10px;
    border-radius: 5px;
    font-family: 'American Typewriter', 'Trebuchet MS', sans;
    &:before {
      content: 'Beta notice';
      font-weight: bold;
      color: #a6412c;
      display: block;
      margin-bottom: 5px;
    }
  }

  .alert {
    border: 1px solid #aaa;
    background-color: #f00;
    padding: 10px;
    border-radius: 5px;
    font-family: 'American Typewriter', 'Trebuchet MS', sans;
  }

  .prettyprint {
    /* highlight types that are also links */
    a .typ {
      color: red;
    }
    a:hover .typ {
      text-decoration: underline;
    }
  }

  /* Code try it button appears at bottom of pretty printed code block */
  .try-it-button {
    border: 1px solid #666;
    border-radius: 5px;
    padding: 6px;
    margin-bottom: 10px;
    background-color: #fff;
    display: block;
    width: 100px;
    text-align: center;
    &:hover {
      color: #000;
      background-color: #f9f9f9;
    }
  }

  /* in this section navigation at the top of documentation where metadata exists */
  .inline-toc {
    border: 1px solid #fa0;
    background-color: lighten(#fa0, 40%);
    margin-bottom: 20px;
    border-radius: 5px;
    padding: 0;
    font-weight: bold;
    overflow: hidden;
    &:before {
      content: 'In this section';
      display: block;
      margin-bottom: 10px;
      border-bottom: 1px solid #fa0;
      padding: 5px 15px;
    }
    ul {
      margin: 0 30px 5px 0;
      li {
        font-size: 10px;
        font-weight: normal;
        list-style: none;
        a {
          font-size: 10px;
        }
      }
    }
    > ul {
      float: left;
      margin-left: 15px;
      > li {
        font-weight: bold;
        font-size: 11px;
        float: left;
        width: 150px;
        margin-bottom: 20px;
        > ul li {
          margin-left: 15px;
        }
      }
    }
  }
}

$lang-selector-color: #f90;

div.global-lang-container {
  font-family: Georgia, Palatino, Times, 'Times New Roman', sans-serif;
  position: fixed;
  top: 40px;
  left: 280px;
  width: 650px;
  display: block;
  background-color: #fec;
  border: 1px solid lighten($lang-selector-color, 15%);
  border-top: 0;
  border-radius: 5px;
  z-index: 5;
  box-shadow: 0 0 7px $lang-selector-color;
  &:before {
    top: 38px;
    content: 'View docs in:';
    display: block;
    position: fixed;
    font-size: 12px;
    color: lighten($lang-selector-color, 5%);
    padding: 5px;
  }
  ul {
    margin-left: 5em;
    float: left;
    li {
      list-style: none;
      float: left;
      font-size: 14px;
      padding: 1px 8px 3px 8px;
      color: darken($lang-selector-color, 15%);
      cursor: pointer;
      &.selected {
        cursor: default;
        color: white;
        background-color: $lang-selector-color;
        &:hover {
          color: white;
        }
      }
      &:hover {
        color: black;
      }
    }
  }
}

nav.jump-to-nav {
  position: fixed;
  left: 950px;
  top: 36px;
  z-index: 100;
  .form {
    padding: 5px;
    background-color: white;
    border: 1px solid #f30;
    border-radius: 10px;
    select {
      background-color: white;
    }
  }
}

.emoji {
  font-family: 'emoji';
}

#presence-set {
  padding: 15px 15px 15px 45px;
  margin: 20px 0px;
  border: 2px solid #ccc;
  li {
    font-size: 30px;
    .emoji {
      font-size: 40px;
    }
  }
}

.emoji-radios {
  label > input[type='radio'] {
    visibility: hidden;
    position: absolute;
  }
  label > .emoji {
    cursor: pointer;
    font-size: 3em;
    border: 2px solid white;
    padding: 3px;
    margin: 3px;
  }
  label > input:checked + .emoji {
    border: 2px solid black;
  }
}

#version-not-latest-warning {
  margin-bottom: 1em;
  padding: 0.75em;
  background: #f6ff00;
  font-weight: bold;
  border-radius: 5px;
  text-align: center;
  font-size: 110%;
  display: none;
}

#version-container {
  float: right;

  .dropdown {
    display: inline-block;
    margin: 0;

    label,
    ul li {
      display: block;
      background: #ecf0f1;
    }

    label,
    ul li a {
      padding: 10px 15px;
      display: block;
    }

    label:hover,
    ul li:hover {
      color: white;
      cursor: pointer;
    }

    label {
      color: #000000;
      border-radius: 5px;
      position: relative;
      z-index: 2;
      &:hover {
        background: #c46e1d;
      }
      &:after {
        content: 'â–¼';
        font-size: 80%;
        padding-left: 1em;
      }
    }

    input {
      display: none;
    }

    input ~ ul {
      position: relative;
      display: none;
      opacity: 0;
      top: -20px;
      z-index: 1;

      margin: 0;

      > li {
        border-bottom: 1px solid white;
        &:last-child {
          border-radius: 0 0 5px 5px;
          border-bottom: none;
        }
        &:hover {
          background: #ffa54c;
          a {
            color: #fff;
          }
        }
        a {
          color: #000;
        }
      }
    }

    input:checked + label {
      background: #c46e1d;
      color: white;
      border-radius: 5px 5px 0 0;
      &:after {
        content: 'â–²';
      }
    }

    input:checked ~ ul {
      display: block;
      opacity: 1;
      top: 0;
    }

    &.disabled {
      label:hover,
      ul li:hover {
        color: inherit;
        cursor: default;
      }
      input + label,
      input:checked + label {
        background: #ecf0f1;
        border-radius: 5px;
        &:after {
          content: '';
        }
      }
      input:checked ~ ul {
        display: none;
      }
    }

    .animate {
      -webkit-transition: all 0.3s;
      -moz-transition: all 0.3s;
      -ms-transition: all 0.3s;
      -ms-transition: all 0.3s;
      transition: all 0.3s;
      backface-visibility: hidden;
      -webkit-backface-visibility: hidden; /* Chrome and Safari */
      -moz-backface-visibility: hidden; /* Firefox */
      -ms-backface-visibility: hidden; /* Internet Explorer */
    }
  }
}


.docs-helpbox {
  background-color: #F1F1F1;
  padding: 20px;
  border-radius: 4px;

  // title
  strong {
    display: block;
    font-size: 18px;
    margin-bottom: 8px;
    color: #161616;
  }

  // body
  span {
    color: #555555;
  }
}
