An @HttpPaginatedResponse@ is a superset of "@PaginatedResult@":/rest/types#paginated-result, which is a type that represents a page of results plus metadata indicating the relative queries available to it. @HttpPaginatedResponse@ additionally carries information about the response to an HTTP request. It is used when "making custom HTTP requests":/rest/usage#request.

h4.
  default: Properties
  java:    Members
  ruby:    Attributes
  python:  Attributes


- <span lang="default">items</span><span lang="csharp,go">Items</span> := contains a page of results (for example an Array of "@Message@":#message or "@PresenceMessage@":#presence-message objects for a channel history request). <br><span lang="default">__Type: @Array<>@__</span><span lang="python">__Type: @List<>@__</span>
- <span lang="default">statusCode</span><span lang="ruby">status_code</span><span lang="csharp,go">StatusCode</span> := the HTTP status code of the response<br>__Type: @Number@__
- <span lang="default">success</span><span lang="csharp,go">Success</span> := whether that HTTP status code indicates success (equivalent to @200 <= statusCode < 300@)<br>__Type: @Boolean@__
- <span lang="default">headers</span><span lang="csharp,go">Headers</span> := the response's headers<br>__Type: @Object@__

h4. Methods

<div lang="go">
  <!-- TODO: GO_REPLACEMENT. Once functions are added to go, remove divs-->
</div>
<div lang="default">

h6.
  default: first
  csharp: First

bq(definition).
  default:    first(callback("ErrorInfo":/realtime/types#error-info err, "HttpPaginatedResponse":/realtime/types#http-paginated-response resultPage))
  ruby:       "HttpPaginatedResponse":/realtime/types#http-paginated-response first
  php:        "HttpPaginatedResponse":/realtime/types#http-paginated-response first()
  python:     "HttpPaginatedResponse":/realtime/types#http-paginated-response first()
  csharp:     Task<HttpPaginatedResponse<T>> FirstAsync()
  java:       "HttpPaginatedResponse":/realtime/types#http-paginated-response first()
  swift,objc: first(callback: (ARTHttpPaginatedResponse?, ARTErrorInfo?) -> Void)
  go:         First() ("HttpPaginatedResponse":/realtime/types#http-paginated-response, error)

Returns a new @HttpPaginatedResponse@ for the first page of results. <span lang="ruby">When using the Realtime library, the @first@ method returns a "Deferrable":/realtime/types#deferrable and yields an "@HttpPaginatedResponse@":/realtime/types#http-paginated-response.</span><span lang="csharp">The method is asynchronous and returns a Task which needs to be awaited to get the @HttpPaginatedResponse":/realtime/types#http-paginated-response.</span>

h6.
  default: hasNext
  csharp,go: HasNext
  ruby: has_next?
  python: has_next

bq(definition).
  default:  Boolean hasNext()
  ruby:     Boolean has_next?
  php:      Boolean hasNext()
  python:   Boolean has_next()
  csharp:   Boolean HasNext()
  java:     Boolean hasNext()
  swift,objc: Boolean hasNext()
  go:       HasNext() (bool)

Returns @true@ if there are more pages available by calling <span lang="default">@next@</span><span lang="csharp,go">@Next@</span> and returns @false@ if this page is the last page available.

h6.
  default: isLast
  csharp,go: IsLast
  ruby: last?
  python: is_last

bq(definition).
  default:    Boolean isLast()
  ruby:       Boolean last?
  php:        Boolean isLast()
  python:     Boolean is_last()
  csharp:     Boolean IsLast()
  java:       Boolean isLast()
  swift,objc: Boolean isLast()
  go:         IsLast() (bool)

Returns @true@ if this page is the last page and returns @false@ if there are more pages available by calling <span lang="default">@next@</span><span lang="csharp,go">@Next@</span> available.

</div>

h6.
  default: next
  csharp,go: Next

bq(definition).
  default:  next(callback("ErrorInfo":/realtime/types#error-info err, "HttpPaginatedResponse":/realtime/types#http-paginated-response resultPage))
  ruby:     "HttpPaginatedResponse":/realtime/types#http-paginated-response next
  php:      "HttpPaginatedResponse":/realtime/types#http-paginated-response next()
  python:   "HttpPaginatedResponse":/realtime/types#http-paginated-response next()
  csharp:   Task<"HttpPaginatedResponse":/realtime/types#http-paginated-response <T>> NextAsync()
  java:     "HttpPaginatedResponse":/realtime/types#http-paginated-response next()
  swift,objc: next(callback: (ARTHttpPaginatedResponse?, ARTErrorInfo?) -> Void)
  go:       Next() ("HttpPaginatedResponse":/realtime/types#http-paginated-response, error)

Returns a new @HttpPaginatedResponse@ loaded with the next page of results. If there are no further pages, then <span lang="default">@null@</span><span lang="csharp">a blank HttpPaginatedResponse will be returned</span><span lang="java">@Null@</span><span lang="python">@None@</span><span lang="objc,swift,go">@nil@</span> is returned. <span lang="csharp">The method is asynchronous and return a Task which needs to be awaited to get the @HttpPaginatedResponse@</span><span lang="ruby">When using the Realtime library, the @first@ method returns a "Deferrable":/realtime/types#deferrable and yields an "HttpPaginatedResponse":/realtime/types#http-paginated-response.</span>

h4. Example

The @HttpPaginatedResponse@ interface is a superset of @PaginatedResult@, see the "@PaginatedResult@ example":/rest/types/#paginated-result-example
