blang[jsall].
  @Presence@ @action@ is a String with a value matching any of the "@Realtime Presence@ states & events":/realtime/presence#presence-states.

  ```[javascript]
    var PresenceActions = [
      'absent', // (reserved for internal use)
      'present',
      'enter',
      'leave',
      'update'
    ]
  ```

blang[java].
  @io.ably.lib.types.PresenceMessage.Action@ is an enum representing all the "@Realtime Presence@ states & events":/realtime/presence#presence-states.

  ```[java]
    public enum Action {
      ABSENT,  // 0 (reserved for internal use)
      PRESENT, // 1
      ENTER,   // 2
      LEAVE,   // 3
      UPDATE   // 4
    }
  ```

blang[csharp].
  @IO.Ably.PresenceAction@ is an enum representing all the "@Realtime Presence@ states & events":/realtime/presence#presence-states.

  ```[csharp]
    public enum Action {
      Absent,  // 0 (reserved for internal use)
      Present, // 1
      Enter,   // 2
      Leave,   // 3
      Update   // 4
    }
  ```

blang[python].
  @PresenceAction@ is an enum-like class representing all the "@Realtime Presence@ states & events":/realtime/presence#presence-states.

  ```[python]
    class PresenceAction(object):
      ABSENT = 0    # (reserved for internal use)
      PRESENT = 1
      ENTER = 2
      LEAVE = 3
      UPDATE = 4
  ```

blang[php].
  @PresenceMessage Action@ is one of the class constants representing all the "@Realtime Presence@ states & events":/realtime/presence#presence-states.

  ```[php]
    namespace Ably\Models;
    class PresenceMessages {
      const ABSENT  = 0; /* (reserved for internal use) */
      const PRESENT = 1;
      const ENTER   = 2;
      const LEAVE   = 3;
      const UPDATE  = 4;
    }
  ```

  h4. Example usage

  ```[php]
    if ($presenceMessage->action == Ably\Models\PresenceMesage::ENTER) {
      /* do something */
    }
  ```

blang[ruby].
  @Ably::Models::PresenceMessage::ACTION@ is an enum-like value representing all the "@Realtime Presence@ states & events":/realtime/presence#presence-states. @ACTION@ can be represented interchangeably as either symbols or constants.

  h4. Symbol states

  ```[ruby]
    :absent  # => 0 (reserved for internal use)
    :present # => 1
    :enter   # => 2
    :leave   # => 3
    :update  # => 4
  ```

  h4. Constant states

  ```[ruby]
    PresenceMessage::ACTION.Absent  # => 0 (internal use)
    PresenceMessage::ACTION.Present # => 1
    PresenceMessage::ACTION.Enter   # => 2
    PresenceMessage::ACTION.Leave   # => 3
    PresenceMessage::ACTION.Update  # => 4
  ```

  h4. Example usage

  ```[ruby]
    # Example with symbols
    presence.on(:attached) { ... }

    # Example with constants
    presence.on(Ably::Models::PresenceMessage::ACTION.Enter) { ... }

    # Interchangeable
    Ably::Models::PresenceMessage::ACTION.Enter == :enter # => true
  ```

blang[objc,swift].
  @ARTPresenceAction@ is an enum representing all the "@Realtime Presence@ states & events":/realtime/presence#presence-states.

  ```[objc]
    typedef NS_ENUM(NSUInteger, ARTPresenceAction) {
        ARTPresenceAbsent,
        ARTPresencePresent,
        ARTPresenceEnter,
        ARTPresenceLeave,
        ARTPresenceUpdate
    };
  ```

  ```[swift]
    enum ARTPresenceAction : UInt {
      case Absent
      case Present
      case Enter
      case Leave
      case Update
    }
  ```
