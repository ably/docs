---
title: Types
section: rest
index: 500
jump_to:
  REST Data types:
    - AblyException#ably-exception
    - Error Info
    - Message
    - Presence Message
    - Presence action
    - Paginated Result
    - Param
    - Token Details
    - Token Request
    - Stats
  REST Other Types:
    - Auth Options
    - Client Options
    - Channel Options
    - Cipher Params
    - Data Request Query
    - Stats Data Request Query
    - Stats Granularity
    - Token Params
---

The Ably REST client library defines both data types and option types.  Data types are used to represent object such as messages; Option types are used in method arguments.

Where client libraries support both Realtime and REST APIs, the types are shared between both clients.

All types are always classes or their respective equivalent for each language implementation. Options on the other hand, may often support both typed option classes or more flexible key value objects such as a Hash or plain Javascript object.

If you are interested in finding out more about the exact types and options definiions in each language, we recommend you download "our open source libraries":https://www.ably.io/download and review the code.

h2. REST Data types

h3(#ably-exception).
  java:  io.ably.lib.types.AblyException
  ruby:  Ably::Exceptions::BaseAblyException
  python: AblyException
  php:   Ably\Exceptions\AblyException
  csharp: IO.Ably.AblyException

blang[java,php,csharp].
  <%= partial 'types/_ably_exception', indent: 2, skip_first_indent: true %>

blang[ruby,python].
  <%= partial 'types/_base_ably_exception', indent: 2, skip_first_indent: true %>

blang[jsall,ruby,php,java,objc,swift].
  h3(#error-info).
    default: ErrorInfo
    objc,swift: ARTErrorInfo
    java:    io.ably.lib.types.ErrorInfo
    ruby:    Ably::Models::ErrorInfo
    php:     Ably\Models\ErrorInfo
    csharp:  IO.Ably.ErrorInfo

  <%= partial 'types/_error_info', indent: 2, skip_first_indent: true %>

h3(#message).
  default: Message
  objc,swift: ARTMessage
  java:    io.ably.lib.types.Message
  ruby:    Ably::Models::Message
  php:     Ably\Models\Message
  csharp:  IO.Ably.Message

<%= partial 'types/_message' %>

h3(#presence-action).
  default: Presence action
  objc,swift: ARTPresenceAction
  java:    io.ably.lib.types.PresenceMessage.Action
  ruby:    Ably::Models::PresenceMessage::ACTION
  php:     Ably\Models\PresenceMessage Action
  csharp:  IO.Ably.PresenceAction

<%= partial 'types/_presence_action' %>

h3(#presence-message).
  default: PresenceMessage
  objc,swift: ARTPresenceMessage
  java:    io.ably.lib.types.PresenceMessage
  ruby:    Ably::Models::PresenceMessage
  php:     Ably\Models\PresenceMessage
  csharp:  IO.Ably.PresenceMessage

<%= partial 'types/_presence_message' %>

h3(#paginated-result).
  default: PaginatedResult
  objc,swift: ARTPaginatedResult
  java:    io.ably.lib.types.PaginatedResult
  ruby:    Ably::Models::PaginatedResult
  php:     Ably\Models\PaginatedResult
  csharp:  IO.Ably.PaginatedResult

<%= partial 'types/_paginated_result' %>

h3(#param).
  java:    io.ably.lib.types.Param

blang[java].
  <%= partial 'types/_param', indent: 2, skip_first_indent: true %>

h3(#token-details).
  default: TokenDetails
  objc,swift: ARTTokenDetails
  java:    io.ably.lib.types.TokenDetails
  ruby:    Ably::Models::TokenDetails
  php:     Ably\Models\TokenDetails
  csharp:  IO.Ably.TokenDetails

<%= partial 'types/_token_details' %>

h3(#token-request).
  default: TokenRequest
  objc,swift: ARTTokenRequest
  java:    io.ably.lib.types.TokenRequest
  ruby:    Ably::Models::TokenRequest
  php:     Ably\Models\TokenRequest
  csharp:  IO.Ably.TokenRequest

<%= partial 'types/_token_request' %>

h3(#stats).
  default: Stats object
  objc,swift: ARTStats
  java:    io.ably.lib.types.Stats
  ruby:    Ably::Models::Stats
  php:     Ably\Models\Stats
  csharp:  IO.Ably.Stats

<%= partial 'types/_stats' %>

h3(#stats-granularity).
  objc,swift: ARTStatsGranularity

<%= partial 'types/_stats_granularity' %>

h3(#data-request-query).
  csharp: IO.Ably.DataRequestQuery

blang[csharp].
  <%= partial 'types/_data_request_query', indent: 2, skip_first_indent: true %>

h2. REST Other types

h3(#auth-options).
  default:   AuthOptions Object
  objc,swift: ARTAuthOptions
  ruby:      AuthOptions Hash
  php:       AuthOptions Array
  java:      io.ably.lib.rest.Auth.AuthOptions
  csharp:    IO.Ably.AuthOptions

<%= partial 'types/_auth_options' %>

h3(#client-options).
  default:   ClientOptions Object
  objc,swift: ARTClientOptions
  ruby:      ClientOptions Hash
  php:       ClientOptions Array
  java:      io.ably.lib.types.ClientOptions
  csharp:    IO.Ably.ClientOptions

<%= partial 'types/_client_options' %>
<%= partial 'types/_rest_client_options' %>

h3(#channel-options).
  default:   ChannelOptions Object
  objc,swift: ARTChannelOptions
  ruby:      ChannelOptions Hash
  php:       ChannelOptions Array
  java:      io.ably.lib.types.ChannelOptions
  csharp:    IO.Ably.ChannelOptions

<%= partial 'types/_channel_options' %>

h3(#cipher-params).
  default: CipherParams
  objc,swift: ARTCipherParams
  ruby:    CipherParams Hash
  php:     CipherParams Array
  java:    io.ably.lib.util.Crypto.CipherParams
  csharp:  IO.Ably.CipherParams

<%= partial 'types/_cipher_params' %>

h3(#stats-data-request-query).
  csharp: IO.Ably.StatsDataRequestQuery

blang[csharp].
  <%= partial 'types/_data_request_query', indent: 2, skip_first_indent: true %>

h3(#token-params).
  default:   TokenParams Object
  objc,swift: ARTTokenParams
  ruby:      TokenParams Hash
  php:       TokenParams Array
  java:      io.ably.lib.rest.Auth.TokenParams
  csharp:    IO.Ably.TokenParams

<%= partial 'types/_token_params' %>
