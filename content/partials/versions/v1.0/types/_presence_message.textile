A @PresenceMessage@ represents an individual presence update that is sent to or received from Ably.

h4.
  default: Properties
  java:    Members
  ruby:    Attributes

- <div lang="java">action</div> := the event signified by a PresenceMessage. See "@PresenceMessage.action@":/realtime/types#presence-action<br>__Type: @enum { ABSENT, PRESENT, ENTER, LEAVE, UPDATE }@__
- <div lang="csharp">Action</div> := the event signified by a PresenceMessage. See "@PresenceMessage.action@":/realtime/types#presence-action<br>__Type: @enum { Absent, Present, Enter, Leave, Update }@__
- <div lang="jsall">action</div> := the event signified by a PresenceMessage. See "@Presence action@":/realtime/types#presence-action<br>__Type: @int enum { ABSENT, PRESENT, ENTER, LEAVE, UPDATE }@__
- <div lang="python">action</div> := the event signified by a PresenceMessage. See "@PresenceAction@":/realtime/types#presence-action<br>__Type: @int enum { ABSENT, PRESENT, ENTER, LEAVE, UPDATE }@__
- <div lang="ruby">action</div> := the event signified by a PresenceMessage. See "@PresenceMessage::ACTION@":/realtime/types#presence-action<br>__Type: @enum { :absent, :present, :enter, :leave, :update }@__
- <div lang="php">action</div> := the event signified by a PresenceMessage. See "@PresenceMessage::ACTION@":/realtime/types#presence-action<br>__Type: @const PresenceMessage::ABSENT,PRESENT,ENTER,LEAVE,UPDATE@__
- <div lang="objc,swift">action</div> := the event signified by a PresenceMessage. See "@PresenceMessage.action@":/realtime/types#presence-action<br>__Type: @ARTPresenceAction@__

- <div lang="java">data</div> := The presence update payload, if provided<br>__Type: @String@, @ByteArray@, @JSONObject@, @JSONArray@__
- <div lang="csharp">Data</div> := The presence update payload, if provided<br>__Type: @String@, @byte[]@, plain C# object that can be converted to Json__
- <div lang="jsall">data</div> := The presence update payload, if provided<br>__Type: @String@, @StringBuffer@, @JSON Object@__
- <div lang="ruby">data</div> := The presence update payload, if provided<br>__Type: @String@, @Binary@ (ASCII-8BIT String), @Hash@, @Array@__
- <div lang="python">data</div> := The presence update payload, if provided<br>__Type: @String@, @Bytearray@, @Dict@, @List@__
- <div lang="swift">data</div> := The message payload, if provided<br>__Type: @String@, @NSData@, @Dictionary@, @Array@__
- <div lang="objc">data</div> := The message payload, if provided<br>__Type: @NSString *@, @NSData *@, @NSDictionary *@, @NSArray *@__
- <div lang="php">data</div> := The message payload, if provided<br>__Type: @String@, @Binary String@, @Associative Array@, @Array@__

- <span lang="default">id</span><span lang="csharp">Id</span> := Unique ID assigned by Ably to this presence update<br>__Type: @String@__

- <span lang="default">clientId</span><span lang="ruby,python">client_id</span><span lang="csharp">ClientId</span> := The client ID of the publisher of this presence update<br>__Type: @String@__

- <span lang="default">connectionId</span><span lang="ruby,python">connection_id</span><span lang="csharp">ConnectionId</span> := The connection ID of the publisher of this presence update<br>__Type: @String@__

- <span lang="default">timestamp</span><span lang="csharp">Timestamp</span> := Timestamp when the presence update was received by Ably<span lang="default">, as milliseconds since the epoch</span><span lang="ruby,objc,swift"></span>.<br>__Type: <span lang="default">@Integer@</span><span lang="java">@Long Integer@</span><span lang="csharp">@DateTimeOffset@</span><span lang="ruby">@Time@</span><span lang="objc,swift">@NSDate@</span>__

- <span lang="default">encoding</span><span lang="csharp">Encoding</span> := This will typically be empty as all presence updates received from Ably are automatically decoded client-side using this value. However, if the message encoding cannot be processed, this attribute will contain the remaining transformations not applied to the @data@ payload<br>__Type: @String@__

h3.
  default: PresenceMessage constructors

h4(#presence-from-encoded).
  default: PresenceMessage.fromEncoded

bq(definition).
  default: PresenceMessage.fromEncoded(Object encodedPresMsg, ChannelOptions channelOptions?) -> PresenceMessage

A static factory method to create a "@PresenceMessage@":/realtime/types#presence-message from a deserialized @PresenceMessage@-like object encoded using Ably's wire protocol.

h4. Parameters

- encodedPresMsg := a @PresenceMessage@-like deserialized object.<br>__Type: @Object@__
- channelOptions := an optional "@ChannelOptions@":/realtime/types#channel-options. If you have an encrypted channel, use this to allow the library can decrypt the data.<br>__Type: @Object@__

h4. Returns

A "@PresenceMessage@":/realtime/types#presence-message object

h4(#presence-from-encoded-array).
  default: PresenceMessage.fromEncodedArray

bq(definition).
  default: PresenceMessage.fromEncodedArray(Object[] encodedPresMsgs, ChannelOptions channelOptions?) -> PresenceMessage[]

A static factory method to create an array of "@PresenceMessages@":/realtime/types#presence-message from an array of deserialized @PresenceMessage@-like object encoded using Ably's wire protocol.

h4. Parameters

- encodedPresMsgs := an array of @PresenceMessage@-like deserialized objects.<br>__Type: @Array@__
- channelOptions := an optional "@ChannelOptions@":/realtime/types#channel-options. If you have an encrypted channel, use this to allow the library can decrypt the data.<br>__Type: @Object@__

h4. Returns

An @Array@ of "@PresenceMessage@":/realtime/types#presence-message objects
