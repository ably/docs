---
title: Types
meta_description: "Client Library SDK REST API Reference Types documentation."
meta_keywords: "Ably, Ably REST, API Reference, REST SDK, REST interface, REST API, Types"
section: api
index: 110
languages:
  - javascript
  - nodejs
  - php
  - python
  - ruby
  - java
  - swift
  - objc
  - csharp
  - go
  - flutter
redirect_from:
  - /docs/api/versions/v1.1/rest-sdk/types
  - /docs/api/versions/v1.0/rest-sdk/types
  - /docs/api/versions/v0.8/rest-sdk/types
  - /docs/rest/types
---

The Ably REST client library defines both data types and option types.  Data types are used to represent object such as messages; Option types are used in method arguments.

Where client libraries support both Realtime and REST APIs, the types are shared between both clients.

All types are always classes or their respective equivalent for each language implementation. Options on the other hand, may often support both typed option classes or more flexible key value objects such as a Hash or plain JavaScript object.

If you are interested in finding out more about the exact types and options definitions in each language, we recommend you download "our open source libraries":https://ably.com/download and review the code.

h2. REST Data types

h3(#ably-exception).
  java:  io.ably.lib.types.AblyException
  ruby:  Ably::Exceptions::BaseAblyException
  python: AblyException
  php:   Ably\Exceptions\AblyException
  csharp: IO.Ably.AblyException

blang[java,php,csharp].
  <%= partial partial_version('types/_ably_exception'), indent: 2, skip_first_indent: true %>

blang[ruby,python].
  <%= partial partial_version('types/_base_ably_exception'), indent: 2, skip_first_indent: true %>

<%= partial partial_version('types/_channel_details') %>

h3(#error-info).
  default: ErrorInfo
  objc,swift: ARTErrorInfo
  java:    io.ably.lib.types.ErrorInfo
  ruby:    Ably::Models::ErrorInfo
  php:     Ably\Models\ErrorInfo
  csharp:  IO.Ably.ErrorInfo
  flutter: ably.ErrorInfo

<%= partial partial_version('types/_error_info'), indent: 2, skip_first_indent: true %>

h3(#message).
  default: Message
  objc,swift: ARTMessage
  java:    io.ably.lib.types.Message
  ruby:    Ably::Models::Message
  php:     Ably\Models\Message
  csharp:  IO.Ably.Message

<%= partial partial_version('types/_message') %>

h3(#presence-message).
  default: PresenceMessage
  objc,swift: ARTPresenceMessage
  java:    io.ably.lib.types.PresenceMessage
  ruby:    Ably::Models::PresenceMessage
  php:     Ably\Models\PresenceMessage
  csharp:  IO.Ably.PresenceMessage

<%= partial partial_version('types/_presence_message') %>

h3(#presence-action).
  default: Presence action
  objc,swift: ARTPresenceAction
  java:    io.ably.lib.types.PresenceMessage.Action
  ruby:    Ably::Models::PresenceMessage::ACTION
  php:     Ably\Models\PresenceMessage Action
  csharp:  IO.Ably.PresenceAction

<%= partial partial_version('types/_presence_action') %>

h3(#paginated-result).
  default: PaginatedResult
  objc,swift: ARTPaginatedResult
  java:    io.ably.lib.types.PaginatedResult
  ruby:    Ably::Models::PaginatedResult
  php:     Ably\Models\PaginatedResult
  csharp:  IO.Ably.PaginatedResult

<%= partial partial_version('types/_paginated_result') %>

h3(#http-paginated-response).
  default: HttpPaginatedResponse

<%= partial partial_version('types/_http_paginated_response') %>

h3(#param).
  java:    io.ably.lib.types.Param

blang[java].
  <%= partial partial_version('types/_param'), indent: 2, skip_first_indent: true %>

h3(#token-details).
  default: TokenDetails
  objc,swift: ARTTokenDetails
  java:    io.ably.lib.types.TokenDetails
  ruby:    Ably::Models::TokenDetails
  php:     Ably\Models\TokenDetails
  csharp:  IO.Ably.TokenDetails

<%= partial partial_version('types/_token_details') %>

h3(#token-request).
  default: TokenRequest
  objc,swift: ARTTokenRequest
  java:    io.ably.lib.types.TokenRequest
  ruby:    Ably::Models::TokenRequest
  php:     Ably\Models\TokenRequest
  csharp:  IO.Ably.TokenRequest

<%= partial partial_version('types/_token_request') %>

h3(#stats).
  default: Stats object
  objc,swift: ARTStats
  java:    io.ably.lib.types.Stats
  ruby:    Ably::Models::Stats
  php:     Ably\Models\Stats
  csharp:  IO.Ably.Stats

<%= partial partial_version('types/_stats') %>

h3(#stats-granularity).
  objc,swift: ARTStatsGranularity
  jsall:      StatsIntervalGranularity
  csharp:     StatsIntervalGranularity

<%= partial partial_version('types/_stats_granularity') %>

h3(#paginated-request-params).
  csharp: IO.Ably.PaginatedRequestParams

blang[csharp].
  <%= partial partial_version('types/_history_request_params'), indent: 2, skip_first_indent: true %>

blang[jsall].

  h3(#batch-publish-spec).
    jsall: BatchPublishSpec

  <%= partial partial_version('types/_batch_publish_spec') %>

  h3(#batch-result).
    jsall: BatchResult

  <%= partial partial_version('types/_batch_result') %>

  h3(#batch-publish-success-result).
    jsall: BatchPublishSuccessResult

  <%= partial partial_version('types/_batch_publish_success_result') %>

  h3(#batch-publish-failure-result).
    jsall: BatchPublishFailureResult

  <%= partial partial_version('types/_batch_publish_failure_result') %>

  h3(#batch-presence-success-result).
    jsall: BatchPresenceSuccessResult

  <%= partial partial_version('types/_batch_presence_success_result') %>

  h3(#batch-presence-failure-result).
    jsall: BatchPresenceFailureResult

  <%= partial partial_version('types/_batch_presence_failure_result') %>

  h3(#token-revocation-success-result).
    jsall: TokenRevocationSuccessResult

  <%= partial partial_version('types/_token_revocation_success_result') %>

  h3(#token-revocation-failure-result).
    jsall: TokenRevocationFailureResult

  <%= partial partial_version('types/_token_revocation_failure_result') %>

h2. REST Other types

h3(#auth-options).
  default:   AuthOptions Object
  objc,swift: ARTAuthOptions
  ruby:      AuthOptions Hash
  php:       AuthOptions Array
  java:      io.ably.lib.rest.Auth.AuthOptions
  csharp:    IO.Ably.AuthOptions

<%= partial partial_version('types/_auth_options') %>

h3(#client-options).
  default:   ClientOptions Object
  objc,swift: ARTClientOptions
  ruby:      ClientOptions Hash
  php:       ClientOptions Array
  java:      io.ably.types.ClientOptions
  csharp:    IO.Ably.ClientOptions

<%= partial partial_version('types/_rest_client_options_intro') %>
<%= partial partial_version('types/_client_options') %>
<%= partial partial_version('types/_rest_client_options') %>

h3(#channel-options).
  default:   ChannelOptions Object
  objc,swift: ARTChannelOptions
  ruby:      ChannelOptions Hash
  php:       ChannelOptions Array
  java:      io.ably.lib.types.ChannelOptions
  csharp:    IO.Ably.ChannelOptions

<%= partial partial_version('types/_channel_options') %>

h3(#cipher-params).
  default: CipherParams
  objc,swift: ARTCipherParams
  ruby:    CipherParams Hash
  php:     CipherParams Array
  java:    io.ably.lib.util.Crypto.CipherParams
  csharp:  IO.Ably.CipherParams

<%= partial partial_version('types/_cipher_params') %>

h3(#stats-request-params).
  csharp: IO.Ably.StatsRequestParams

blang[csharp].
  <%= partial partial_version('types/_stats_request_params'), indent: 2, skip_first_indent: true %>

h3(#token-params).
  default:   TokenParams Object
  objc,swift: ARTTokenParams
  ruby:      TokenParams Hash
  php:       TokenParams Array
  java:      io.ably.lib.rest.Auth.TokenParams
  csharp:    IO.Ably.TokenParams

<%= partial partial_version('types/_token_params') %>

blang[jsall].

  h3(#token-revocation-target-specifier).
    jsall: TokenRevocationTargetSpecifier

  <%= partial partial_version('types/_token_revocation_target_specifier') %>

  h3(#token-revocation-options).
    jsall: TokenRevocationOptions

  <%= partial partial_version('types/_token_revocation_options') %>
