---
title: Protocol Adapters
meta_description: "Clients can use the Ably network using SSE and MQTT protocol adapters. This is especially useful where an Ably Client Library SDK is not available for your language of choice, or where platform resource constraints prohibit use of a Client Library SDK."
meta_keywords: "SSE, MQTT, IoT, thin client, protocol adapter, lightweight clients, Arduino, Raspberry Pi, wearable"
section: protocol-adapters
index: 0
jump_to:
  Help with:
    - MQTT#mqtt
    - SSE#sse
---

Ably Client Library SDKs are the recommended method for connecting to Ably because they offer support for a comprehensive set of Ably features, such as automatic "connection management":/realtime/connection, "authentication token renewal":/realtime/authentication#token-authentication and "presence":/realtime/presence.

Protocol adapters offer an alternative method for connecting to Ably. The advantage to protocol adapters is that they require fewer resources in terms of memory and network overhead such as in smaller footprint devices, or on a platform where an Ably Client Library SDK isn't available such as an Arduino-based IoT wearable. The potential drawback to consider when evaluating protocol adapters is that they do not support the full set of Ably features, for example the MQTT protocol adapter does not support presence, and the SSE protocol adapter does not support automatic token renewal.

A full list of Ably Client Library SDKs can be found on the "SDK page":https://ably.com/download, and features supported by each SDK can be found in the "features matrix":https://ably.com/download/sdk-feature-support-matrix.

There are two available protocol adapters for use with Ably:

1. "MQTT":#mqtt
2. "SSE":#sse

h2(#mqtt). MQTT

"MQTT":https://mqtt.org/ is an "OASIS":https://www.oasis-open.org/ standard messaging protocol for the Internet of Things (IoT). It is designed as an extremely lightweight publish/subscribe messaging transport that is ideal for connecting remote devices with a small code footprint and minimal network bandwidth.

The Ably MQTT protocol adapter provides an interface between an MQTT client and Ably. Being a protocol designed for small systems and IoT devices, MQTT has a low overhead in terms of system resource requirements. MQTT libraries are widely available, and support a range of languages such as C/C++, Python, and Rust. Because of this, client platforms and programming languages where an Ably Client Library SDK is not available, can still access the Ably platform through the MQTT client and the Ably MQTT protocol adapter.

MQTT clients can subscribe and publish to Ably channels. Any client that supports MQTT can therefore leverage Ably's realtime network, with some constraints. 

For more information on Ably's MQTT protocol adapter see the "MQTT documentation":/mqtt.

h2(#sse). SSE

Server-Sent Events (SSE) is a functionality built into all modern browsers. Because "SSE support":https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events is built-in, it does not require the loading of any additional libraries, such as is the case if you were to use the Ably "JavaScript Client Library SDK":https://github.com/ably/ably-js. The Ably SSE protocol adapter allows the browser to subscribe to a realtime stream of events from an Ably channel. 

In addition to the SSE endpoint, Ably also provides a raw HTTP streaming endpoint. This is similar to the SSE endpoint, but uses JSON envelopes instead of SSE events.

Note that SSE is for subscribing to events only and you cannot publish to a channel. You will have also to handle certain operations in your client code, such as token renewal.

For more information on Ably's SSE protocol adapter see the "SSE documentation":/protocols/sse.
